within ;
package BaseCase
  package Vaartstraat
    model North_South_Zone
      "Twee over elkaar liggende kamers op het vierde verdiep. Kamer 0341 en 0356"
      import Thesis_practice;
      import Thesis_practice;
      IDEAS.Buildings.Components.RectangularZoneTemplate _0241(
        redeclare package Medium = IDEAS.Media.Air,
        useLigCtrInput=true,
        n50=0.5,
        redeclare Occupancy.OccSched_Residence occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=true,
        hasInt=false,
        aziA=-2.8099800957109,
        l=3.52,
        w=5.35,
        lInt=0.4,
        h=3.52,
        A_winA=3.158,
        redeclare Walls.Outer_wall conTypA,
        redeclare Walls.Inner_wall_neighbour conTypB,
        redeclare Walls.Inner_wall_hall conTypC,
        redeclare Walls.Inner_wall_hall conTypD,
        redeclare Walls.Inner_ceiling conTypCei,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Walls.Vaartstraat_Mass_wall conTypInt,
        redeclare Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingA) "Room north"
        annotation (Placement(transformation(extent={{-12,10},{16,38}})));
      inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
            Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
        annotation (Placement(transformation(extent={{-100,78},{-80,98}})));
       Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
            (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
             < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
        "Number of occupants present"
        annotation (Placement(transformation(extent={{46,28},{26,48}})));
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-74,82},{-58,98}})));
      IDEAS.Buildings.Components.RectangularZoneTemplate _0256(
        redeclare package Medium = IDEAS.Media.Air,
        useLigCtrInput=true,
        n50=0.5,
        redeclare Occupancy.OccSched_Residence occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=false,
        hasWinC=true,
        hasWinD=false,
        hasInt=false,
        aziA=-2.8099800957109,
        l=3.52,
        w=5.35,
        lInt=0.4,
        h=3.52,
        A_winA=3.158,
        A_winC=3.158,
        A_winD=3.158,
        redeclare Walls.Inner_wall_hall conTypA,
        redeclare Walls.Inner_wall_neighbour conTypB,
        redeclare Walls.Outer_wall conTypC,
        redeclare Walls.Outer_wall conTypD,
        redeclare Walls.Inner_ceiling conTypCei,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Walls.Vaartstraat_Mass_wall conTypInt,
        redeclare Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingA,
        redeclare Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingC,
        redeclare Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingD,
        hasCavityC=true) "Room north"
        annotation (Placement(transformation(extent={{-12,-42},{16,-14}})));

       Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
            (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
             < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
        "Number of occupants present"
        annotation (Placement(transformation(extent={{50,-30},{30,-10}})));
    equation
      connect(_0241.uLig, light41.y)
        annotation (Line(points={{18.8,33.8},{25,33.8},{25,38}}, color={0,0,127}));
      connect(light56.y, _0256.uLig) annotation (Line(points={{29,-20},{28,-20},{28,
              -18.2},{18.8,-18.2}}, color={0,0,127}));
      connect(_0241.proBusCei[1], _0241.proBusFlo[1]) annotation (Line(
          points={{1.72,32.4},{1.72,24.2},{2,24.2},{2,15.6}},
          color={255,204,51},
          thickness=0.5));
      connect(_0241.proBusB[1], _0241.proBusD[1]) annotation (Line(
          points={{14.6,32.4},{7.3,32.4},{7.3,14.2},{-11.44,14.2}},
          color={255,204,51},
          thickness=0.5));
      connect(_0256.proBusA[1], _0241.proBusC[1]) annotation (Line(
          points={{-6.4,-15.4},{-6.4,-2.7},{11.52,-2.7},{11.52,10.28}},
          color={255,204,51},
          thickness=0.5));
      connect(_0256.proBusD[1], _0256.proBusB[1]) annotation (Line(
          points={{-11.44,-37.8},{7.28,-37.8},{7.28,-19.6},{14.6,-19.6}},
          color={255,204,51},
          thickness=0.5));
      connect(_0256.proBusCei[1], _0256.proBusFlo[1]) annotation (Line(
          points={{1.72,-19.6},{1.72,-27.8},{2,-27.8},{2,-36.4}},
          color={255,204,51},
          thickness=0.5));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
            coordinateSystem(preserveAspectRatio=false)),
        experiment(StopTime=31536000));
    end North_South_Zone;

    package Materials "Eigenschappen van muurmateriaal"

      record reinforced_concrete = IDEAS.Buildings.Data.Interfaces.Material (
          k=1.14,
          c=1000,
          rho=1400,
          epsLw=0.88,
          epsSw=0.55) "Gewapend beton face A: noorden van 0241 (outer wall)"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Aerated_concrete=IDEAS.Buildings.Data.Interfaces.Material (
          k=0.2,
          c=840,
          rho=700,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Brick =          IDEAS.Buildings.Data.Interfaces.Material (
          k=0.5469,
          c=1000,
          rho=1400,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Chape =          IDEAS.Buildings.Data.Interfaces.Material (
          k=1.3,
          c=840,
          rho=1800,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Gypsumplas =     IDEAS.Buildings.Data.Interfaces.Material (
          k=0.52,
          c=840,
          rho=1200,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Heavy_Concrete = IDEAS.Buildings.Data.Interfaces.Material (
          k=1.7,
          c=840,
          rho=2200,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Linoleum =       IDEAS.Buildings.Data.Interfaces.Material (
          k=0.19,
          c=1400,
          rho=1200,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Plasterboard =   IDEAS.Buildings.Data.Interfaces.Material (
          k=0.53,
          c=840,
          rho=1200,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Polyueretha =    IDEAS.Buildings.Data.Interfaces.Material (
          k=0.022,
          c=1470,
          rho=35,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Thermogran =     IDEAS.Buildings.Data.Interfaces.Material (
          k=0.04,
          c=840,
          rho=200,
          epsLw=0.88,
          epsSw=0.55)
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Glass_Vaartstraat =
                     IDEAS.Buildings.Data.Interfaces.Material (
          k=0.96,
          c=750,
          rho=2500,
          epsLw=IDEAS.Buildings.Data.Constants.epsLw_glass,
          epsSw=IDEAS.Buildings.Data.Constants.epsSw_glass) "Glass" annotation (Documentation(info="<html>
<p>
Thermal properties of glass.
</p>
</html>"));
      record Wood_Vaartstraat =
                      IDEAS.Buildings.Data.Interfaces.Material (
          k=0.18,
          c=2000,
          rho=700,
          epsLw=0.86,
          epsSw=0.55) "Wood to model thermal mass within zone"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
    end Materials;

    package Walls
      "Materiaalstructuur van alle muren: diktes en materiaalvolgorde (OUT to IN)"

      record Outer_wall "Vaartstraat: outerwall"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={
          Vaartstraat.Materials.Brick(d=0.09),
          IDEAS.Buildings.Data.Materials.Air(d=0.06),
          Vaartstraat.Materials.Polyueretha(d=0.2),
          Vaartstraat.Materials.Heavy_Concrete(d=0.15),
          Vaartstraat.Materials.Gypsumplas(d=0.01)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Outer_wall;

      record Inner_floor "Vaartstraat: vloer"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          locGain={1},
          mats={
          Vaartstraat.Materials.Heavy_Concrete(d=0.05),
          Vaartstraat.Materials.Heavy_Concrete(d=0.05),
          Vaartstraat.Materials.Thermogran(d=0.05),
          Vaartstraat.Materials.Chape(d=0.06),
          Vaartstraat.Materials.Linoleum(d=0.01)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_floor;

      record Inner_ceiling
        "Vaartstraat: ceiling (gespiegelde volgorde van vloer)"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={
          Vaartstraat.Materials.Linoleum(d=0.01),
          Vaartstraat.Materials.Chape(d=0.06),
          Vaartstraat.Materials.Thermogran(d=0.05),
          Vaartstraat.Materials.Heavy_Concrete(d=0.1)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_ceiling;

      record Inner_wall_hall "Vaartstraat: muur grenzend aan de hall"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={
          Vaartstraat.Materials.Aerated_concrete(d=0.24)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_wall_hall;

      record Inner_wall_neighbour "Vaartstraat: muur grenzend aan de buren"
        extends IDEAS.Buildings.Data.Interfaces.Construction(mats={
              Vaartstraat.Materials.Plasterboard(d=0.13)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_wall_neighbour;

      record Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006 =
          IDEAS.Buildings.Data.Interfaces.Glazing (
      final nLay=5,
      final mats={ IDEAS.Buildings.Data.Materials.Glass(d=0.004, epsLw_b=0.4),
       IDEAS.Buildings.Data.Materials.Krypton(d=0.01, epsLw_b=0.4),
       IDEAS.Buildings.Data.Materials.Glass(d=0.004, epsLw_b=0.4),
       IDEAS.Buildings.Data.Materials.Krypton(d=0.01, epsLw_b=0.4),
       IDEAS.Buildings.Data.Materials.Glass(d=0.004, epsLw_b=0.4)},final SwTrans=[0,0.456;
      10,0.456;
      20,0.450;
      30,0.445;
      40,0.437;
      50,0.415;
      60,0.359;
      70,0.250;
      80,0.111;
      90,0.000],
      final SwAbs= [0,0.149, 0.0,0.013, 0.0,0.128;
      10,0.150, 0.0,0.014, 0.0,0.128;
      20,0.153, 0.0,0.014, 0.0,0.129;
      30,0.155, 0.0,0.014, 0.0,0.129;
      40,0.155, 0.0,0.015, 0.0,0.127;
      50,0.157, 0.0,0.015, 0.0,0.123;
      60,0.163, 0.0,0.016, 0.0,0.112;
      70,0.168, 0.0,0.016, 0.0,0.088;
      80,0.140, 0.0,0.016, 0.0,0.046;
      90,0.000, 0.0,0.000, 0.0,0.000],final SwTransDif=0.359,
      final SwAbsDif={0.163,0.0,0.016,0.0,0.112},
      final U_value=0.56,
      final g_value=0.474)
        "Vaartstraat outerwindow: SaintGobainCLIMATOPSOLARKR4_10_4_10_4(U-design =0.56 g-design =0.474)";
      record Vaartstraat_Mass_wall
        "Vaartstraat: interne muur om thermische massa te modelleren"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Case_O4.Materials_O4.Wood_O4(d=0.143)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Vaartstraat_Mass_wall;
    end Walls;
    annotation ();
  end Vaartstraat;

  package Occupancy "Occupancy schedules"

    model OccSched_Office "Simple occupancy schedule"
       extends
        IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(       final useInput=false);

       parameter Real k "Number of occupants";
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-20,20},{0,40}})));
       Modelica.Blocks.Sources.RealExpression occ(y=if calTim.weekDay < 6 and (
             calTim.hour > 7 and calTim.hour < 18) then k else 0)
         "Number of occupants present"
         annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
    equation
       connect(occ.y, nOcc)
         annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
    end OccSched_Office;

    model OccSched_Residence "Simple occupancy schedule"
       extends
        IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(       final useInput=false);

       parameter Real k "Number of occupants";
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-20,20},{0,40}})));
       Modelica.Blocks.Sources.RealExpression occ(y=if (calTim.weekDay < 6 and
             (calTim.hour > 14 or calTim.hour < 10)) or (calTim.weekDay == 7 and calTim.hour >17) then k else 0)
        "Number of occupants present"
         annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
    equation
       connect(occ.y, nOcc)
         annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
    end OccSched_Residence;

    model OccSched_Residence_vent "Simple occupancy schedule"
       extends
        IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(       final useInput=false);

       parameter Real k "Number of occupants";
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-20,20},{0,40}})));
       Modelica.Blocks.Sources.RealExpression occ(y=if (calTim.weekDay < 6 and
             (calTim.hour > 13 or calTim.hour < 10)) or (calTim.weekDay == 7 and calTim.hour >16) then k else 0)
        "Number of occupants present"
         annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
    equation
       connect(occ.y, nOcc)
         annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
    end OccSched_Residence_vent;

    model OccSched_V_vent
       Modelica.Blocks.Sources.RealExpression occ(y=if (calTim.weekDay < 6 and (
            calTim.hour > 13 or calTim.hour < 10)) or (calTim.weekDay == 7 and
            calTim.hour > 16) then k else 0)
        "Number of occupants present"
         annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
      Modelica.Blocks.Interfaces.RealOutput nOcc "Number of occupants"
        annotation (Placement(transformation(extent={{100,-20},{140,20}})));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
            coordinateSystem(preserveAspectRatio=false)));
    end OccSched_V_vent;

    model OccSched_Office_vent "Simple occupancy schedule"
       extends
        IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(       final useInput=false);

       parameter Real k "Number of occupants";
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-20,20},{0,40}})));
       Modelica.Blocks.Sources.RealExpression occ(y=if calTim.weekDay < 6 and (
             calTim.hour > 6 and calTim.hour < 18) then k else 0)
         "Number of occupants present"
         annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
    equation
       connect(occ.y, nOcc)
         annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
    end OccSched_Office_vent;
    annotation ();
  end Occupancy;

  package Case_O4 "Bulding Simulation"
    model Case_O4_First_Report
      "dimensions secondfloor_stairs and second_floor_attic not checked again"
     // import WeatherReader;
      package Medium = IDEAS.Media.Air "Air medium";

      //////////////////////Parameters for second floor//////////////////////////////////////////////////
      //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
      //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
      //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
      //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
     // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
     // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

      //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
      parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
      parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
      parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

      //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
        redeclare package Medium = IDEAS.Media.Air,
        useLigCtrInput=true,
        n50=13.24,
        allowFlowReversal=true,
        linIntRad=false,
        redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        hasWinD=false,
        nSurfExt=3,
        aziA=-0.78539816339745,
        l=2.27,
        w=4.23,
        lA=2.41,
        lB=1.62,
        lC=2.41,
        lD=2.76,
        AZone=4.64*2.41,
        ACei=2.41*4.64,
        h=2.5,
        A_winD=1.82*2,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Inner_wall_2 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare Walls.Back_extension_roof conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false) "kitchen on the ground floor"
        annotation (Placement(transformation(extent={{28,-82},{58,-50}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        allowFlowReversal=true,
        redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        hasWinA=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.78539816339745,
        l=3.95,
        w=2.02,
        lA=3.95,
        lB=1.62,
        lC=3.95,
        lD=1.62,
        AZone=2.02*3.95,
        h=2.5,
        A_winA=0.48*0.5,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Outer_wall_back conTypA,
        redeclare Walls.Inner_wall_1 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare Walls.Back_extension_roof conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false)
        "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
        annotation (Placement(transformation(extent={{92,-80},{122,-48}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        allowFlowReversal=true,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        hasWinA=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.78539816339745,
        l=3.2,
        w=2.02,
        lA=3.2,
        lB=2.02,
        lC=3.2,
        h=2.5,
        A_winA=0.64*0.5,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Outer_wall_back conTypA,
        redeclare Walls.Outer_wall_back conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_2 conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
          conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false) "Bergruimte on the SW side of the ground floor"
        annotation (Placement(transformation(extent={{148,-78},{178,-46}})));

      IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        allowFlowReversal=true,
        redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinD=true,
        nSurfExt=1,
        aziA=-0.78539816339745,
        l=8.51,
        w=3.49,
        lA=7.91,
        lB=2.76,
        lC=8.51,
        lD=3.49,
        h=3.25,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Inner_wall_1 conTypA,
        redeclare Walls.Inner_wall_1 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Outer_wall_front conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
          conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityD=false) "Leefruimte (living room) on the ground floor"
        annotation (Placement(transformation(extent={{-60,-92},{-30,-62}})));

      IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        allowFlowReversal=true,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinB=false,
        hasWinD=false,
        nSurfExt=1,
        aziA=-0.78539816339745,
        l=8.51,
        w=0.98,
        lA=8.51,
        lB=1.18,
        lC=7.91,
        lD=1.15,
        AZone=(1.15*4.36) + (1.66*4.15),
        h=3.25,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Inner_wall_1 conTypB,
        redeclare Walls.Inner_wall_2 conTypC,
        redeclare Walls.Outer_wall_front conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
          conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false) "Hallway (zone where the front door of the house is)"
        annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

      ////////////////////////// First floor: zones//////////////////////////////////////////////
      IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinD=true,
        nSurfExt=2,
        aziA=-0.78539816339745,
        l=4,
        w=4.25,
        lA=4.36,
        lB=2.77,
        lC=4.36,
        lD=4.64,
        AZone=(4*4.25) - (2.96*4.02),
        h=3.06,
        A_winD=(1.12*1.49) + (1.01*1.49),
        nWinD=1,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Inner_wall_2 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Outer_wall_front conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
          conTypCei,
        redeclare Walls.inner_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
        "Slaapkamer (bedroom) floor 1 16m²"
        annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

      IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Ceiling,
        azi=IDEAS.Types.Azimuth.S,
        A=2.96*4.02)
        "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
        annotation (Placement(transformation(
            extent={{6,-10},{-6,10}},
            rotation=90,
            origin={-114,6})));

      //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
      Modelica.Blocks.Sources.CombiTimeTable inputSol(
        tableOnFile=true,
        tableName="tab1",
        columns=2:30,
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        "input for solGloHor and solDifHor "
        annotation (Placement(transformation(extent={{-160,110},{-140,130}})));

      inner IDEAS.BoundaryConditions.SimInfoManager sim(
        linIntRad=false,
        linExtRad=false,
        weaDat(
          pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
          ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
          HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
          calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
          totSkyCov=0.6,
          opaSkyCov=0.6,
          TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
        filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
        "Adjusted Simulation information Manager for this course"
        annotation (Placement(transformation(extent={{-132,108},{-112,128}})));

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// continuation first floor: zones///////////////////////////////////////

      IDEAS.Buildings.Components.RectangularZoneTemplate Office(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinB=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.78539816339745,
        l=3.75,
        w=2.77,
        lA=3.75,
        lC=4.15,
        lD=2.77,
        AZone=2.77*3.75,
        h=3.06,
        A_winB=0.97*1.49,
        A_winD=1.12*1.49,
        nWinD=2,
        redeclare Walls.Inner_wall_2 conTypA,
        redeclare Walls.Outer_wall_back conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
        redeclare Walls.inner_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
        "Bureau (office room) first floor 16m²"
        annotation (Placement(transformation(extent={{4,10},{32,44}})));
      IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
        redeclare package Medium = IDEAS.Media.Air,
        n50=13.24,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinB=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.78539816339745,
        l=3.81,
        w=1.37,
        lA=4.15,
        lB=1.66,
        lD=1.37,
        AZone=2.84*1.36,
        h=3.06,
        A_winB=0.93*1.49,
        A_winD=1.12*1.49,
        nWinD=2,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Outer_wall_back conTypB,
        redeclare Walls.Inner_wall_2 conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
          conTypCei,
        redeclare Walls.inner_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
        annotation (Placement(transformation(extent={{2,62},{30,96}})));

    ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
        IDEAS.Buildings.Components.Zone Bedroom_2(
        redeclare package Medium = Medium,
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        A=4*4.25,
        n50=13.24,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        nSurf=10,
        V=37.69,
        hZone=2.5) "Bergruimte 17m2"
        annotation (Placement(transformation(extent={{-74,186},{-44,216}})));
       IDEAS.Buildings.Components.OuterWall outerWall1NE(
        redeclare Walls.Outer_wall_front constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-2.3561944901923,
        A=1.5*4.64 - (2*0.81*0.93))
                 "Wall 2nd floor, front house"
        annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
        IDEAS.Buildings.Components.Window window1N2(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-2.3561944901923,
        A=0.81*0.93,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
        annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
      IDEAS.Buildings.Components.Window window1N1(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-2.3561944901923,
        A=0.81*0.93,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
        annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
        IDEAS.Buildings.Components.InternalWall internalWall1S2(
        redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
        azi=0.78539816339745,
        A=3.4)                       "Wall between bergruimte & stairs"
        annotation (Placement(transformation(extent={{-6,-10},{6,10}},
            rotation=180,
            origin={14,286})));
      IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi=IDEAS.Types.Azimuth.S,
        A=4*4.25)
        "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={2,126})));
      IDEAS.Buildings.Components.InternalWall InternalRoof(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
        A=4.12*4.26)
                 "Roof between bergruimte and attic" annotation (Placement(
            transformation(
            extent={{6,-10},{-6,10}},
            rotation=90,
            origin={-72,268})));

      IDEAS.Buildings.Components.OuterWall Roof(
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
          constructionType,
        inc(displayUnit="deg") = 0.52063171586991,
        azi=-2.3561944901923,
        A=15.59)                   "Diagonal roof" annotation (Placement(
            transformation(
            extent={{-6,-10},{6,10}},
            rotation=0,
            origin={-162,214})));

      IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-0.78539816339745,
        A=9.77,
        use_T_fixed=false,
        use_Q_in=false)
        "The wall to the neigbours at the SE side" annotation (Placement(
            transformation(
            extent={{-6,-10},{6,10}},
            rotation=-90,
            origin={-64,248})));
      IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=2.3561944901923,
        A=9.77)
        "The wall to the neigbours at the NW side" annotation (Placement(
            transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={-56,152})));

      IDEAS.Buildings.Components.Zone Attic(
        redeclare package Medium = Medium,
        n50=13.24,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        nSurf=7,
        V=((0.37*2.84) + (4.48*2.84/2))*2.77,
        hZone=4.87,
        A=2.77*2.84) "Zolder 10m² on the second floor"
        annotation (Placement(transformation(extent={{104,126},{138,156}})));
      IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
        redeclare Walls.Inner_wall_1 constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-0.78539816339745,
        A=7.41)
        "The internal wall between the bergruimte and the stairs on the second floor"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=270,
            origin={114,226})));
      IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
        redeclare Walls.Outer_wall_back constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.78539816339745,
        A=0.37*4.64)
        "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=180,
            origin={220,146})));
      IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
        redeclare Walls.Pitched_roof constructionType,
        inc=0.56496307887056,
        azi=0.78539816339745,
        A=6.54*4.64,
        hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
        annotation (Placement(transformation(
            extent={{6,-10},{-6,10}},
            rotation=0,
            origin={214,188})));
      IDEAS.Buildings.Components.Window window(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=0.56496307887056,
        azi=0.78539816339745,
        A=1*1,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
        annotation (Placement(transformation(extent={{204,208},{192,228}})));
      IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
        redeclare Walls.Wall_neighbour constructionType,
        inc=1.5707963267949,
        azi=2.3561944901923,
        A=(0.37*2.84) + (4.48*2.84/2))
        "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={124,78})));
      IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi=IDEAS.Types.Azimuth.S,
        A=2.77*2.84)
        "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={80,84})));
      IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
        redeclare Walls.Inner_wall_1 constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.78539816339745,
        A=6.925)
        "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
         Placement(transformation(
            extent={{-6,10},{6,-10}},
            rotation=180,
            origin={36,146})));

      IDEAS.Buildings.Components.Zone Hallway_2(
        redeclare package Medium = Medium,
        n50=13.24,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        nSurf=8,
        V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
        hZone=4.87,
        A=2.84*1.36) "Stairs on the second floor"
        annotation (Placement(transformation(extent={{140,298},{174,334}})));
      IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-0.78539816339745,
        A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
        "The wall to the neighbours at the SE side from the stairs on the second floor"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=-90,
            origin={148,360})));
      IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
        redeclare Walls.Pitched_roof constructionType,
        inc=0.56496307887056,
        azi=0.78539816339745,
        A=1.36*6.54)
        "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
        annotation (Placement(transformation(
            extent={{-6,10},{6,-10}},
            rotation=180,
            origin={250,322})));
      IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=2.3561944901923,
        A=2.12*2.5/2)
        "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={102,258})));
      IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
        redeclare Walls.Pitched_roof constructionType,
        inc=0.73303828583762,
        azi=-2.3561944901923,
        A=3.18*4.26)
        "The pitched roof above the zolder at the front facade of the building NE"
        annotation (Placement(transformation(extent={{44,328},{56,348}})));
      IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi=IDEAS.Types.Azimuth.S,
        A=1.36*2.84)
        "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={184,246})));

      //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

      IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
          offset=0)
        annotation (Placement(transformation(extent={{258,76},{278,96}})));

      IDEAS.Buildings.Components.Window Kitchen_window(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=1.5707963267949,
        azi=0.78539816339745,
        A=1.15*1,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
        "Window at the back side of the kitchen facing the koer"
        annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
      Accumulator.Heat_Demand heat_Demand(
        nZones=1,
        fractionRad=0.5*ones(1),
        t=300,
        QNom=ones(1)*7000,
        Q_design=ones(1)*7000)
        annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
      Modelica.Blocks.Sources.RealExpression schedule_leefruimte(y=if calTim.weekDay <
            6 and (calTim.hour == 0 or calTim.hour == 7 or calTim.hour > 18) then (273.15
             + 21) elseif calTim.weekDay > 5 and (calTim.hour < 2 or (calTim.hour >
            8 and calTim.hour < 14) or calTim.hour > 17) then (273.15 + 21) else (273.15
             - 20)) "heating schedule accumulator"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-26,-144})));
      Accumulator.Heat_Demand heat_Demand1(
        nZones=1,
        fractionRad=0.5*ones(1),
        t=300,
        QNom=ones(1)*2000,
        Q_design=ones(1)*2000)
        annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
      Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
            6 and ( calTim.hour == 7)  then (273.15
             + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
             - 20)) "heating schedule accumulator, convective heat emission"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={100,-142})));
      Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
        annotation (Placement(transformation(extent={{182,-22},{202,-2}})));
      Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
            Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={140,-12})));
      IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
        fileName="integrator_heat_demand_Living_Room.json",
        varKeys={"Heat Demand [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{232,-22},{252,-2}})));
      Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
             + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={138,22})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
        annotation (Placement(transformation(extent={{180,12},{200,32}})));
      IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
        fileName="integrator_heat_demand_bathroom.json",
        varKeys={"Heat Demand [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{230,12},{250,32}})));
      IDEAS.Buildings.Components.OuterWall outerWall(
        redeclare Walls.Outer_wall_back constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.78539816339745,
        A=3.05*2.62) "Back facade kitchen"
        annotation (Placement(transformation(extent={{72,-18},{60,2}})));
    equation

      connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
      connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
      connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
          points={{120.5,-54.4},{134.25,-54.4},{134.25,-73.2},{148.6,-73.2}},
          color={255,204,51},
          thickness=0.5));
      connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
          points={{-54,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-33.68},{-30.8,
              -33.68}},
          color={255,204,51},
          thickness=0.5));

      connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
          points={{-31.5,-68},{-9.75,-68},{-9.75,-77.2},{28.6,-77.2}},
          color={255,204,51},
          thickness=0.5));
      connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
          points={{25,-52.1333},{-2.5,-52.1333},{-2.5,-8.4},{-27.5,-8.4}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
          points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
          color={255,204,51},
          thickness=0.5));
      connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
        1]) annotation (Line(
          points={{-116,11},{-116,72.3},{-62.8,72.3}},
          color={255,204,51},
          thickness=0.5));
      connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
        1]) annotation (Line(
          points={{-116,1},{-116,-68},{-45.3,-68}},
          color={255,204,51},
          thickness=0.5));
      connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
          points={{92.6,-75.2},{74.3,-75.2},{74.3,-56.4},{56.5,-56.4}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
          points={{-33.4,67.2},{-16.7,67.2},{-16.7,15.1},{4.56,15.1}},
          color={255,204,51},
          thickness=0.5));

      connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
          points={{-63,-62},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,16.8}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
          points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
          color={255,204,51},
          thickness=0.5));
      connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
          points={{9.6,42.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
          color={255,204,51},
          thickness=0.5));
      connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
          points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
          color={255,204,51},
          thickness=0.5));
      connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
          points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
          color={255,204,51},
          thickness=0.5));

    //Equations floor 2///////////////////////////////////////////////////////////////////////////////

      connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
          points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
          color={255,204,51},
          thickness=0.5));
      connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
          points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
          color={255,204,51},
          thickness=0.5));
      connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
          points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
        annotation (Line(
          points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
          color={255,204,51},
          thickness=0.5));
      connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
          points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
          color={255,204,51},
          thickness=0.5));

      connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
          points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
          color={255,204,51},
          thickness=0.5));
      connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (
          Line(
          points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
          color={255,204,51},
          thickness=0.5));
      connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

      connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
        annotation (Line(
          points={{116,221},{74,221},{74,149.571},{104,149.571}},
          color={255,204,51},
          thickness=0.5));
      connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (
          Line(
          points={{215,144},{215,148.714},{104,148.714}},
          color={255,204,51},
          thickness=0.5));
      connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
         Line(
          points={{209,190},{156,190},{156,147.857},{104,147.857}},
          color={255,204,51},
          thickness=0.5));
      connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
          points={{193,220},{148,220},{148,147},{104,147}},
          color={255,204,51},
          thickness=0.5));
      connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
        annotation (Line(
          points={{122,83},{112,83},{112,146.143},{104,146.143}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (
          Line(
          points={{78,89},{90,89},{90,145.286},{104,145.286}},
          color={255,204,51},
          thickness=0.5));
      connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
        annotation (Line(
          points={{41,148},{72,148},{72,144.429},{104,144.429}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
        annotation (Line(
          points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
          color={255,204,51},
          thickness=0.5));

      connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1])
        annotation (Line(
          points={{150,355},{122,355},{122,326.35},{140,326.35}},
          color={255,204,51},
          thickness=0.5));
      connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
         Line(
          points={{245,324},{134,324},{134,325.45},{140,325.45}},
          color={255,204,51},
          thickness=0.5));
      connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3])
        annotation (Line(
          points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
          color={255,204,51},
          thickness=0.5));
      connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4])
        annotation (Line(
          points={{55,340},{94,340},{94,323.65},{140,323.65}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5])
        annotation (Line(
          points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
          color={255,204,51},
          thickness=0.5));
      connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
          points={{19,284},{76,284},{76,321.85},{140,321.85}},
          color={255,204,51},
          thickness=0.5));
      connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[
        7]) annotation (Line(
          points={{116,231},{126,231},{126,320.95},{140,320.95}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
        annotation (Line(
          points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
          color={255,204,51},
          thickness=0.5));

      connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b)
        annotation (Line(
          points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
          Line(
          points={{78,79},{48,79},{48,37.2},{17.72,37.2}},
          color={255,204,51},
          thickness=0.5));

      connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
          points={{25,-50},{41.5,-50},{41.5,-36},{57,-36}},
          color={255,204,51},
          thickness=0.5));
      connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
          points={{-74,273},{31,273},{31,320.05},{140,320.05}},
          color={255,204,51},
          thickness=0.5));
      connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(
            points={{-28.5,-74},{-14,-74},{-14,-120},{27.6,-120}}, color={0,0,127}));
      connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
            points={{28,-116},{-8,-116},{-8,-86},{-30,-86}}, color={191,0,0}));
      connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
            points={{-30,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
      connect(schedule_leefruimte.y, heat_Demand.TSet[1]) annotation (Line(points={{-15,
              -144},{48,-144},{48,-124.2}},     color={0,0,127}));
      connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
              -142},{172,-142},{172,-110.2}},              color={0,0,127}));
      connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points=
              {{123.5,-60.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}},
            color={0,0,127}));
      connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
            points={{152,-98},{142,-98},{142,-68.8},{122,-68.8}}, color={191,0,0}));
      connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
            points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{122,
              -73.6}}, color={191,0,0}));
      connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
        annotation (Line(points={{151,-12},{180,-12}}, color={0,0,127}));
      connect(integrator.y, jsonWri.u[1])
        annotation (Line(points={{203,-12},{232,-12}}, color={0,0,127}));
      connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
        annotation (Line(points={{149,22},{178,22}}, color={0,0,127}));
      connect(integrator1.y, jsonWri1.u[1])
        annotation (Line(points={{201,22},{230,22}}, color={0,0,127}));
      connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
          points={{25,-47.8667},{24,-47.8667},{24,-6},{61,-6}},
          color={255,204,51},
          thickness=0.5));
      annotation (Diagram(coordinateSystem(extent={{-220,-160},{300,380}}),
            graphics={
            Text(
              extent={{224,-66},{296,-108}},
              lineColor={28,108,200},
              textString="Ground floor
"),         Text(
              extent={{76,58},{152,20}},
              lineColor={28,108,200},
              textString="First floor"),
            Text(
              extent={{222,294},{296,238}},
              lineColor={28,108,200},
              textString="Second floor
")}),                                                                        Icon(
            coordinateSystem(extent={{-220,-160},{300,380}})),
        experiment(StartTime=23673600, StopTime=68256000));
    end Case_O4_First_Report;

    package Walls "All walls for building simulations case O4"

      record Outer_wall_front "O4: the outer wall from front facade"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Brick_outer(d=0.3),
          Materials_O4.Plaster(d=0.01)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Outer_wall_front;

      record Outer_wall_back "O4: Outer wall for the back facade for case O4"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Brick_outer(d=0.25),
          Materials_O4.Plaster(d=0.01)});
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Outer_wall_back;

      record Inner_wall_1 "O4: thin inner wall of case O4"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Plaster(d=0.005),
                Materials_O4.Brick_inner(d=0.09),
                Materials_O4.Plaster(d=0.01)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_wall_1;

      record Inner_wall_2 "O4: Medium inner wall of case O4"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Plaster(d=0.005),
                Materials_O4.Brick_inner(d=0.14),
                Materials_O4.Plaster(d=0.01)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_wall_2;

      record Inner_wall_3 "O4: thick inner wall of case O4"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Plaster(d=0.005),
                Materials_O4.Brick_inner(d=0.19),
                Materials_O4.Plaster(d=0.01)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Inner_wall_3;

      record Wall_neighbour
        "O4: Wall to the neighbours (air-cavity wall) uninsulated"
         extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Plaster(d=0.01),
                Materials_O4.Brick_inner(d=0.14),
                IDEAS.Buildings.Data.Materials.Air(d=0.07),
                Materials_O4.Brick_inner(d=0.14),
                Materials_O4.Plaster(d=0.01)})
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Wall_neighbour;

      record Ground_floor "O4: The ground floor for case O4"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Armed_concrete(d=0.12),
          Materials_O4.Concrete_O4(d=0.08),
          Materials_O4.Tiles_O4(d=0.01)});
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Ground_floor;

      record Pitched_roof "O4: Pitched_roof (schuin dak) for case O4"
         extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.OSB(d=0.012)});
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Pitched_roof;

      record Air_wall "O4: Air_wall: Fictional wall (wall of nothing/air)"
         extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={IDEAS.Buildings.Data.Materials.Air_RG(d=0.001)})
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Air_wall;

      record inner_floor "O4: Inner floor"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Plaster_board(d=0.013),
                Materials_O4.Air90_Wood10(d=0.12),
                Materials_O4.Wood_O4(d=0.015)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end inner_floor;

      record Back_extension_roof "O4: back extension roof (Roof on the kitchen)"
        extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.OSB(d=0.012),
          Materials_O4.Air90_Wood10(d=0.12),
          Materials_O4.Plaster_board(d=0.013)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));

      end Back_extension_roof;

      record Wall_neighbour_2
        "O4: Wall to the neighbours (air-cavity wall) uninsulated: 2"
         extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Plaster(d=0.05),
                Materials_O4.Brick_inner(d=0.14),
                IDEAS.Buildings.Data.Materials.Air(d=0.07),
                Materials_O4.Brick_inner(d=0.14),
                Materials_O4.Plaster(d=0.05)})
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Wall_neighbour_2;

      record Window
        "O4: Wall made of pure glass"
         extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Glass(d=0.02)})
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Window;

      record Mass_wall "O4: internal wall to model thermal mass in zone"
          extends IDEAS.Buildings.Data.Interfaces.Construction(
          mats={Materials_O4.Wood_O4(d=0.5)});

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Mass_wall;
      annotation ();
    end Walls;

    package Materials_O4 "All materials for the layers of the walls of case O4"
      record Brick_outer = IDEAS.Buildings.Data.Interfaces.Material (
          k=1.14,
          c=1000,
          rho=1400,
          epsLw=0.88,
          epsSw=0.55)
                     "The brick for the outer walls"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Plaster =IDEAS.Buildings.Data.Interfaces.Material (
          k=0.56,
          c=1000,
          rho=1300,
          epsLw=0.85,
          epsSw=0.65) "Plaster layer for all walls in case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Brick_inner = IDEAS.Buildings.Data.Interfaces.Material (
          k=0.58,
          c=1000,
          rho=1400,
          epsLw=0.88,
          epsSw=0.55) "Brick used in the inside walls of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Armed_concrete = IDEAS.Buildings.Data.Interfaces.Material (
          k=1.7,
          c=1000,
          rho=2400,
          epsLw=0.88,
          epsSw=0.55) "Layer for the ground floor in case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Concrete_O4 = IDEAS.Buildings.Data.Interfaces.Material (
          k=0.16,
          c=1000,
          rho=2300,
          epsLw=0.88,
          epsSw=0.55) "Layer for the ground floor in case O4Concrete of the ground floor of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Tiles_O4 = IDEAS.Buildings.Data.Interfaces.Material (
          k=0.81,
          c=630,
          rho=2300,
          epsLw=0.88,
          epsSw=0.55) "Layer for the ground floor in case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Plaster_board = IDEAS.Buildings.Data.Interfaces.Material (
          k=0.26,
          c=1050,
          rho=900,
          epsLw=0.85,
          epsSw=0.65)
        "Gypsum plaster board for the inner floors of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Wood_O4 =IDEAS.Buildings.Data.Interfaces.Material (
          k=0.18,
          c=2000,
          rho=700,
          epsLw=0.86,
          epsSw=0.55) "Wood for the inner floors of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record OSB =IDEAS.Buildings.Data.Interfaces.Material (
          k=0.13,
          c=1460,
          rho=600,
          epsLw=0.86,
          epsSw=0.55)  "OSB layer used in both roofs of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Wood_air =IDEAS.Buildings.Data.Interfaces.Material (
          k=0.3681,
          c=1460,
          rho=600,
          epsLw=0.86,
          epsSw=0.55)  "layer with 10%wood and 90% air of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Air90_Wood10 =IDEAS.Buildings.Data.Interfaces.Material (
          k=0.18,
          c=1110 "=0.1*2000+0.9*1008",
          rho=71
                "=0.1*700+0.9*1.23",
          epsLw=0.86,
          epsSw=0.55)
        "Material layer of 90 % air and 10 % wood: c, k and rho calculated as gewogen gemiddelde";
      record Glass = IDEAS.Buildings.Data.Interfaces.Material (
          k=0.81,
          c=840,
          rho=2600,
          epsLw=0.88,
          epsSw=0.55)
                     "The brick for the outer walls"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      record Wood_Mass =
                      IDEAS.Buildings.Data.Interfaces.Material (
          k=0.18,
          c=4000,
          rho=700,
          epsLw=0.86,
          epsSw=0.55) "Wood for the inner floors of case O4"
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
    end Materials_O4;

    package Accumulator "Components to calculate the heat demand"
      model Heat_Demand "Ideal heating, no DHW, with radiators"
        extends BaseClass;
        extends HeatingSystem_Accumulator(
          final isHea = true,
          final isCoo = false,
            nConvPorts = nZones,
            nRadPorts = nZones,
            nTemSen = nZones,
            nEmbPorts=0,
          nLoads=1);

      equation
         for i in 1:nZones loop
           if noEvent((TSet[i] - TSensor[i]) > 0) then
             QHeatZone[i] = IDEAS.Utilities.Math.Functions.smoothMin(x1=C[i]*(TSet[i] - TSensor[i])/t, x2=QNom[i],deltaX=1);
           else
             QHeatZone[i] = 0;
           end if;
           heatPortRad[i].Q_flow = -fractionRad[i]*QHeatZone[i];
           heatPortCon[i].Q_flow = -(1 - fractionRad[i])*QHeatZone[i];
         end for;
      //  QHeaSys = sum(QHeatZone);

        //P[1] = QHeaSys/COP;
        //Q[1] = 0;
        annotation (Documentation(info="<html>
<p><b>Description</b> </p>
<p>Ideal heating (no hydraulics) but with limited power <i>QNom</i> per zone. There are no radiators. This model assumes a thermal inertia of each zone and computes the heat flux that would be required to heat up the zone to the set point within a time <i>t</i>. This heat flux is limited to <i>QNom</i> and splitted in a radiative and a convective part which are imposed on the heatPorts <i>heatPortRad</i> and <i>heatPortCon</i> respectively. A COP can be passed in order to compute the electricity consumption of the heating.</p>
<p><u>Note</u>: the responsiveness of the system is influenced by the time constant <i>t</i>.  For small values of<i> t</i>, this system is close to ideal, but for larger values, there may still be deviations between the zone temperature and it&apos;s set point. </p>
<p><h4>Assumptions and limitations </h4></p>
<p><ol>
<li>No inertia; responsiveness modelled by time constant <i>t</i> for reaching the temperature set point. </li>
<li>Limited output power according to <i>QNom[nZones]</i></li>
<li>Heat emitted through <i>heatPortRad</i> and <i>heatPortCon</i> </li>
</ol></p>
<p><h4>Model use</h4></p>
<p><ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> </li>
<li>Connect <i>plugLoad </i>to an inhome grid. A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required. </li>
</ol></p>
<p><h4>Validation </h4></p>
<p>No validation performed.</p>
<p><h4>Example </h4></p>
<p>An example of the use of this model can be found in<a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating\"> IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating</a>.</p>
</html>",       revisions="<html>
<p><ul>
<li>2013 June, Roel De Coninck: reworking interface and documentation</li>
<li>2011, Roel De Coninck: first version</li>
</ul></p>
</html>"),       Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                  -100},{200,100}}),
                               graphics),
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,100}}),
              graphics));
      end Heat_Demand;

      partial model BaseClass
        "Ideal, non-hydraulic heating with limited power"
        parameter Integer nZones(min=1)
          "Number of conditioned thermal zones in the building";
        parameter Real fractionRad[nZones]=0.3*ones(nZones)
          "Fraction of radiative to total power";
        parameter Real COP=3 "virtual COP to get a PEl as output";
        parameter Modelica.SIunits.Time t=10 "Time needed to reach temperature setpoint";
        parameter Modelica.SIunits.Power[nZones] QNom(each min=0) = ones(nZones)*5000
          "Nominal power, can be seen as the max power of the emission system per zone";
        parameter Real[nZones] VZones = 50*ones(nZones)
          "Conditioned volumes of the zones";
        final parameter Modelica.SIunits.HeatCapacity[nZones] C=1012*1.204*VZones*8
          "Heat capacity of the conditioned zones (air capacity with a correction factor of 8)";
         Modelica.SIunits.Power[nZones] QHeatZone;
      end BaseClass;

      model Test_Heat_Demand "Test model Heat Demand seperately"
        extends Modelica.Icons.Example;
        replaceable package MediumA =
            Buildings.Media.Air;

        Modelica.Thermal.HeatTransfer.Components.ThermalConductor theCon(G=10)
          "Thermal conductance with the ambient"
          annotation (Placement(transformation(extent={{20,40},{40,60}})));
        parameter Modelica.SIunits.Volume V=6*10*3 "Room volume";
        parameter Modelica.SIunits.MassFlowRate mA_flow_nominal = V*1.2*6/3600
          "Nominal mass flow rate";
        parameter Modelica.SIunits.HeatFlowRate QRooInt_flow = 4000
          "Internal heat gains of the room";
        Modelica.Thermal.HeatTransfer.Sources.FixedTemperature TOut(T(displayUnit=
               "K") = 253.15)
          "Outside temperature"
          annotation (Placement(transformation(extent={{-20,40},{0,60}})));
        Heat_Demand heat_Demand(
          nZones=1,
          QNom=ones(1)*1000,
          Q_design=ones(1)*1000)
          annotation (Placement(transformation(extent={{50,-10},{90,10}})));
        Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temRoo
          "Room temperature" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              origin={-38,22})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=273.15 + 20)
          annotation (Placement(transformation(extent={{-16,-50},{4,-30}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim
          annotation (Placement(transformation(extent={{-92,44},{-72,64}})));
        IDEAS.Fluid.MixingVolumes.MixingVolume vol(
          redeclare package Medium = IDEAS.Media.Air,
          T_start=293.15,
          m_flow_nominal=0.1,
          V=50) annotation (Placement(transformation(extent={{58,20},{78,40}})));
      equation
        connect(TOut.port, theCon.port_a) annotation (Line(
            points={{5.55112e-16,50},{20,50}},
            color={191,0,0},
            smooth=Smooth.None));
        connect(temRoo.T, heat_Demand.TSensor[1]) annotation (Line(points={{-48,22},{-74,
                22},{-74,-6},{49.6,-6}}, color={0,0,127}));
        connect(realExpression.y, heat_Demand.TSet[1])
          annotation (Line(points={{5,-40},{70,-40},{70,-10.2}}, color={0,0,127}));
        connect(vol.heatPort, theCon.port_b) annotation (Line(points={{58,30},{50,
                30},{50,50},{40,50}}, color={191,0,0}));
        connect(vol.heatPort, temRoo.port) annotation (Line(points={{58,30},{16,
                30},{16,22},{-28,22}}, color={191,0,0}));
        connect(heat_Demand.heatPortCon[1], vol.heatPort) annotation (Line(points=
               {{50,2},{28,2},{28,30},{58,30}}, color={191,0,0}));
        connect(heat_Demand.heatPortRad[1], vol.heatPort) annotation (Line(points=
               {{50,-2},{22,-2},{22,30},{58,30}}, color={191,0,0}));
        annotation (Documentation(info="<html>
<p>
This part of the system model implements the room with a heat gain.
The room is simplified as a volume of air, a prescribed heat source for
the internal convective heat gain, and a heat conductor for steady-state
heat conduction to the outside.
To increase the heat capacity of the room, such as due to heat stored
in furniture and in building constructions, the heat capacity
of the room air was increased by a factor of three.
The convective heat transfer coefficient is lumped into the heat conductor
model.
</p>
<h4>Implementation</h4>
<p>
This section describes step by step how we implemented the model.
</p>
<ol>
<li>
<p>
First, to define the medium properties, we added the declaration
</p>
<pre>
  replaceable package MediumA =
      Buildings.Media.Air;
</pre>
<p>
This will allow the propagation of the medium model to all models that contain air.
In this example, there is only one model with air.
</p>
<p>
We called the medium <code>MediumA</code> to distinguish it from
<code>MediumW</code> that we will use in later versions of the model for components that
have water as a medium.
</p>
<p>
We also defined the system-level parameters
</p>
<pre>
  parameter Modelica.SIunits.Volume V=6*10*3 \"Room volume\";
  parameter Modelica.SIunits.MassFlowRate mA_flow_nominal = V*1.2*6/3600
    \"Nominal mass flow rate\";
  parameter Modelica.SIunits.HeatFlowRate QRooInt_flow = 4000
    \"Internal heat gains of the room\";
</pre>
<p>
to declare that the room volume is <i>180</i> m<sup>3</sup>, that the room
has a nominal mass flow rate of <i>6</i> air changes per hour and that
the internal heat gains of the room are <i>4000</i> Watts.
These parameters have been declared at the top-level of the model
as they will be used in several other models.
Declaring them at the top-level allows to propagate them to other
models, and to easily change them at one location should this be required
when revising the model.
</p>
</li>
<li>
<p>
To model the room air, approximated as a completely mixed volume of air,
an instance of
<a href=\"modelica://Buildings.Fluid.MixingVolumes.MixingVolume\">
Buildings.Fluid.MixingVolumes.MixingVolume</a>
has been used, as this model can be used with dry air or moist air.
The medium model has been set to <code>MediumA</code>, and the nominal mass
flow rate is set to <code>mA_flow_nominal</code>.
The nominal mass flow rate is used for numerical reasons and should be set
to the approximate order of magnitude. It only has an effect if the mass flow
rate is near zero and what \"near zero\" means depends on the magnitude of
<code>m_flow_nominal</code>, as it is used for the default value of the parameter
<code>m_flow_small</code> on the <code>Assumptions</code> tag of the model.
See also
<a href=\"modelica://Buildings.Fluid.UsersGuide\">
Buildings.Fluid.UsersGuide</a>
for an explanation of the purpose of <code>m_flow_small</code>.
</p>
</li>
<li>
<p>
Since we need to increase the heat capacity of the room air to approximate
energy storage in furniture and building constructions, we connected the instance <code>heaCap</code> of
<a href=\"modelica://Modelica.Thermal.HeatTransfer.Components.HeatCapacitor\">
Modelica.Thermal.HeatTransfer.Components.HeatCapacitor</a>
to the heat port of the room air.
The model <code>heaCap</code> models energy storage. We set its capacity to
<i>C=2*V*1.2*1006</i> J/K. This will increase the total heat capacity
of the room air by a factor of three.
</p>
</li>
<li>
<p>
We used the instance <code>theCon</code> of
<a href=\"modelica://Modelica.Thermal.HeatTransfer.Components.ThermalConductor\">
Modelica.Thermal.HeatTransfer.Components.ThermalConductor</a>
 to model the thermal conductance to the ambient.
Since our room should have a heat loss of <i>20</i> kW at a temperature difference
of <i>30</i> Kelvin, we set the conductance to
<i>G=20000 &frasl; 30</i> W/K.
</p>
</li>
<li>
<p>
We used the instance <code>preHea</code> of
<a href=\"modelica://Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow\">
Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow</a>
to model a prescribed heat gain,
such as due to internal heat source.
This model outputs the heat gain which is equal to the value of its
input signal, which is obtained from a time table.
</p>
</li>
<li>
<p>
To define a time-dependent heat gain, we instantiated the block
<a href=\"modelica://Modelica.Blocks.Sources.CombiTimeTable\">
Modelica.Blocks.Sources.CombiTimeTable</a>
and set its name to <code>timTab</code>.
We set the table parameters to
</p>
<pre>
  Modelica.Blocks.Sources.CombiTimeTable timTab(
      extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic,
      smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments,
      table=[-6, 0;
              8, QRooInt_flow;
             18, 0],
      timeScale=3600) \"Time table for internal heat gain\";
</pre>
<p>
Note that we set the output to be a periodic signal by configuring
<code>
extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic.
</code>
The first time stamp is <i>-6</i> hours in order to create
a table that has a periodicity of one day.
We also set the interpolation of the data to using
piece-wise constant segments.
See the documentation of <a href=\"modelica://Modelica.Blocks.Sources.CombiTimeTable\">
Modelica.Blocks.Sources.CombiTimeTable</a> for the various options
of this time table.
</p>
</li>
<li>
<p>
Next, we connected its output to the input of the instance <code>preHea</code>.
</p>
</li>
</ol>
<p>
This completes the initial version of the model. When simulating the model
for <i>2</i> days, or <i>172800</i> seconds, the
response shown below should be seen.
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Examples/Tutorial/Boiler/System1Temperatures.png\" border=\"1\"/>
</p>
<p>
To verify the correctness of the model, we can compare the simulated results to the
following analytical solutions:
</p>
<ol>
<li>
<p>
When the internal heat gain is zero, the room temperature should be equal
to the outside temperature.
</p>
</li>
<li>
<p>
At steady-state when the internal heat gain is <i>4000</i> Watts,
the temperature difference to the outside should be
<i>&Delta; T = Q&#775; &frasl; UA = 4000/(20000/30) = 6</i> Kelvin, which
corresponds to a room temperature of <i>-4</i>&deg;C.
</p>
</li>
</ol>
<p>
Both analytical values agree with the simulation results shown in the above figure.
</p>
<p>
An alternative validation can be done by fixing the temperature of the volume to
<i>20</i>&deg;C and plotting the heat flow rate that is needed to maintain
this temperature.
This can be implemented by connecting an instance of
<a href=\"modelica://Modelica.Thermal.HeatTransfer.Sources.FixedTemperature\">
Modelica.Thermal.HeatTransfer.Sources.FixedTemperature</a>
as shown below.
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Examples/Tutorial/Boiler/System1PrescribedTemperature.png\" border=\"1\"/>
</p>
<p>
When plotting the heat flow rate <code>fixTemp.port.Q_flow</code>, one can see
that the required heat flow rate to keep the temperature at
<i>20</i>&deg;C is
<i>20</i> kW during night, and
<i>16</i> kW during day when the heat gain is active.
</p>
<!-- Notes -->
<h4>Notes</h4>
<p>
For a more realistic model of a room, the model
<a href=\"modelica://Buildings.ThermalZones.Detailed.MixedAir\">
Buildings.ThermalZones.Detailed.MixedAir</a>
could have been used.
For transient heat conduction, models from the
package
<a href=\"modelica://Buildings.HeatTransfer.Conduction\">
Buildings.HeatTransfer.Conduction</a>
could have been used.
</p>
</html>",       revisions="<html>
<ul>
<li>
March 6, 2017, by Michael Wetter:<br/>
Added missing density to computation of air mass flow rate.<br/>
This is for <a href=\"https://github.com/lbl-srg/modelica-buildings/issues/673\">#673</a>.
</li>
<li>
December 22, 2014 by Michael Wetter:<br/>
Removed <code>Modelica.Fluid.System</code>
to address issue
<a href=\"https://github.com/lbl-srg/modelica-buildings/issues/311\">#311</a>.
</li>
<li>
January 27, 2012, by Michael Wetter:<br/>
First implementation.
</li>
</ul>
</html>"),__Dymola_Commands(file=
           "modelica://Buildings/Resources/Scripts/Dymola/Examples/Tutorial/Boiler/System1.mos"
              "Simulate and plot"),
          experiment(Tolerance=1e-6, StopTime=172800));
      end Test_Heat_Demand;

      model Heat_Demand_original "Ideal heating, no DHW, with radiators"
        extends BaseClass;
        extends IDEAS.Templates.Interfaces.BaseClasses.HeatingSystem(
          final isHea = true,
          final isCoo = false,
            nConvPorts = nZones,
            nRadPorts = nZones,
            nTemSen = nZones,
            nEmbPorts=0,
          nLoads=1);

      equation
         for i in 1:nZones loop
           if noEvent((TSet[i] - TSensor[i]) > 0) then
             QHeatZone[i] = IDEAS.Utilities.Math.Functions.smoothMin(x1=C[i]*(TSet[i] - TSensor[i])/t, x2=QNom[i],deltaX=1);
           else
             QHeatZone[i] = 0;
           end if;
           heatPortRad[i].Q_flow = -fractionRad[i]*QHeatZone[i];
           heatPortCon[i].Q_flow = -(1 - fractionRad[i])*QHeatZone[i];
         end for;
      //  QHeaSys = sum(QHeatZone);

        //P[1] = QHeaSys/COP;
        //Q[1] = 0;
        annotation (Documentation(info="<html>
<p><b>Description</b> </p>
<p>Ideal heating (no hydraulics) but with limited power <i>QNom</i> per zone. There are no radiators. This model assumes a thermal inertia of each zone and computes the heat flux that would be required to heat up the zone to the set point within a time <i>t</i>. This heat flux is limited to <i>QNom</i> and splitted in a radiative and a convective part which are imposed on the heatPorts <i>heatPortRad</i> and <i>heatPortCon</i> respectively. A COP can be passed in order to compute the electricity consumption of the heating.</p>
<p><u>Note</u>: the responsiveness of the system is influenced by the time constant <i>t</i>.  For small values of<i> t</i>, this system is close to ideal, but for larger values, there may still be deviations between the zone temperature and it&apos;s set point. </p>
<p><h4>Assumptions and limitations </h4></p>
<p><ol>
<li>No inertia; responsiveness modelled by time constant <i>t</i> for reaching the temperature set point. </li>
<li>Limited output power according to <i>QNom[nZones]</i></li>
<li>Heat emitted through <i>heatPortRad</i> and <i>heatPortCon</i> </li>
</ol></p>
<p><h4>Model use</h4></p>
<p><ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> </li>
<li>Connect <i>plugLoad </i>to an inhome grid. A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required. </li>
</ol></p>
<p><h4>Validation </h4></p>
<p>No validation performed.</p>
<p><h4>Example </h4></p>
<p>An example of the use of this model can be found in<a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating\"> IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating</a>.</p>
</html>",       revisions="<html>
<p><ul>
<li>2013 June, Roel De Coninck: reworking interface and documentation</li>
<li>2011, Roel De Coninck: first version</li>
</ul></p>
</html>"),       Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                  -100},{200,100}}),
                               graphics),
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,100}}),
              graphics));
      end Heat_Demand_original;

      partial model PartialSystem_Accumulator
        "General partial for electricity-based systems"

        outer IDEAS.BoundaryConditions.SimInfoManager sim
          "Simulation information manager for climate data"
          annotation (Placement(transformation(extent={{-200,80},{-180,100}})));
        parameter Integer nZones(min=1)
          "Number of conditioned thermal zones in the building";
        // --- Electrical
        parameter Integer nLoads(min=0) = 0
          "Number of electric loads. If zero, all electric equations disappear.";

      protected
        final parameter Boolean hasElectric = nLoads>0
          "Removes electric equations when false";
        final parameter Integer nLoads_min=max(1, nLoads);

        Modelica.SIunits.Power[nLoads_min] P = zeros(nLoads_min)
          "Active power for each of the loads";
        Modelica.SIunits.Power[nLoads_min] Q = zeros(nLoads_min)
          "Passive power for each of the loads";
      equation
        /*connect(wattsLawPlug.vi, plugLoad) annotation (Line(
        points={{190,0},{200,0}},
        color={85,170,255},
        smooth=Smooth.None));
  connect(P_val.y, wattsLawPlug.P) annotation (Line(
      points={{161,17},{168,17},{168,5},{174,5}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(Q_val.y, wattsLawPlug.Q) annotation (Line(
      points={{161,-10},{170,-10},{170,1},{173,1}},
      color={0,0,127},
      smooth=Smooth.None));*/
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,
                  100}}), graphics),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,
                  100}})),
          Documentation(info="<html>
<p>
This documentation is outdated.
</p>
<p><b>Description</b> </p>
<p>Interface model for a complete multi-zone heating system (with our without domestic hot water and solar system).</p>
<p>This model defines the ports used to link a heating system with a building, and the basic parameters that most heating systems will need to have. The model is modular as a function of the number of zones <i>nZones. </i></p>
<p>Two sets of heatPorts are defined:</p>
<ol>
<li><i>heatPortCon[nZones]</i> and <i>heatPortRad[nZones]</i> for convective respectively radiative heat transfer to the building. </li>
<li><i>heatPortEmb[nZones]</i> for heat transfer to TABS elements in the building. </li>
</ol>
<p>The model also defines <i>TSensor[nZones]</i> and <i>TSet[nZones]</i> for the control, and a nominal power <i>QNom[nZones].</i></p>
<p>There is also an input for the DHW flow rate, <i>mDHW60C</i>, but this can be unconnected if the system only includes heating and no DHW.</p>
<h4>Assumptions and limitations </h4>
<ol>
<li>See the different extensions of this model in <a href=\"modelica://IDEAS.Thermal.HeatingSystems\">IDEAS.Thermal.HeatingSystems</a></li>
</ol>
<h4>Model use</h4>
<ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> and <i>plugLoad. </i></li>
<li>Connect <i>plugLoad </i> to an inhome grid.  A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required, depending on which implementation of this interface is used. </li>
</ol>
<h4>Validation </h4>
<p>No validation performed.</p>
<h4>Example </h4>
<p>See the <a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples\">heating system examples</a>. </p>
</html>",       revisions="<html>
<ul>
<li>
June 5, 2018 by Filip Jorissen:<br/>
Cleaned up implementation for
<a href=\"https://github.com/open-ideas/IDEAS/issues/821\">#821</a>.
</li>
</ul>
</html>"));
      end PartialSystem_Accumulator;

      partial model HeatingSystem_Accumulator
        "Partial heating/cooling system"
        extends PartialSystem_Accumulator;
        replaceable package Medium=IDEAS.Media.Water;

        // *********** Building characteristics and  interface ***********
        parameter Boolean isHea=true "=true, if system is able to heat";
        parameter Boolean isCoo=false "=true, if system is able to cool";
        parameter Boolean isDH=false "=true, if the system is connected to a DH grid";
        //parameter Boolean InInterface = false;
        parameter Modelica.SIunits.Power[nZones] Q_design
          "Total design heat load for heating system based on heat losses" annotation(Dialog(enable=InInterface));

        // --- Ports
        parameter Integer nConvPorts(min=0) = nZones
          "Number of ports in building for convective heating/cooling"
          annotation(Dialog(tab="Advanced"));
        parameter Integer nRadPorts(min=0) = nZones
          "Number of ports in building for radiative heating/cooling"
          annotation(Dialog(tab="Advanced"));
        parameter Integer nEmbPorts(min=0) = nZones
          "Number of ports in building for embedded systems"
          annotation(Dialog(tab="Advanced"));

        // --- Sensor
        parameter Integer nTemSen(min=0) = nZones
          "number of temperature inputs for the system";

        // *********** Outputs ***********
        // --- Thermal
        Modelica.SIunits.Power QHeaSys=
          sum({max(0,-heatPortCon[i].Q_flow) for i in 1:nConvPorts})
          +sum({max(0,-heatPortRad[i].Q_flow) for i in 1:nRadPorts})
          +sum({max(0,-heatPortEmb[i].Q_flow) for i in 1:nEmbPorts})
          "Total thermal power use for space heating";
        Modelica.SIunits.Power QCooTotal=
          sum({max(0,heatPortCon[i].Q_flow) for i in 1:nConvPorts})
          +sum({max(0,heatPortRad[i].Q_flow) for i in 1:nRadPorts})
          +sum({max(0,heatPortEmb[i].Q_flow) for i in 1:nEmbPorts})
          "Total thermal power use for cooling";

        // *********** Interface ***********
        // --- thermal
        Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a[nConvPorts] heatPortCon
          "Nodes for convective heat gains"
          annotation (Placement(transformation(extent={{-210,10},{-190,30}})));
        Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a[nRadPorts] heatPortRad
          "Nodes for radiative heat gains"
          annotation (Placement(transformation(extent={{-210,-30},{-190,-10}})));
        Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b[nEmbPorts] heatPortEmb
          "Construction nodes for heat gains by embedded layers"
          annotation (Placement(transformation(extent={{-210,50},{-190,70}})));

        // --- Sensor
        Modelica.Blocks.Interfaces.RealInput[nTemSen] TSensor(
          final quantity="ThermodynamicTemperature",
          unit="K",
          displayUnit="degC",
          min=0) "Sensor temperature" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-204,-60})));

        Modelica.Blocks.Interfaces.RealInput[nZones] TSet(
          final quantity="ThermodynamicTemperature",
          unit="K",
          displayUnit="degC",
          min=0) "Setpoint temperature for the zones" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={20,-104}), iconTransformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={0,-102})));

        // --- fluid
        Modelica.Fluid.Interfaces.FluidPort_a port_a(
          redeclare package Medium = Medium) if
             isDH
          "Supply water connection to the DH grid"
          annotation (Placement(transformation(extent={{110,-110},{130,-90}})));
        Modelica.Fluid.Interfaces.FluidPort_b port_b(
          redeclare package Medium = Medium) if
             isDH
          "Return water connection to the DH grid"
          annotation (Placement(transformation(extent={{150,-110},{170,-90}})));
        outer IDEAS.BoundaryConditions.SimInfoManager sim
          "Simulation information manager for climate data"
          annotation (Placement(transformation(extent={{-200,80},{-180,100}})));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,
                  100}}), graphics={
              Rectangle(
                extent={{-200,100},{200,-100}},
                fillColor={215,215,215},
                fillPattern=FillPattern.Solid,
                lineColor={191,0,0}),
              Line(
                points={{50,-20},{30,0}},
                color={0,0,127}),
              Line(
                points={{30,0},{0,-30}},
                color={0,0,127},
                pattern=LinePattern.Dash),
              Line(
                points={{30,0},{-8,0}},
                color={191,0,0},
                thickness=0.5),
              Line(
                points={{200,100},{200,-100}},
                color={85,170,255},
                smooth=Smooth.None),
              Line(
                points={{-28,-20},{-128,-20}},
                color={191,0,0},
                thickness=0.5),
              Line(
                points={{-28,20},{-128,20}},
                color={191,0,0},
                thickness=0.5),
              Line(
                points={{-8,0},{-28,-20}},
                color={191,0,0},
                thickness=0.5),
              Line(
                points={{-8,0},{-28,20}},
                color={191,0,0},
                thickness=0.5),
              Polygon(
                points={{-128,0},{-128,40},{-158,20},{-128,0}},
                lineColor={191,0,0},
                fillColor={191,0,0},
                fillPattern=FillPattern.Solid),
              Polygon(
                points={{-128,-40},{-128,0},{-158,-20},{-128,-40}},
                lineColor={191,0,0},
                fillColor={191,0,0},
                fillPattern=FillPattern.Solid),
              Rectangle(
                extent={{-158,40},{-178,-40}},
                lineColor={191,0,0},
                fillColor={191,0,0},
                fillPattern=FillPattern.Solid),
              Line(
                points={{200,0},{30,0}},
                color={85,170,255},
                smooth=Smooth.None),
              Line(points={{30,70},{30,40}}),
              Line(points={{52.9,32.8},{70.2,57.3}}),
              Line(points={{7.1,32.8},{-10.2,57.3}}),
              Line(points={{67.6,13.7},{95.8,23.9}}),
              Ellipse(
                lineColor={64,64,64},
                fillColor={215,215,215},
                extent={{18,-12},{42,12}},
                fillPattern=FillPattern.Solid),
              Polygon(
                origin={30,0},
                rotation=-17.5,
                fillColor={64,64,64},
                pattern=LinePattern.None,
                fillPattern=FillPattern.Solid,
                points={{-5.0,0.0},{-2.0,60.0},{0.0,65.0},{2.0,60.0},{5.0,0.0}}),
              Ellipse(
                fillColor={64,64,64},
                pattern=LinePattern.None,
                fillPattern=FillPattern.Solid,
                extent={{23,-7},{37,7}}),
              Line(
                points={{60,-30},{50,-20}},
                color={0,0,127},
                pattern=LinePattern.Dash),
              Line(
                points={{0,-100},{0,-30}},
                color={0,0,127},
                smooth=Smooth.None,
                pattern=LinePattern.Dash),
              Line(
                points={{60,-100},{60,-30}},
                color={0,0,127},
                smooth=Smooth.None,
                pattern=LinePattern.Dash)}),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{
                  200,100}})),
          Documentation(info="<html>
<p><b>Description</b> </p>
<p>Interface model for a complete multi-zone heating system (with our without domestic hot water and solar system).</p>
<p>This model defines the ports used to link a heating system with a building, and the basic parameters that most heating systems will need to have. The model is modular as a function of the number of zones <i>nZones. </i></p>
<p>Two sets of heatPorts are defined:</p>
<ol>
<li><i>heatPortCon[nZones]</i> and <i>heatPortRad[nZones]</i> for convective respectively radiative heat transfer to the building. </li>
<li><i>heatPortEmb[nZones]</i> for heat transfer to TABS elements in the building. </li>
</ol>
<p>The model also defines <i>TSensor[nZones]</i> and <i>TSet[nZones]</i> for the control, and a nominal power <i>QNom[nZones].</i></p>
<p>There is also an input for the DHW flow rate, <i>mDHW60C</i>, but this can be unconnected if the system only includes heating and no DHW.</p>
<h4>Assumptions and limitations </h4>
<ol>
<li>See the different extensions of this model in <a href=\"modelica://IDEAS.Thermal.HeatingSystems\">IDEAS.Thermal.HeatingSystems</a></li>
</ol>
<h4>Model use</h4>
<ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> and <i>plugLoad. </i></li>
<li>Connect <i>plugLoad </i> to an inhome grid.  A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required, depending on which implementation of this interface is used. </li>
</ol>
<h4>Validation </h4>
<p>No validation performed.</p>
<h4>Example </h4>
<p>See the <a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples\">heating system examples</a>. </p>
</html>",       revisions="<html>
<ul>
<li>
June 5, 2018 by Filip Jorissen:<br/>
Cleaned up implementation for
<a href=\"https://github.com/open-ideas/IDEAS/issues/821\">#821</a>.
</li>
</ul>
</html>"));
      end HeatingSystem_Accumulator;

      model Heat_Demand_eff "Ideal heating, no DHW, with radiators"
        extends BaseClass;
        extends HeatingSystem_Accumulator(
          final isHea = true,
          final isCoo = false,
            nConvPorts = nZones,
            nRadPorts = nZones,
            nTemSen = nZones,
            nEmbPorts=0,
          nLoads=1);

      equation
         for i in 1:nZones loop
           if noEvent((TSet[i] - TSensor[i]) > 0) then
             QHeatZone[i] = IDEAS.Utilities.Math.Functions.smoothMin(x1=C[i]*(TSet[i] - TSensor[i])/t, x2=QNom[i],deltaX=1);
           else
             QHeatZone[i] = 0;
           end if;
           heatPortRad[i].Q_flow = -fractionRad[i]*QHeatZone[i]*0.8;
           heatPortCon[i].Q_flow = -(1 - fractionRad[i])*QHeatZone[i]*0.8;
         end for;
      //  QHeaSys = sum(QHeatZone);

        //P[1] = QHeaSys/COP;
        //Q[1] = 0;
        annotation (Documentation(info="<html>
<p><b>Description</b> </p>
<p>Ideal heating (no hydraulics) but with limited power <i>QNom</i> per zone. There are no radiators. This model assumes a thermal inertia of each zone and computes the heat flux that would be required to heat up the zone to the set point within a time <i>t</i>. This heat flux is limited to <i>QNom</i> and splitted in a radiative and a convective part which are imposed on the heatPorts <i>heatPortRad</i> and <i>heatPortCon</i> respectively. A COP can be passed in order to compute the electricity consumption of the heating.</p>
<p><u>Note</u>: the responsiveness of the system is influenced by the time constant <i>t</i>.  For small values of<i> t</i>, this system is close to ideal, but for larger values, there may still be deviations between the zone temperature and it&apos;s set point. </p>
<p><h4>Assumptions and limitations </h4></p>
<p><ol>
<li>No inertia; responsiveness modelled by time constant <i>t</i> for reaching the temperature set point. </li>
<li>Limited output power according to <i>QNom[nZones]</i></li>
<li>Heat emitted through <i>heatPortRad</i> and <i>heatPortCon</i> </li>
</ol></p>
<p><h4>Model use</h4></p>
<p><ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> </li>
<li>Connect <i>plugLoad </i>to an inhome grid. A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required. </li>
</ol></p>
<p><h4>Validation </h4></p>
<p>No validation performed.</p>
<p><h4>Example </h4></p>
<p>An example of the use of this model can be found in<a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating\"> IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating</a>.</p>
</html>",       revisions="<html>
<p><ul>
<li>2013 June, Roel De Coninck: reworking interface and documentation</li>
<li>2011, Roel De Coninck: first version</li>
</ul></p>
</html>"),       Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                  -100},{200,100}}),
                               graphics),
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,100}}),
              graphics));
      end Heat_Demand_eff;

      model Heat_Cool_Demand "Ideal heating and cooling, no DHW, with radiators"
        extends BaseClass;
        extends HeatingSystem_Accumulator(
          final isHea = true,
          final isCoo = false,
            nConvPorts = nZones,
            nRadPorts = nZones,
            nTemSen = nZones,
            nEmbPorts=0);

      equation
         for i in 1:nZones loop

           QHeatZone[i] = IDEAS.Utilities.Math.Functions.smoothMin(x1=C[i]*(TSet[i] - TSensor[i])/t, x2=QNom[i],deltaX=1);

           heatPortRad[i].Q_flow = -fractionRad[i]*QHeatZone[i];
           heatPortCon[i].Q_flow = -(1 - fractionRad[i])*QHeatZone[i];
         end for;
      //  QHeaSys = sum(QHeatZone);

        //P[1] = QHeaSys/COP;
        //Q[1] = 0;
        annotation (Documentation(info="<html>
<p><b>Description</b> </p>
<p>Ideal heating (no hydraulics) but with limited power <i>QNom</i> per zone. There are no radiators. This model assumes a thermal inertia of each zone and computes the heat flux that would be required to heat up the zone to the set point within a time <i>t</i>. This heat flux is limited to <i>QNom</i> and splitted in a radiative and a convective part which are imposed on the heatPorts <i>heatPortRad</i> and <i>heatPortCon</i> respectively. A COP can be passed in order to compute the electricity consumption of the heating.</p>
<p><u>Note</u>: the responsiveness of the system is influenced by the time constant <i>t</i>.  For small values of<i> t</i>, this system is close to ideal, but for larger values, there may still be deviations between the zone temperature and it&apos;s set point. </p>
<p><h4>Assumptions and limitations </h4></p>
<p><ol>
<li>No inertia; responsiveness modelled by time constant <i>t</i> for reaching the temperature set point. </li>
<li>Limited output power according to <i>QNom[nZones]</i></li>
<li>Heat emitted through <i>heatPortRad</i> and <i>heatPortCon</i> </li>
</ol></p>
<p><h4>Model use</h4></p>
<p><ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> </li>
<li>Connect <i>plugLoad </i>to an inhome grid. A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required. </li>
</ol></p>
<p><h4>Validation </h4></p>
<p>No validation performed.</p>
<p><h4>Example </h4></p>
<p>An example of the use of this model can be found in<a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating\"> IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating</a>.</p>
</html>",       revisions="<html>
<p><ul>
<li>2013 June, Roel De Coninck: reworking interface and documentation</li>
<li>2011, Roel De Coninck: first version</li>
</ul></p>
</html>"),       Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                  -100},{200,100}}),
                               graphics),
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,100}}),
              graphics));
      end Heat_Cool_Demand;

      model Test_Heat_Cool_Demand
        "Ideal heating and cooling, no DHW, with radiators"
        extends BaseClass;
        extends HeatingSystem_Accumulator(
          final isHea = true,
          final isCoo = false,
            nConvPorts = nZones,
            nRadPorts = nZones,
            nTemSen = nZones,
            nEmbPorts=0,
          nLoads=1);

      equation
         for i in 1:nZones loop

           QHeatZone[i] = IDEAS.Utilities.Math.Functions.smoothMin(x1=C[i]*(TSet[i] - TSensor[i])/t, x2=QNom[i],deltaX=1);

           heatPortRad[i].Q_flow = -fractionRad[i]*QHeatZone[i];
           heatPortCon[i].Q_flow = -(1 - fractionRad[i])*QHeatZone[i];
         end for;
      //  QHeaSys = sum(QHeatZone);

        //P[1] = QHeaSys/COP;
        //Q[1] = 0;
        annotation (Documentation(info="<html>
<p><b>Description</b> </p>
<p>Ideal heating (no hydraulics) but with limited power <i>QNom</i> per zone. There are no radiators. This model assumes a thermal inertia of each zone and computes the heat flux that would be required to heat up the zone to the set point within a time <i>t</i>. This heat flux is limited to <i>QNom</i> and splitted in a radiative and a convective part which are imposed on the heatPorts <i>heatPortRad</i> and <i>heatPortCon</i> respectively. A COP can be passed in order to compute the electricity consumption of the heating.</p>
<p><u>Note</u>: the responsiveness of the system is influenced by the time constant <i>t</i>.  For small values of<i> t</i>, this system is close to ideal, but for larger values, there may still be deviations between the zone temperature and it&apos;s set point. </p>
<p><h4>Assumptions and limitations </h4></p>
<p><ol>
<li>No inertia; responsiveness modelled by time constant <i>t</i> for reaching the temperature set point. </li>
<li>Limited output power according to <i>QNom[nZones]</i></li>
<li>Heat emitted through <i>heatPortRad</i> and <i>heatPortCon</i> </li>
</ol></p>
<p><h4>Model use</h4></p>
<p><ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> </li>
<li>Connect <i>plugLoad </i>to an inhome grid. A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required. </li>
</ol></p>
<p><h4>Validation </h4></p>
<p>No validation performed.</p>
<p><h4>Example </h4></p>
<p>An example of the use of this model can be found in<a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating\"> IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating</a>.</p>
</html>",       revisions="<html>
<p><ul>
<li>2013 June, Roel De Coninck: reworking interface and documentation</li>
<li>2011, Roel De Coninck: first version</li>
</ul></p>
</html>"),       Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                  -100},{200,100}}),
                               graphics),
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,100}}),
              graphics));
      end Test_Heat_Cool_Demand;
      annotation ();
    end Accumulator;

    package Readers "Table of the measurements of the heat demand"

      model HeaterReader "Table of the measurements of the heat demand"

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-26,-16},{-6,4}})));

       annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end HeaterReader;

      model Temperature_Leefruimte_Reader

        Modelica.Blocks.Sources.CombiTimeTable TempReader(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-26,-16},{-6,4}})));

        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Temperature_Leefruimte_Reader;
    end Readers;

    package Case_O4_Second_Report

      model Case_O4_2_Measurement_Reader
        "Trying to get a better fit for the heat demand. Match the transferred heat to the real-life transferred heat"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=3,
          aziA=-0.78539816339745,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{28,-80},{58,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{92,-78},{122,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{148,-76},{178,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=1,
          aziA=-0.78539816339745,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-60,-90},{-30,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.78539816339745,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.78539816339745,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{4,12},{32,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{2,62},{30,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.3561944901923,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.3561944901923,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour >
              20 or (calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21)
               else (273.15 - 20)) "heating schedule accumulator" annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-278,-10},{-252,16}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-278,-90},{-254,-66}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-282,-50},{-256,-24}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-280,-126},{-256,-102}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min(k=1000*6)
          annotation (Placement(transformation(extent={{-236,-46},{-216,-26}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-234,-6},{-214,14}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month
               > 10 and calTim.day > 3) or (calTim.month == 12) or (calTim.month
               == 1) or (calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop annotation (Placement(
              transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month
               == 2) and (calTim.day > 17 and calTim.day < 27) then true else
              false) annotation (Placement(transformation(extent={{-220,-168},{
                  -200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month
               == 12) and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day
               == 25 and calTim.hour < 22)) then true else false) annotation (
            Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month
               == 1) and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day
               == 30 and calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{120.5,-52.4},{134.25,-52.4},{134.25,-71.2},{148.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-54,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{
                -30.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-31.5,-66},{-9.75,-66},{-9.75,-75.2},{28.6,-75.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{25,-50.1333},{-2.5,-50.1333},{-2.5,-8.4},{-27.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-62.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-45.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{92.6,-73.2},{74.3,-73.2},{74.3,-54.4},{56.5,-54.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-33.4,67.2},{-16.7,67.2},{-16.7,17.1},{4.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-63,-60},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{9.6,44.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{17.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{25,-48},{41.5,-48},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-28.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-30,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-30,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{123.5,
                -58.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{122,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                122,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{25,-45.8667},{24,-45.8667},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min.u) annotation (Line(
              points={{-254.7,-37},{-240.35,-37},{-240.35,-36},{-238,-36}}, color={0,0,
                127}));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-250.7,
                3},{-239.35,3},{-239.35,4},{-236,4}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points=
                {{-223,-84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{
                -206,-132},{-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},
                {-152,-158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{
                -138.5,-132},{-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,
                -106},{-118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,
                -132},{-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,
                -180},{-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{
                -79,-140},{-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}},
              color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{
                14,-132},{14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{
                -7,-150},{46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,
                -184},{-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_Measurement_Reader;

      model Case_O4_2_Real_0
        "Take the real-life heat demand as input and try to improve the model from there."
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=3,
          aziA=-0.78539816339745,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{28,-82},{58,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{92,-80},{122,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{148,-78},{178,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=1,
          aziA=-0.78539816339745,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-60,-92},{-30,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.78539816339745,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.78539816339745,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{4,10},{32,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{2,62},{30,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.3561944901923,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.3561944901923,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-278,-10},{-252,16}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-278,-90},{-254,-66}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-196,-128},{-170,-102}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-280,-126},{-256,-102}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=1000*6*0.7)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-234,-6},{-214,14}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=1000*6*0.3)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min1(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-198,-164},{-172,-138}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{120.5,-54.4},{134.25,-54.4},{134.25,-73.2},{148.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-54,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-33.68},{-30.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-31.5,-68},{-9.75,-68},{-9.75,-77.2},{28.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{25,-52.1333},{-2.5,-52.1333},{-2.5,-8.4},{-27.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-62.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-45.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{92.6,-75.2},{74.3,-75.2},{74.3,-56.4},{56.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-33.4,67.2},{-16.7,67.2},{-16.7,15.1},{4.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-63,-62},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{9.6,42.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{17.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{25,-50},{41.5,-50},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{123.5,
                -60.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{122,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{122,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{25,-47.8667},{24,-47.8667},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-250.7,
                3},{-239.35,3},{-239.35,4},{-236,4}}, color={0,0,127}));
        connect(gain_HeaterReader_10min_conv.y, Convective.Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,-118},
                {-12,-118},{-12,-81.5},{-30,-81.5}}, color={191,0,0}));
        connect(Radiative.Q_flow, gain_HeaterReader_10min_rad.y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,-150},
                {-18,-150},{-18,-86},{-30,-86}}, color={191,0,0}));
        connect(HeaterReader_10min1.y[1], gain_HeaterReader_10min_rad.u) annotation (
            Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min_conv.u) annotation (
            Line(points={{-168.7,-115},{-146.35,-115},{-146.35,-118},{-126,-118}},
              color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-160},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-160},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_Real_0;

      model Case_O4_2_0
        "Heat demand gefixt"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=3,
          aziA=-0.78539816339745,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{28,-80},{58,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{92,-78},{122,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{148,-76},{178,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=1,
          aziA=-0.78539816339745,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-60,-90},{-30,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.78539816339745,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.78539816339745,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{4,12},{32,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{2,62},{30,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.3561944901923,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.3561944901923,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.78539816339745,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.3561944901923,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-278,-10},{-252,16}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-278,-90},{-254,-66}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-282,-50},{-256,-24}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-280,-126},{-256,-102}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min(k=1000*6)
          annotation (Placement(transformation(extent={{-236,-46},{-216,-26}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-234,-6},{-214,14}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{120.5,-52.4},{134.25,-52.4},{134.25,-71.2},{148.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-54,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-30.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-31.5,-66},{-9.75,-66},{-9.75,-75.2},{28.6,-75.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{25,-50.1333},{-2.5,-50.1333},{-2.5,-8.4},{-27.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-62.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-45.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{92.6,-73.2},{74.3,-73.2},{74.3,-54.4},{56.5,-54.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-33.4,67.2},{-16.7,67.2},{-16.7,17.1},{4.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-63,-60},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{9.6,44.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{17.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{25,-48},{41.5,-48},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-28.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-30,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-30,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{123.5,
                -58.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{122,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{122,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{25,-45.8667},{24,-45.8667},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min.u) annotation (Line(
              points={{-254.7,-37},{-240.35,-37},{-240.35,-36},{-238,-36}}, color={0,0,
                127}));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-250.7,
                3},{-239.35,3},{-239.35,4},{-236,4}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_0;

      model Case_O4_2_1 "Heat demand gefixt-->correct facing Azimuth angle"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=3,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{26,-80},{56,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-62,-90},{-32,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-278,-10},{-252,16}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-278,-90},{-254,-66}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-282,-50},{-256,-24}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-280,-126},{-256,-102}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min(k=1000*6)
          annotation (Placement(transformation(extent={{-236,-46},{-216,-26}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-234,-6},{-214,14}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-56,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{
                -32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-33.5,-66},{-9.75,-66},{-9.75,-75.2},{26.6,-75.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{23,-50.1333},{-2.5,-50.1333},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-47.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-54.4},{54.5,-54.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-65,-60},{-65,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{23,-48},{41.5,-48},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-30.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-32,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-32,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{23,-45.8667},{24,-45.8667},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min.u) annotation (Line(
              points={{-254.7,-37},{-240.35,-37},{-240.35,-36},{-238,-36}}, color={0,0,
                127}));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-250.7,
                3},{-239.35,3},{-239.35,4},{-236,4}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_1;

      model Case_O4_2_Real_1
        "heat demand as input --> correct facing azimuth angle."
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=3,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{28,-82},{58,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{92,-80},{122,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{148,-78},{178,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-60,-92},{-30,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{4,10},{32,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{2,62},{30,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,160},{-122,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,222},{-120,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-160,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={218,148})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={212,190})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{202,208},{190,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={248,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{46,328},{58,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{70,-16},{58,4}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-278,-10},{-252,16}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-278,-90},{-254,-66}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-196,-128},{-170,-102}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-280,-126},{-256,-102}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=1000*6*0.7)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-234,-6},{-214,14}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=1000*6*0.3)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min1(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-198,-164},{-172,-138}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{120.5,-54.4},{134.25,-54.4},{134.25,-73.2},{148.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-54,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-33.68},{-30.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-31.5,-68},{-9.75,-68},{-9.75,-77.2},{28.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{25,-52.1333},{-2.5,-52.1333},{-2.5,-8.4},{-27.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-62.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-45.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{92.6,-75.2},{74.3,-75.2},{74.3,-56.4},{56.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-33.4,67.2},{-16.7,67.2},{-16.7,15.1},{4.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-63,-62},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{9.6,42.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-121,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-123,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-155,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{213,146},{213,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{207,192},{156,192},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{191,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{243,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{57,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{17.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{25,-50},{41.5,-50},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{123.5,
                -60.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{122,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{122,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{25,-47.8667},{24,-47.8667},{24,-4},{59,-4}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-250.7,
                3},{-239.35,3},{-239.35,4},{-236,4}}, color={0,0,127}));
        connect(gain_HeaterReader_10min_conv.y, Convective.Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,-118},
                {-12,-118},{-12,-81.5},{-30,-81.5}}, color={191,0,0}));
        connect(Radiative.Q_flow, gain_HeaterReader_10min_rad.y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,-150},
                {-18,-150},{-18,-86},{-30,-86}}, color={191,0,0}));
        connect(HeaterReader_10min1.y[1], gain_HeaterReader_10min_rad.u) annotation (
            Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min_conv.u) annotation (
            Line(points={{-168.7,-115},{-146.35,-115},{-146.35,-118},{-126,-118}},
              color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-160},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-160},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_Real_1;

      model Case_O4_2_Real_2
        "correct facing azimuth angle --> window between kitchen and living room"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76 - 0.8,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{28,-82},{58,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{92,-80},{122,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{148,-78},{178,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-60,-92},{-30,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{4,10},{32,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{2,62},{30,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,160},{-122,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,222},{-120,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-160,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={218,148})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={212,190})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{202,208},{190,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={248,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{46,328},{58,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{70,-16},{58,4}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-286,336},{-260,362}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-284,298},{-260,322}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-196,-128},{-170,-102}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-286,262},{-262,286}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=1000*6*0.7)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-242,340},{-222,360}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=1000*6*0.3)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min1(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-198,-164},{-172,-138}})));

        IDEAS.Buildings.Components.InternalWall Window_Living_Room_Kitchen(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) "Internal window"
          annotation (Placement(transformation(extent={{0,-104},{12,-84}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{120.5,-54.4},{134.25,-54.4},{134.25,-73.2},{148.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-54,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-33.68},{-30.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-31.5,-68},{-9.75,-68},{-9.75,-77.2},{28.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{25,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-27.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-62.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-45.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{92.6,-75.2},{74.3,-75.2},{74.3,-56.4},{56.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-33.4,67.2},{-16.7,67.2},{-16.7,15.1},{4.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-63,-63.5},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{9.6,42.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-121,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-123,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-155,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{213,146},{213,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{207,192},{156,192},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{191,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{243,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{57,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{17.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{25,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{123.5,
                -60.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{122,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{122,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{25,-49.2},{24,-49.2},{24,-4},{59,-4}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-258.7,
                349},{-247.35,349},{-247.35,350},{-244,350}},
                                                      color={0,0,127}));
        connect(gain_HeaterReader_10min_conv.y, Convective.Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,-118},
                {-12,-118},{-12,-81.5},{-30,-81.5}}, color={191,0,0}));
        connect(Radiative.Q_flow, gain_HeaterReader_10min_rad.y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,-150},
                {-18,-150},{-18,-86},{-30,-86}}, color={191,0,0}));
        connect(HeaterReader_10min1.y[1], gain_HeaterReader_10min_rad.u) annotation (
            Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min_conv.u) annotation (
            Line(points={{-168.7,-115},{-146.35,-115},{-146.35,-118},{-126,-118}},
              color={0,0,127}));
        connect(Kitchen.proBusExt[4], Window_Living_Room_Kitchen.propsBus_a)
          annotation (Line(
            points={{25,-47.6},{18,-47.6},{18,-92},{11,-92}},
            color={255,204,51},
            thickness=0.5));
        connect(Window_Living_Room_Kitchen.propsBus_b, Living_Room.proBusExt[2])
          annotation (Line(
            points={{1,-92},{-28,-92},{-28,-60.5},{-63,-60.5}},
            color={255,204,51},
            thickness=0.5));
        annotation (Diagram(coordinateSystem(extent={{-300,-160},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-160},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_Real_2;

      model Case_O4_2_2
        "correct facing Azimuth angle --> Window between kitchen and living room"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76 - 0.8,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{26,-82},{56,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-62,-90},{-32,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-290,340},{-264,366}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-290,256},{-266,280}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,300},{-268,326}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-292,220},{-268,244}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min(k=1000*6)
          annotation (Placement(transformation(extent={{-248,304},{-228,324}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-246,344},{-226,364}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1)
          annotation (Placement(transformation(extent={{6,-100},{18,-80}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-56,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{
                -32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-33.5,-66},{-9.75,-66},{-9.75,-77.2},{26.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{23,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-47.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{54.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-65,-61.5},{-65,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{23,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-30.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-32,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-32,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{23,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min.u) annotation (Line(
              points={{-266.7,313},{-252.35,313},{-252.35,314},{-250,314}}, color={0,0,
                127}));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-262.7,
                353},{-251.35,353},{-251.35,354},{-248,354}},
                                                      color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{17,-88},{20,-88},{20,-47.6},{23,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (
            Line(
            points={{7,-88},{-28,-88},{-28,-58.5},{-65,-58.5}},
            color={255,204,51},
            thickness=0.5));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_2;

      model Case_O4_2_2_1
        "correct facing Azimuth angle --> Window between kitchen and living room"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=true,
          nSurfExt=3,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=0.9*1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{26,-82},{56,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-62,-90},{-32,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader(
          tableOnFile=true,
          tableName="tab",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600)
          annotation (Placement(transformation(extent={{-278,-10},{-252,16}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_Living_Room(
          tableOnFile=true,
          tableName="tabT",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TemperatureLeefruimteReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=3600) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-278,-90},{-254,-66}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_10min(
          tableOnFile=true,
          tableName="tab_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader_10min.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-282,-50},{-256,-24}})));

        Modelica.Blocks.Sources.CombiTimeTable TempReader_10min_Living_Room(
          tableOnFile=true,
          tableName="tabT_10min",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/TempReader_10min_Living_Room.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-280,-126},{-256,-102}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min(k=1000*6)
          annotation (Placement(transformation(extent={{-236,-46},{-216,-26}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000)
          annotation (Placement(transformation(extent={{-234,-6},{-214,14}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-56,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{
                -32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-33.5,-66},{-9.75,-66},{-9.75,-77.2},{26.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{23,-52.1333},{-2.5,-52.1333},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-47.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{54.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-65,-60},{-65,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{23,-50},{41.5,-50},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-30.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-32,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-32,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{23,-47.8667},{24,-47.8667},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(HeaterReader_10min.y[1], gain_HeaterReader_10min.u) annotation (Line(
              points={{-254.7,-37},{-240.35,-37},{-240.35,-36},{-238,-36}}, color={0,0,
                127}));
        connect(HeaterReader.y[1], gain_HeaterReader.u) annotation (Line(points={{-250.7,
                3},{-239.35,3},{-239.35,4},{-236,4}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_2_1;

      model Case_O4_2_Real_3
        "window between kitchen and living room --> read all real-life measurements"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76 - 0.8,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{28,-82},{58,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{92,-80},{122,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{148,-78},{178,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-60,-92},{-30,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-56,-34},{-26,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-60,40},{-32,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this coourse/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{4,10},{32,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{2,62},{30,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,160},{-122,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,222},{-120,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-160,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={218,148})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={212,190})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{202,208},{190,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={248,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{46,328},{58,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-268,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{70,-16},{58,4}})));

        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_con(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-130},
                  {-172,-104}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=1000*6*0.7)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=1000*6*0.3)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_rad(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-164},
                  {-172,-138}})));

        IDEAS.Buildings.Components.InternalWall Window_Living_Room_Kitchen(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) "Internal window"
          annotation (Placement(transformation(extent={{0,-104},{12,-84}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-254,270},{-230,294}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{120.5,-54.4},{134.25,-54.4},{134.25,-73.2},{148.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-54,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-33.68},{-30.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-31.5,-68},{-9.75,-68},{-9.75,-77.2},{28.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{25,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-27.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-46,46.8},{-44,46.8},{-44,-8.4},{-41.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-62.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-45.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{92.6,-75.2},{74.3,-75.2},{74.3,-56.4},{56.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-33.4,67.2},{-16.7,67.2},{-16.7,15.1},{4.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-63,-63.5},{-63,-52},{-68,-52},{-68,-42},{18,-42},{18,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-62.8,75.7},{2,75.7},{2,67.1},{2.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{9.6,42.3},{9.6,47.15},{25.52,47.15},{25.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-59,-2},{-22.5,-2},{-22.5,68.8},{16,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-121,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-123,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-155,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{213,146},{213,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{207,192},{156,192},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{191,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{243,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{57,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-46.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{15.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{17.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{25,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{123.5,
                -60.8},{123.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{122,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{122,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-257,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{25,-49.2},{24,-49.2},{24,-4},{59,-4}},
            color={255,204,51},
            thickness=0.5));
        connect(gain_HeaterReader_10min_conv.y, Convective.Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,-118},
                {-12,-118},{-12,-81.5},{-30,-81.5}}, color={191,0,0}));
        connect(Radiative.Q_flow, gain_HeaterReader_10min_rad.y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,-150},
                {-18,-150},{-18,-86},{-30,-86}}, color={191,0,0}));
        connect(HeaterReader_rad.y[1], gain_HeaterReader_10min_rad.u) annotation (
           Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_con.y[1], gain_HeaterReader_10min_conv.u)
          annotation (Line(points={{-170.7,-117},{-146.35,-117},{-146.35,-118},{
                -126,-118}}, color={0,0,127}));
        connect(Kitchen.proBusExt[4], Window_Living_Room_Kitchen.propsBus_a)
          annotation (Line(
            points={{25,-47.6},{18,-47.6},{18,-92},{11,-92}},
            color={255,204,51},
            thickness=0.5));
        connect(Window_Living_Room_Kitchen.propsBus_b, Living_Room.proBusExt[2])
          annotation (Line(
            points={{1,-92},{-28,-92},{-28,-60.5},{-63,-60.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(
              points={{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color=
               {0,0,127}));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (
            Line(points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}},
              color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-160},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-160},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_Real_3;

      model Case_O4_2_3_F
        "Window between kitchen and living room --> read in all real-life measurements"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76 - 0.8,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-62,-90},{-32,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-92,-146},{-72,-126}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{6,-100},{18,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-144,344},{-124,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-56,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{
                -32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-33.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-47.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-65,-61.5},{-65,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-30.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-32,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-32,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,
                -132},{-116,-132},{-116,-144},{-94,-144}},
                                                    color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-172,-132},{-172,-128},{-94,-128}},
                                                             color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,
                -180},{-94,-180},{-94,-136}},
                                          color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-71,
                -136},{-70,-136},{-70,-156},{-50,-156},{-50,-158},{-30,-158}},
                                                                         color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{
                -54,-132},{-54,-142},{-30,-142}},
                                       color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{17,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{7,-88},{-28,-88},{-28,-58.5},{-65,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-146,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_3_F;

      model Case_O4_2_4
        "read in all real-life measurements -->warm up living room: bigger front window+smaller front area+heat gains by electrical appliances+less air infiltration"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.76 - 0.8,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{26,-82},{56,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.82,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-62,-90},{-32,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{6,-100},{18,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-256,226},{-232,250}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-146,314})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression Expr_difference_Living_room(y=
              Reader_Living_Room.y[1] - (Living_Room.TSensor - 273.15))
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-252,12})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-238,312},{-218,332}})));
        Modelica.Blocks.Sources.RealExpression Expr_Living_room_TSensor(y=
              Living_Room.TSensor) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,308})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-56,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{
                -32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-33.5,-66},{-9.75,-66},{-9.75,-77.2},{26.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{23,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-47.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{54.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-65,-61.5},{-65,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{23,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-30.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-32,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-32,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{23,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{17,-88},{20,-88},{20,-47.6},{23,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{7,-88},{-28,-88},{-28,-58.5},{-65,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(realExpression.y, prescribedHeatFlow.Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points=
               {{-44,-110},{-22,-110},{-22,-79.5},{-32,-79.5}}, color={191,0,0}));
        connect(realExpression1.y, prescribedHeatFlow1.Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-84},{-32,-84}}, color={191,0,0}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,
                322},{-252,322},{-252,328},{-240,328}}, color={0,0,127}));
        connect(Expr_Living_room_TSensor.y, add.u2) annotation (Line(points={{
                -245,308},{-245,313},{-240,313},{-240,316}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_4;

      model Case_O4_2_4_0
        "read in all real-life measurements--> electrical appliances (in Living Room + Kitchen)"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          fracD=0.15,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-64,-90},{-34,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-58,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-35.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-49.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-67,-61.5},{-67,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-32.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-34,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-34,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-58.5},{-67,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-84},{-34,-84}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-79.5},{-34,-79.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,
                -188},{82,-188},{82,-70.8},{54,-70.8}}, color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,
                -168},{64,-168},{64,-75.6},{54,-75.6}}, color={191,0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_4_0;

      model Case_O4_2_3
        "Window between kitchen and living room-->read in all real-life measurements"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          fracD=0.15,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-64,-90},{-34,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-58,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-35.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-49.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-67,-61.5},{-67,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-32.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-34,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-34,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-58.5},{-67,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_3;

      model Case_O4_2_3_test_light
        "Window between kitchen and living room-->read in all real-life measurements"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          fracD=0.15,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-64,-90},{-34,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-58,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-35.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-49.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-67,-61.5},{-67,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-32.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-34,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-34,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-58.5},{-67,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_3_test_light;

      model Case_O4_2_4_1
        "electrical appliances (in Living Room + Kitchen)-->light (more internal heat gain and bedroom1 off)"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          fracD=0.15,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-64,-90},{-34,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-58,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-35.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-49.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-67,-61.5},{-67,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-32.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-34,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-34,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-58.5},{-67,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-84},{-34,-84}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-79.5},{-34,-79.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,
                -188},{82,-188},{82,-70.8},{54,-70.8}}, color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,
                -168},{64,-168},{64,-75.6},{54,-75.6}}, color={191,0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_4_1;

      model Case_O4_2_4_2
        "light (more internal heat gain and bedroom1) -->more heat transmission from kitchen too living room"
       // import WeatherReader;
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          fracD=0.15,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-64,-90},{-34,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-58,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-35.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-49.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-67,-61.5},{-67,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-32.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-34,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-34,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-58.5},{-67,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-84},{-34,-84}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-79.5},{-34,-79.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-70.8},{54,-70.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-75.6},{54,-75.6}},       color={191,0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_4_2;

      model Case_O4_2_4_3
        "more heat transmission from kitchen too living room --> increase front window area and frame fraction"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=13.24,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-82},{54,-50}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-78},{120,-46}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-76},{176,-44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-64,-90},{-34,-60}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-34},{-28,-2}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,12},{30,46}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=13.24,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-52.4},{134.25,-52.4},{134.25,-71.2},{146.6,-71.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-58,-61.5},{-42,-61.5},{-42,-56},{-32,-56},{-32,-33.68},{-32.8,-33.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-35.5,-66},{-9.75,-66},{-9.75,-77.2},{24.6,-77.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-52.4},{-2.5,-52.4},{-2.5,-8.4},{-29.5,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-8.4},{-43.3,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-66},{-49.3,-66}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-73.2},{74.3,-73.2},{74.3,-56.4},{52.5,-56.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,17.1},{2.56,17.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-67,-61.5},{-67,-52},{-68,-52},{-68,-42},{16,-42},{16,18.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,44.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-2},{-22.5,-2},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,39.2},{15.72,39.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-50.8},{41.5,-50.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-32.5,
                -72},{-14,-72},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-84},{-34,-84}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-34,-79.5},{0,-79.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -58.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-66.8},{120,-66.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-71.6},{
                120,-71.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-49.2},{24,-49.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-47.6},{21,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-58.5},{-67,-58.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-84},{-34,-84}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-79.5},{-34,-79.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-70.8},{54,-70.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-75.6},{54,-75.6}},       color={191,0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_4_3;

      model Case_O4_2_4_4
        "increase front window area and frame fraction --> decrease air infiltration"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{
                -32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-63.5},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
                -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{
                120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-60.5},{-69,-60.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=26654400));
      end Case_O4_2_4_4;

      model Case_O4_2_4_5
        "decrease air infiltration-->decrease front area"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-63.5},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
                -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-60.5},{-69,-60.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=32400000));
      end Case_O4_2_4_5;

      model Case_O4_2_5
        "decrease front area--> increase thermal capacitance by increasing the thermal mass in the zone"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=200) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
                -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=32400000));
      end Case_O4_2_5;

      model Case_O4_2_Real_5
        "decrease front area--> increase thermal capacitance by increasing the thermal mass in the zone"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=100) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_con(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-130},
                  {-172,-104}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=1000*6*0.7)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=1000*6*0.3)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_rad(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-164},
                  {-172,-138}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        connect(gain_HeaterReader_10min_conv.y,Convective. Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,
                -118},{-12,-118},{-12,-81.5},{-36,-81.5}},
                                                     color={191,0,0}));
        connect(Radiative.Q_flow,gain_HeaterReader_10min_rad. y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,
                -150},{-18,-150},{-18,-86},{-36,-86}},
                                                 color={191,0,0}));
        connect(HeaterReader_rad.y[1],gain_HeaterReader_10min_rad. u) annotation (
           Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_con.y[1],gain_HeaterReader_10min_conv. u)
          annotation (Line(points={{-170.7,-117},{-146.35,-117},{-146.35,-118},{
                -126,-118}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=26640000, StopTime=30600000));
      end Case_O4_2_Real_5;

      model Case_O4_2_5_0
        "decrease front area--> increase thermal capacitance by increasing the thermal mass in the zone"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=ones(1)*2800,
          Q_design=ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=250) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
                -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=26640000, StopTime=30600000));
      end Case_O4_2_5_0;

      model Case_O4_2_6
        "increase thermal capacitance by increasing the thermal mass in the zone --> efficiency accumulator"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=0.5*ones(1)*2800,
          Q_design=0.5*ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=100) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
                -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_6;

      model Case_O4_2_Real_6
        "increase thermal capacitance by increasing the thermal mass in the zone --> efficiency accumulator"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=100) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_con(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-130},
                  {-172,-104}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=(1000*6*0.7)*0.6)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=(1000*6*0.3)*0.6)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_rad(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-164},
                  {-172,-138}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        connect(gain_HeaterReader_10min_conv.y,Convective. Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,
                -118},{-12,-118},{-12,-81.5},{-36,-81.5}},
                                                     color={191,0,0}));
        connect(Radiative.Q_flow,gain_HeaterReader_10min_rad. y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,
                -150},{-18,-150},{-18,-86},{-36,-86}},
                                                 color={191,0,0}));
        connect(HeaterReader_rad.y[1],gain_HeaterReader_10min_rad. u) annotation (
           Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_con.y[1],gain_HeaterReader_10min_conv. u)
          annotation (Line(points={{-170.7,-117},{-146.35,-117},{-146.35,-118},{
                -126,-118}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_Real_6;

      model Case_O4_2_Real_6_0
        "increase thermal capacitance by increasing the thermal mass in the zone --> efficiency accumulator"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=250) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_con(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-130},
                  {-172,-104}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_conv(k=(1000*6*0.7)*0.6)
          annotation (Placement(transformation(extent={{-124,-128},{-104,-108}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Convective
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-80,-128},{-60,-108}})));
        Modelica.Blocks.Math.Gain gain_HeaterReader_10min_rad(k=(1000*6*0.3)*0.6)
          annotation (Placement(transformation(extent={{-122,-160},{-102,-140}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow Radiative
          "Prescribed heat flow"
          annotation (Placement(transformation(extent={{-76,-160},{-56,-140}})));
        Modelica.Blocks.Sources.CombiTimeTable HeaterReader_rad(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource(
              "modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60) annotation (Placement(transformation(extent={{-198,-164},
                  {-172,-138}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        connect(gain_HeaterReader_10min_conv.y,Convective. Q_flow)
          annotation (Line(points={{-103,-118},{-80,-118}}, color={0,0,127}));
        connect(Convective.port, Living_Room.gainCon) annotation (Line(points={{-60,
                -118},{-12,-118},{-12,-81.5},{-36,-81.5}},
                                                     color={191,0,0}));
        connect(Radiative.Q_flow,gain_HeaterReader_10min_rad. y)
          annotation (Line(points={{-76,-150},{-101,-150}}, color={0,0,127}));
        connect(Radiative.port, Living_Room.gainRad) annotation (Line(points={{-56,
                -150},{-18,-150},{-18,-86},{-36,-86}},
                                                 color={191,0,0}));
        connect(HeaterReader_rad.y[1],gain_HeaterReader_10min_rad. u) annotation (
           Line(points={{-170.7,-151},{-148.35,-151},{-148.35,-150},{-124,-150}},
              color={0,0,127}));
        connect(HeaterReader_con.y[1],gain_HeaterReader_10min_conv. u)
          annotation (Line(points={{-170.7,-117},{-146.35,-117},{-146.35,-118},{
                -126,-118}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=32400000));
      end Case_O4_2_Real_6_0;

      model Case_O4_2_7
        " efficiency accumulator--> sensor heat demand model air temperature and not operative"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=0.5*ones(1)*2800,
          Q_design=0.5*ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
              6 and ( calTim.hour == 7)  then (273.15
               + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=100) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
        Modelica.Blocks.Sources.RealExpression expr_air_temp(y=Living_Room.TAir)
          annotation (Placement(transformation(extent={{-42,-132},{-22,-112}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-64.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        connect(expr_air_temp.y, heat_Demand.TSensor[1]) annotation (Line(points=
                {{-21,-122},{4,-122},{4,-120},{27.6,-120}}, color={0,0,127}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=26640000, StopTime=30600000));
      end Case_O4_2_7;

      model Case_O4_2_8
        "efficiency accumulator --> bathroom steady state heat increase"
       // import WeatherReader
        package Medium = IDEAS.Media.Air "Air medium";

        //////////////////////Parameters for second floor//////////////////////////////////////////////////
        //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
        //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
        //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
       // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
       // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

        //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
        parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
        parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
        parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

        //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=8.22,
          allowFlowReversal=true,
          linIntRad=false,
          redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinD=false,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=2.27,
          w=4.23,
          lA=2.41,
          lB=1.62,
          lC=2.41,
          lD=1.25*2.4,
          AZone=4.64*2.41,
          ACei=2.41*4.64,
          h=2.5,
          A_winD=1.82*2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "kitchen on the ground floor"
          annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=3.95,
          w=2.02,
          lA=3.95,
          lB=1.62,
          lC=3.95,
          lD=1.62,
          AZone=2.02*3.95,
          h=2.5,
          A_winA=0.48*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare Walls.Back_extension_roof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false)
          "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
          annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          hasWinA=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.2,
          w=2.02,
          lA=3.2,
          lB=2.02,
          lC=3.2,
          h=2.5,
          A_winA=0.64*0.5,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Outer_wall_back conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_2 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Bergruimte on the SW side of the ground floor"
          annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=4,
          aziA=-0.97738438111682,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.22,
          h=3.25,
          A_winD=1.82*2.12,
          fracD=0.25,
          linExtRad=true,
          redeclare Walls.Inner_wall_1 conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          allowFlowReversal=true,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=false,
          hasWinD=false,
          nSurfExt=1,
          aziA=-0.97738438111682,
          l=8.51,
          w=0.98,
          lA=8.51,
          lB=1.18,
          lC=7.91,
          lD=1.15,
          AZone=(1.15*4.36) + (1.66*4.15),
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_1 conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityB=false,
          hasCavityD=false) "Hallway (zone where the front door of the house is)"
          annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

        ////////////////////////// First floor: zones//////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=2,
          aziA=-0.97738438111682,
          l=4,
          w=4.25,
          lA=4.36,
          lB=2.77,
          lC=4.36,
          lD=4.64,
          AZone=(4*4.25) - (2.96*4.02),
          h=3.06,
          A_winD=(1.12*1.49) + (1.01*1.49),
          nWinD=1,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Inner_wall_2 conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Slaapkamer (bedroom) floor 1 16m²"
          annotation (Placement(transformation(extent={{-64,40},{-36,74}})));

        IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Ceiling,
          azi=IDEAS.Types.Azimuth.S,
          A=2.96*4.02)
          "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-114,6})));

        //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          /// continuation first floor: zones///////////////////////////////////////

        IDEAS.Buildings.Components.RectangularZoneTemplate Office(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.75,
          w=2.77,
          lA=3.75,
          lC=4.15,
          lD=2.77,
          AZone=2.77*3.75,
          h=3.06,
          A_winB=0.97*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Inner_wall_2 conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Wall_neighbour conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
          "Bureau (office room) first floor 16m²"
          annotation (Placement(transformation(extent={{2,10},{30,44}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
          redeclare package Medium = IDEAS.Media.Air,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinB=true,
          hasWinD=false,
          nSurfExt=0,
          aziA=-0.97738438111682,
          l=3.81,
          w=1.37,
          lA=4.15,
          lB=1.66,
          lD=1.37,
          AZone=2.84*1.36,
          h=3.06,
          A_winB=0.93*1.49,
          A_winD=1.12*1.49,
          nWinD=2,
          redeclare Walls.Wall_neighbour conTypA,
          redeclare Walls.Outer_wall_back conTypB,
          redeclare Walls.Inner_wall_2 conTypC,
          redeclare Walls.Inner_wall_1 conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Walls.inner_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
          annotation (Placement(transformation(extent={{0,62},{28,96}})));

      ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
          IDEAS.Buildings.Components.Zone Bedroom_2(
          redeclare package Medium = Medium,
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          A=4*4.25,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          nSurf=10,
          V=37.69,
          hZone=2.5) "Bergruimte 17m2"
          annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

         IDEAS.Buildings.Components.OuterWall outerWall1NE(
          redeclare Walls.Outer_wall_front constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=1.5*4.64 - (2*0.81*0.93))
                   "Wall 2nd floor, front house"
          annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
          IDEAS.Buildings.Components.Window window1N2(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
        IDEAS.Buildings.Components.Window window1N1(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.5481807079117,
          A=0.81*0.93,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
          annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
          IDEAS.Buildings.Components.InternalWall internalWall1S2(
          redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=3.4)                       "Wall between bergruimte & stairs"
          annotation (Placement(transformation(extent={{-6,-10},{6,10}},
              rotation=180,
              origin={14,286})));
        IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=4*4.25)
          "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={2,126})));
        IDEAS.Buildings.Components.InternalWall InternalRoof(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
          A=4.12*4.26)
                   "Roof between bergruimte and attic" annotation (Placement(
              transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-72,268})));

        IDEAS.Buildings.Components.OuterWall Roof(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
            constructionType,
          inc(displayUnit="deg") = 0.52063171586991,
          azi=-2.5481807079117,
          A=15.59)                   "Diagonal roof" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={-162,214})));

        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=9.77,
          use_T_fixed=false,
          use_Q_in=false)
          "The wall to the neigbours at the SE side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-64,248})));
        IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=9.77)
          "The wall to the neigbours at the NW side" annotation (Placement(
              transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-56,152})));

        IDEAS.Buildings.Components.Zone Attic(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=7,
          V=((0.37*2.84) + (4.48*2.84/2))*2.77,
          hZone=4.87,
          A=2.77*2.84) "Zolder 10m² on the second floor"
          annotation (Placement(transformation(extent={{104,126},{138,156}})));

        IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=7.41)
          "The internal wall between the bergruimte and the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=270,
              origin={114,226})));
        IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.37*4.64)
          "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=180,
              origin={220,146})));
        IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=6.54*4.64,
          hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
          annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={214,188})));
        IDEAS.Buildings.Components.Window window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          annotation (Placement(transformation(extent={{204,208},{192,228}})));
        IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
          redeclare Walls.Wall_neighbour constructionType,
          inc=1.5707963267949,
          azi=2.3561944901923,
          A=(0.37*2.84) + (4.48*2.84/2))
          "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={124,78})));
        IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=2.77*2.84)
          "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={80,84})));
        IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.78539816339745,
          A=6.925)
          "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
           Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={36,146})));

        IDEAS.Buildings.Components.Zone Hallway_2(
          redeclare package Medium = Medium,
          n50=8.22,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          nSurf=8,
          V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
          hZone=4.87,
          A=2.84*1.36) "Stairs on the second floor"
          annotation (Placement(transformation(extent={{140,298},{174,334}})));

        IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-0.78539816339745,
          A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
          "The wall to the neighbours at the SE side from the stairs on the second floor"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={148,360})));
        IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.56496307887056,
          azi=0.59341194567807,
          A=1.36*6.54)
          "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
          annotation (Placement(transformation(
              extent={{-6,10},{6,-10}},
              rotation=180,
              origin={250,322})));
        IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
          redeclare Walls.Wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=2.3561944901923,
          A=2.12*2.5/2)
          "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={102,258})));
        IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
          redeclare Walls.Pitched_roof constructionType,
          inc=0.73303828583762,
          azi=-2.5481807079117,
          A=3.18*4.26)
          "The pitched roof above the zolder at the front facade of the building NE"
          annotation (Placement(transformation(extent={{44,328},{56,348}})));
        IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
          redeclare Walls.inner_floor constructionType,
          inc=IDEAS.Types.Tilt.Floor,
          azi=IDEAS.Types.Azimuth.S,
          A=1.36*2.84)
          "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
          annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={184,246})));

        //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
            offset=0)
          annotation (Placement(transformation(extent={{258,76},{278,96}})));

        IDEAS.Buildings.Components.Window Kitchen_window(
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
          inc=1.5707963267949,
          azi=0.59341194567807,
          A=1.15*1,
          redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
          "Window at the back side of the kitchen facing the koer"
          annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
        Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=200,
          QNom=0.5*ones(1)*2800,
          Q_design=0.5*ones(1)*2800)
          annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
              12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
              calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
              20)) "heating schedule accumulator" annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-234,-84})));
        Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          fractionRad=0.3*ones(1),
          t=300,
          QNom=ones(1)*2000,
          Q_design=ones(1)*2000)
          annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
        Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if ( calTim.hour == 7)  and ((calTim.day == 1) or (calTim.day == 5) or (calTim.day == 10) or (calTim.day == 15)
         or (calTim.day == 20) or (calTim.day == 25)) then (273.15
               + 21) else (273.15
               - 20)) "heating schedule accumulator, convective heat emission"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={100,-142})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
              Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-264,44})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
               + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-266,78})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
          annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
          fileName="integrator_heat_demand_bathroom.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
        IDEAS.Buildings.Components.OuterWall outerWall(
          redeclare Walls.Outer_wall_back constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=3.05*2.62) "Back facade kitchen"
          annotation (Placement(transformation(extent={{72,-18},{60,2}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
          tableOnFile=true,
          tableName="tabHeat",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
          tableOnFile=true,
          tableName="tabLivingRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

        Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
          annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
        Modelica.Blocks.Logical.Switch Switch_Start
          annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
               and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
              calTim.month == 2)) then true else false)
          annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
        Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,-132})));
        Modelica.Blocks.Logical.Switch Switch_Stop
          annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
               and (calTim.day > 17 and calTim.day < 27) then true else false)
          annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
        Modelica.Blocks.Logical.Switch Switch_Offday1
          annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
               and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
              calTim.hour < 22)) then true else false)
          annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
        Modelica.Blocks.Logical.Switch Switch_Offday2
          annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
        Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
               and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
              calTim.hour < 23)) then true else false)
          annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
        IDEAS.Buildings.Components.InternalWall internalWall(
          redeclare Walls.Window constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.59341194567807,
          A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
          tableOnFile=true,
          tableName="tabBathroom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
          tableOnFile=true,
          tableName="tabStorageRoom",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
          tableOnFile=true,
          tableName="tabBedroom1",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
          tableOnFile=true,
          tableName="tabOffice",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
          tableOnFile=true,
          tableName="tabBedroom2",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
          tableOnFile=true,
          tableName="tabAttic",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
          tableOnFile=true,
          tableName="tabKitchen",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

        Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
          tableOnFile=true,
          tableName="tabElectricity",
          columns={2},
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
          timeScale=60)
          annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

        Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
          annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
        Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
               == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
               or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
          "heating schedule accumulator" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-178,316})));
        Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
          annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
        Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-256,310})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
          annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
          annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
          annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
          annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=100) "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-156,-70})));
        IDEAS.Buildings.Components.InternalWall thermal_mass1(
          redeclare Walls.Mass_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=IDEAS.Types.Azimuth.S,
          A=20)  "increasing thermal capacity in living room" annotation (
            Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={122,-16})));
        Modelica.Blocks.Sources.RealExpression realExpression4(y=350*0.7)
          annotation (Placement(transformation(extent={{98,-176},{118,-156}})));
        Modelica.Blocks.Sources.RealExpression realExpression5(y=350*0.3)
          annotation (Placement(transformation(extent={{110,-196},{130,-176}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow4
          annotation (Placement(transformation(extent={{150,-196},{170,-176}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow5
          annotation (Placement(transformation(extent={{132,-176},{152,-156}})));
      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
            points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
            points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
            points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
            points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
            points={{-50,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
          1]) annotation (Line(
            points={{-116,11},{-116,72.3},{-66.8,72.3}},
            color={255,204,51},
            thickness=0.5));
        connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
          1]) annotation (Line(
            points={{-116,1},{-116,-68},{-51.3,-68}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
            points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
            points={{-37.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
            color={255,204,51},
            thickness=0.5));

        connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
            points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
            points={{-66.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
            points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
            color={255,204,51},
            thickness=0.5));
        connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
            points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
            color={255,204,51},
            thickness=0.5));
        connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
            points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
            color={255,204,51},
            thickness=0.5));

      //Equations floor 2///////////////////////////////////////////////////////////////////////////////

        connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
            points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
            color={255,204,51},
            thickness=0.5));
        connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
            points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
            points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
          annotation (Line(
            points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
            points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
            color={255,204,51},
            thickness=0.5));

        connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
            points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
            points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
            color={255,204,51},
            thickness=0.5));
        connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
          annotation (Line(
            points={{116,221},{74,221},{74,149.571},{104,149.571}},
            color={255,204,51},
            thickness=0.5));
        connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
            points={{215,144},{215,148.714},{104,148.714}},
            color={255,204,51},
            thickness=0.5));
        connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
            Line(
            points={{209,190},{156,190},{156,147.857},{104,147.857}},
            color={255,204,51},
            thickness=0.5));
        connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
            points={{193,220},{148,220},{148,147},{104,147}},
            color={255,204,51},
            thickness=0.5));
        connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
          annotation (Line(
            points={{122,83},{112,83},{112,146.143},{104,146.143}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
            points={{78,89},{90,89},{90,145.286},{104,145.286}},
            color={255,204,51},
            thickness=0.5));
        connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
          annotation (Line(
            points={{41,148},{72,148},{72,144.429},{104,144.429}},
            color={255,204,51},
            thickness=0.5));
        connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
          annotation (Line(
            points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
            color={255,204,51},
            thickness=0.5));

        connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
           Line(
            points={{150,355},{122,355},{122,326.35},{140,326.35}},
            color={255,204,51},
            thickness=0.5));
        connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
            Line(
            points={{245,324},{134,324},{134,325.45},{140,325.45}},
            color={255,204,51},
            thickness=0.5));
        connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
           Line(
            points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
            color={255,204,51},
            thickness=0.5));
        connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
            Line(
            points={{55,340},{94,340},{94,323.65},{140,323.65}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
            Line(
            points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
            points={{19,284},{76,284},{76,321.85},{140,321.85}},
            color={255,204,51},
            thickness=0.5));
        connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
          annotation (Line(
            points={{116,231},{126,231},{126,320.95},{140,320.95}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
          annotation (Line(
            points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-50.28,67.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
           Line(
            points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
            color={255,204,51},
            thickness=0.5));
        connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
            Line(
            points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
            color={255,204,51},
            thickness=0.5));

        connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
            points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
            color={255,204,51},
            thickness=0.5));
        connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
            points={{-74,273},{31,273},{31,320.05},{140,320.05}},
            color={255,204,51},
            thickness=0.5));
        connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
                -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
        connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
              points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
        connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
              points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
        connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
                -142},{172,-142},{172,-110.2}},              color={0,0,127}));
        connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
                -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
              points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
              points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
              color={191,0,0}));
        connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
          annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
        connect(integrator.y, jsonWri.u[1])
          annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
        connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
          annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
        connect(integrator1.y, jsonWri1.u[1])
          annotation (Line(points={{-203,78},{-174,78}},
                                                       color={0,0,127}));
        connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
            points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
               {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
        connect(Expr_start.y, Switch_Start.u2)
          annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
        connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
                -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
        connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
                {-206,-114},{-186,-114}}, color={0,0,127}));
        connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
                -158},{-152,-132},{-150,-132}}, color={255,0,255}));
        connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
                {-138.5,-124},{-150,-124}}, color={0,0,127}));
        connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
                -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
        connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
                {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday1.u1)
          annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
        connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
                {-102,-180},{-102,-140}}, color={255,0,255}));
        connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
                {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
        connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
                {14,-142},{-30,-142}}, color={0,0,127}));
        connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
                {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
        connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
                {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
        connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
            points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
            color={255,204,51},
            thickness=0.5));
        connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
            points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
              points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
                127}));
        connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
          annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
        connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
                {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
        connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
                {-232,316}}, color={0,0,127}));
        connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
          annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
              points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
        connect(realExpression.y,prescribedHeatFlow. Q_flow)
          annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
                -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
        connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
          annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
        connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
          annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
        connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
                {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
        connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
                {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
        connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
            Line(
            points={{-151,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
            Line(
            points={{-161,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
            color={255,204,51},
            thickness=0.5));
        connect(Bathroom.proBusExt[1], thermal_mass1.propsBus_b) annotation (Line(
            points={{87,-49.6},{103.5,-49.6},{103.5,-18},{117,-18}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass1.propsBus_a, Bathroom.proBusExt[2]) annotation (Line(
            points={{127,-18},{108.5,-18},{108.5,-46.4},{87,-46.4}},
            color={255,204,51},
            thickness=0.5));
        connect(realExpression4.y,prescribedHeatFlow5. Q_flow)
          annotation (Line(points={{119,-166},{132,-166}},
                                                         color={0,0,127}));
        connect(realExpression5.y,prescribedHeatFlow4. Q_flow)
          annotation (Line(points={{131,-186},{150,-186}},
                                                         color={0,0,127}));
        connect(prescribedHeatFlow5.port, Bathroom.gainCon) annotation (Line(
              points={{152,-166},{138,-166},{138,-68.8},{120,-68.8}}, color={191,
                0,0}));
        connect(prescribedHeatFlow4.port, Bathroom.gainRad) annotation (Line(
              points={{170,-186},{146,-186},{146,-73.6},{120,-73.6}}, color={191,
                0,0}));
        annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
              graphics={
              Text(
                extent={{224,-66},{296,-108}},
                lineColor={28,108,200},
                textString="Ground floor
"),           Text(
                extent={{76,54},{152,16}},
                lineColor={28,108,200},
                textString="First floor"),
              Text(
                extent={{222,294},{296,238}},
                lineColor={28,108,200},
                textString="Second floor
")}),                                                                          Icon(
              coordinateSystem(extent={{-300,-200},{300,380}})),
          experiment(StartTime=23673600, StopTime=36716400));
      end Case_O4_2_8;
    end Case_O4_Second_Report;

    package Schedules "All occupancy schedules"

      model OccSched_O4_Living_Room
        "Simple occupancy schedule, occ.y is the output of the block occ"
        extends
          IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(      final useInput=false);

        parameter Real k "Number of occupants";
        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016, offset = 0)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Modelica.Blocks.Sources.RealExpression occ(
        y=if calTim.weekDay < 6 and ( calTim.hour > 19)
           then k
        elseif calTim.weekDay > 5 and (calTim.hour < 2 or (calTim.hour > 9 and calTim.hour < 14) or calTim.hour > 19)
            then k
        else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
      equation
        connect(occ.y, nOcc)
          annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
      end OccSched_O4_Living_Room;

      model OccSched_O4_Kitchen
        "Simple occupancy schedule, occ.y is the output of the block occ"
        extends
          IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(      final useInput=false);

        parameter Real k "Number of occupants";
        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016, offset = 0)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Modelica.Blocks.Sources.RealExpression occ(
        y=if calTim.weekDay < 6 and ( calTim.hour == 19)
           then k
       elseif
             calTim.weekDay > 5 and (calTim.hour == 18 or calTim.hour == 19)
            then k
        else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
      equation
        connect(occ.y, nOcc)
          annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
      end OccSched_O4_Kitchen;

      model OccSched_O4_Bedroom1
        "Simple occupancy schedule, occ.y is the output of the block occ"
        extends
          IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(      final useInput=false);

        parameter Real k "Number of occupants";
        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016, offset = 0)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Modelica.Blocks.Sources.RealExpression occ(
        y=if calTim.weekDay < 6 and ( calTim.hour < 7)
           then k
       elseif
             calTim.weekDay > 5 and (calTim.hour > 1 and calTim.hour < 9)
            then k
        else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
      equation
        connect(occ.y, nOcc)
          annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
      end OccSched_O4_Bedroom1;

      model OccSched_O4_Test
        "Simple occupancy schedule, occ.y is the output of the block occ"
        extends
          IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(      final useInput=false);

        parameter Real k "Number of occupants";
        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016, offset = 0)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Modelica.Blocks.Sources.RealExpression occ(
        y=if calTim.hour == 24
           then k
        else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-10},{0,10}})));

      equation
        connect(occ.y, nOcc)
          annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
        annotation (experiment(StartTime=23760000, StopTime=23850000));
      end OccSched_O4_Test;

      model TEST_occ_sched
        IDEAS.Buildings.Components.RectangularZoneTemplate Leefruimte(
          redeclare package Medium = IDEAS.Media.Air,
          n50=13.24,
          allowFlowReversal=true,
          redeclare Case_O4.Schedules.OccSched_O4_Test occNum(k=1),
          redeclare parameter IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare parameter IDEAS.Buildings.Components.LightingType.None ligTyp,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinD=true,
          nSurfExt=0,
          aziA=-0.78539816339745,
          l=8.51,
          w=3.49,
          lA=7.91,
          lB=2.76,
          lC=8.51,
          lD=3.49,
          h=3.25,
          A_winD=1.82*2,
          linExtRad=true,
          redeclare Case_O4.Walls.Inner_wall_1 conTypA,
          redeclare Case_O4.Walls.Inner_wall_1 conTypB,
          redeclare Case_O4.Walls.Wall_neighbour conTypC,
          redeclare Case_O4.Walls.Outer_wall_front conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
            conTypCei,
          redeclare Case_O4.Walls.Ground_floor conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
          redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
          hasCavityA=false,
          hA=2,
          wA=1,
          hasCavityD=false) "Leefruimte (living room) on the ground floor"
          annotation (Placement(transformation(extent={{-38,-20},{-8,10}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(
          linIntRad=false,
          linExtRad=false,
          weaDat(
            pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
            HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
            calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
            totSkyCov=0.6,
            opaSkyCov=0.6,
            TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
          filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
          "Adjusted Simulation information Manager for this course"
          annotation (Placement(transformation(extent={{-46,60},{-26,80}})));

        Modelica.Blocks.Sources.CombiTimeTable inputSol(
          tableOnFile=true,
          tableName="tab1",
          columns=2:30,
          smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
          fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
          extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
          "input for solGloHor and solDifHor "
          annotation (Placement(transformation(extent={{-76,62},{-56,82}})));

      equation

        connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
        connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
        connect(Leefruimte.proBusCei[1], Leefruimte.proBusFlo[1]) annotation (
            Line(
            points={{-23.3,4},{-24,4},{-24,-14},{-23,-14}},
            color={255,204,51},
            thickness=0.5));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false)),
          Diagram(coordinateSystem(preserveAspectRatio=false)),
          experiment(StartTime=23673600, StopTime=23760000));
      end TEST_occ_sched;

      model OccSched_O4_Bathroom
        "Simple occupancy schedule, occ.y is the output of the block occ"
        extends
          IDEAS.Buildings.Components.Occupants.BaseClasses.PartialOccupants(      final useInput=false);

        parameter Real k "Number of occupants";
        IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016, offset = 0)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Modelica.Blocks.Sources.RealExpression occ(
        y=if calTim.weekDay < 6 and ( calTim.hour == 7)
           then k
       elseif
             calTim.weekDay > 5 and (calTim.hour == 9)
            then k
        else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
      equation
        connect(occ.y, nOcc)
          annotation (Line(points={{1,0},{120,0}}, color={0,0,127}));
      end OccSched_O4_Bathroom;
    end Schedules;

    package TEST
      model Test_U
        IDEAS.Buildings.Components.Zone zone(
          redeclare package Medium = IDEAS.Media.Air,
          nSurf=5,
          V=5) annotation (Placement(transformation(extent={{-36,16},{8,58}})));
        IDEAS.Buildings.Components.OuterWall Medium_innerwall(
          redeclare Walls.Inner_wall_2 constructionType,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=10) annotation (Placement(transformation(extent={{-96,36},{-84,56}})));
        IDEAS.Buildings.Components.OuterWall Thin_innerwall(
          redeclare Walls.Inner_wall_1 constructionType,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=5) annotation (Placement(transformation(extent={{-92,12},{-80,32}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim
          annotation (Placement(transformation(extent={{70,64},{90,84}})));
        IDEAS.Buildings.Components.OuterWall Glasswall(
          redeclare Walls.Window constructionType,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=5) annotation (Placement(transformation(extent={{-92,-26},{-80,-6}})));
        IDEAS.Buildings.Components.SlabOnGround slabOnGround(redeclare
            Walls.Ground_floor constructionType, A=23)
          annotation (Placement(transformation(extent={{-68,-48},{-56,-28}})));
        IDEAS.Buildings.Components.OuterWall airwall(
          redeclare Walls.Air_wall constructionType,
          inc=1.5707963267949,
          azi=0.78539816339745,
          A=10) annotation (Placement(transformation(extent={{-96,66},{-84,86}})));
      equation
        connect(Medium_innerwall.propsBus_a, zone.propsBus[1]) annotation (Line(
            points={{-85,48},{-58,48},{-58,48.76},{-36,48.76}},
            color={255,204,51},
            thickness=0.5));
        connect(Thin_innerwall.propsBus_a, zone.propsBus[2]) annotation (Line(
            points={{-81,24},{-54,24},{-54,47.08},{-36,47.08}},
            color={255,204,51},
            thickness=0.5));
        connect(Glasswall.propsBus_a, zone.propsBus[3]) annotation (Line(
            points={{-81,-14},{-58,-14},{-58,45.4},{-36,45.4}},
            color={255,204,51},
            thickness=0.5));
        connect(slabOnGround.propsBus_a, zone.propsBus[4]) annotation (Line(
            points={{-57,-36},{-48,-36},{-48,43.72},{-36,43.72}},
            color={255,204,51},
            thickness=0.5));
        connect(airwall.propsBus_a, zone.propsBus[5]) annotation (Line(
            points={{-85,78},{-59.5,78},{-59.5,42.04},{-36,42.04}},
            color={255,204,51},
            thickness=0.5));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false)),
          Diagram(coordinateSystem(preserveAspectRatio=false)),
          experiment(StopTime=7200));
      end Test_U;
    end TEST;

    model Case_O4_Final_Report
      "increase thermal capacitance by increasing the thermal mass in the zone --> efficiency accumulator"
     // import WeatherReader
      package Medium = IDEAS.Media.Air "Air medium";

      //////////////////////Parameters for second floor//////////////////////////////////////////////////
      //parameter Modelica.SIunits.Length a1 = 1.5 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length b1 = 1.5 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length c1 = 2.5 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length d1 = 1 "See drawaing wall WE zone 1 on paper";
      //parameter Modelica.SIunits.Length f1 = 4.26 "See drawaing wall N zone 1 on paper";
      //parameter Modelica.SIunits.Length g1 = 0.93 "See drawaing wall N zone 1 on paper";
      //parameter Modelica.SIunits.Length h1 = 0.81 "See drawaing wall N zone 1 on paper";
      //parameter Modelica.SIunits.Length i1 = 1.36 "See drawaing wall S zone 1 on paper";
     // parameter Modelica.SIunits.Length x1 = 2.12 "See drawing diagonal roof zone 1 on paper";
     // parameter Modelica.SIunits.Length j1 = 2.77 "See drawaing wall S zone 1 on paper";

      //// parameters heating//////////////////////////////////////////////////////////////////////////////////////
      parameter Real T_set=21+273.15 "Temperature setpoint of the zones in K";
      parameter Real Qconv = 350 "Convective heat emission of our eletric accumulator";
      parameter Real Qrad = 150 "Radiative heat emission of our eletric accumulator";

      //////////////////////////// Ground floor: zones////////////////////////////////////////////////////////
        IDEAS.Buildings.Components.RectangularZoneTemplate Kitchen(
        redeclare package Medium = IDEAS.Media.Air,
        useLigCtrInput=true,
        n50=8.22,
        allowFlowReversal=true,
        linIntRad=false,
        redeclare Schedules.OccSched_O4_Kitchen occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        hasWinD=false,
        nSurfExt=4,
        aziA=-0.97738438111682,
        l=2.27,
        w=4.23,
        lA=2.41,
        lB=1.62,
        lC=2.41,
        lD=1.25*2.4,
        AZone=4.64*2.41,
        ACei=2.41*4.64,
        h=2.5,
        A_winD=1.82*2,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Inner_wall_2 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare Walls.Back_extension_roof conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false) "kitchen on the ground floor"
        annotation (Placement(transformation(extent={{24,-84},{54,-52}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Bathroom(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        allowFlowReversal=true,
        redeclare Schedules.OccSched_O4_Bathroom occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        hasWinA=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.97738438111682,
        l=3.95,
        w=2.02,
        lA=3.95,
        lB=1.62,
        lC=3.95,
        lD=1.62,
        AZone=2.02*3.95,
        h=2.5,
        A_winA=0.48*0.5,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Outer_wall_back conTypA,
        redeclare Walls.Inner_wall_1 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare Walls.Back_extension_roof conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false)
        "the toilet and the bathroom are 1 zone because there is one sensor and it's open"
        annotation (Placement(transformation(extent={{90,-80},{120,-48}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate Storage_Room(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        allowFlowReversal=true,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        hasWinA=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.97738438111682,
        l=3.2,
        w=2.02,
        lA=3.2,
        lB=2.02,
        lC=3.2,
        h=2.5,
        A_winA=0.64*0.5,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Outer_wall_back conTypA,
        redeclare Walls.Outer_wall_back conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_2 conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingA,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypA,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false) "Bergruimte on the SW side of the ground floor"
        annotation (Placement(transformation(extent={{146,-78},{176,-46}})));

      IDEAS.Buildings.Components.RectangularZoneTemplate Living_Room(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        allowFlowReversal=true,
        redeclare Schedules.OccSched_O4_Living_Room occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinD=true,
        nSurfExt=4,
        aziA=-0.97738438111682,
        l=8.51,
        w=3.49,
        lA=7.91,
        lB=2.76,
        lC=8.51,
        lD=3.22,
        h=3.25,
        A_winD=1.82*2.12,
        fracD=0.25,
        linExtRad=true,
        redeclare Walls.Inner_wall_1 conTypA,
        redeclare Walls.Inner_wall_1 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Outer_wall_front conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
          conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityD=false) "Leefruimte (living room) on the ground floor"
        annotation (Placement(transformation(extent={{-66,-92},{-36,-62}})));

      IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_0(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        allowFlowReversal=true,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinB=false,
        hasWinD=false,
        nSurfExt=1,
        aziA=-0.97738438111682,
        l=8.51,
        w=0.98,
        lA=8.51,
        lB=1.18,
        lC=7.91,
        lD=1.15,
        AZone=(1.15*4.36) + (1.66*4.15),
        h=3.25,
        A_winD=1.82*2,
        linExtRad=true,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Inner_wall_1 conTypB,
        redeclare Walls.Inner_wall_2 conTypC,
        redeclare Walls.Outer_wall_front conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
          conTypCei,
        redeclare Walls.Ground_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraTypD,
        hasCavityA=false,
        hA=2,
        wA=1,
        hasCavityB=false,
        hasCavityD=false) "Hallway (zone where the front door of the house is)"
        annotation (Placement(transformation(extent={{-58,-36},{-28,-4}})));

      ////////////////////////// First floor: zones//////////////////////////////////////////////
      IDEAS.Buildings.Components.RectangularZoneTemplate Bedroom_1(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        redeclare Schedules.OccSched_O4_Bedroom1 occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.Fixed ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinD=true,
        nSurfExt=2,
        aziA=-0.97738438111682,
        l=4,
        w=4.25,
        lA=4.36,
        lB=2.77,
        lC=4.36,
        lD=4.64,
        AZone=(4*4.25) - (2.96*4.02),
        h=3.06,
        A_winD=(1.12*1.49) + (1.01*1.49),
        nWinD=1,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Inner_wall_2 conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Outer_wall_front conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
        redeclare Walls.inner_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
        "Slaapkamer (bedroom) floor 1 16m²"
        annotation (Placement(transformation(extent={{-62,40},{-34,74}})));

      IDEAS.Buildings.Components.InternalWall Ceiling_leefruimte_hallway_Slaapkamer(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Ceiling,
        azi=IDEAS.Types.Azimuth.S,
        A=2.96*4.02)
        "The internall wall (ceiling/floor) between ground floor and floor 1 between the front part of the leefruimte and the slaapkamer 16 m²"
        annotation (Placement(transformation(
            extent={{6,-10},{-6,10}},
            rotation=90,
            origin={-114,6})));

      //////////////inner WeatherReader AND sim "Adjusted simulation info manager" for this course/////////////////////////////////////////////////////////////////////////
      Modelica.Blocks.Sources.CombiTimeTable inputSol(
        tableOnFile=true,
        tableName="tab1",
        columns=2:30,
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        "input for solGloHor and solDifHor "
        annotation (Placement(transformation(extent={{-62,328},{-42,348}})));

      inner IDEAS.BoundaryConditions.SimInfoManager sim(
        linIntRad=false,
        linExtRad=false,
        weaDat(
          pAtmSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
          ceiHeiSou=IDEAS.BoundaryConditions.Types.DataSource.Parameter,
          HSou=IDEAS.BoundaryConditions.Types.RadiationDataSource.Input_HGloHor_HDifHor,
          calTSky=IDEAS.BoundaryConditions.Types.SkyTemperatureCalculation.TemperaturesAndSkyCover,
          totSkyCov=0.6,
          opaSkyCov=0.6,
          TDewPoiSou=IDEAS.BoundaryConditions.Types.DataSource.File),
        filNam=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/WeatherModelica.txt"))
        "Adjusted Simulation information Manager for this course"
        annotation (Placement(transformation(extent={{-30,330},{-10,350}})));

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// continuation first floor: zones///////////////////////////////////////

      IDEAS.Buildings.Components.RectangularZoneTemplate Office(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinB=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.97738438111682,
        l=3.75,
        w=2.77,
        lA=3.75,
        lC=4.15,
        lD=2.77,
        AZone=2.77*3.75,
        h=3.06,
        A_winB=0.97*1.49,
        A_winD=1.12*1.49,
        nWinD=2,
        redeclare Walls.Inner_wall_2 conTypA,
        redeclare Walls.Outer_wall_back conTypB,
        redeclare Walls.Wall_neighbour conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
        redeclare Walls.inner_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD)
        "Bureau (office room) first floor 16m²"
        annotation (Placement(transformation(extent={{2,10},{30,44}})));
      IDEAS.Buildings.Components.RectangularZoneTemplate Hallway_1(
        redeclare package Medium = IDEAS.Media.Air,
        n50=8.22,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinB=true,
        hasWinD=false,
        nSurfExt=0,
        aziA=-0.97738438111682,
        l=3.81,
        w=1.37,
        lA=4.15,
        lB=1.66,
        lD=1.37,
        AZone=2.84*1.36,
        h=3.06,
        A_winB=0.93*1.49,
        A_winD=1.12*1.49,
        nWinD=2,
        redeclare Walls.Wall_neighbour conTypA,
        redeclare Walls.Outer_wall_back conTypB,
        redeclare Walls.Inner_wall_2 conTypC,
        redeclare Walls.Inner_wall_1 conTypD,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
        redeclare Walls.inner_floor conTypFlo,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingB,
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypB,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraTypD) "Stairs on floor 1 "
        annotation (Placement(transformation(extent={{0,62},{28,96}})));

    ////////// From here floor2: zones and components (walls and windows)//////////////////////////////////////////////////////////////////
        IDEAS.Buildings.Components.Zone Bedroom_2(
        redeclare package Medium = Medium,
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        A=4*4.25,
        n50=8.22,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        nSurf=10,
        V=37.69,
        hZone=2.5) "Bergruimte 17m2"
        annotation (Placement(transformation(extent={{-74,186},{-44,216}})));

       IDEAS.Buildings.Components.OuterWall outerWall1NE(
        redeclare Walls.Outer_wall_front constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-2.5481807079117,
        A=1.5*4.64 - (2*0.81*0.93))
                 "Wall 2nd floor, front house"
        annotation (Placement(transformation(extent={{-142,192},{-130,212}})));
        IDEAS.Buildings.Components.Window window1N2(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-2.5481807079117,
        A=0.81*0.93,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
        annotation (Placement(transformation(extent={{-132,160},{-120,180}})));
      IDEAS.Buildings.Components.Window window1N1(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-2.5481807079117,
        A=0.81*0.93,
        redeclare IDEAS.Buildings.Data.Frames.WoodInsulated fraType)
        annotation (Placement(transformation(extent={{-134,222},{-122,242}})));
        IDEAS.Buildings.Components.InternalWall internalWall1S2(
        redeclare Walls.Inner_wall_1 constructionType,        inc=IDEAS.Types.Tilt.Wall,
        azi=0.78539816339745,
        A=3.4)                       "Wall between bergruimte & stairs"
        annotation (Placement(transformation(extent={{-6,-10},{6,10}},
            rotation=180,
            origin={14,286})));
      IDEAS.Buildings.Components.InternalWall Floor_bergruimte2nd_Slaapkamer(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi=IDEAS.Types.Azimuth.S,
        A=4*4.25)
        "Internal wall (ceiling/floor) between bergruimte 2nd floor and slaapkamer first floor (Modelled as FLOOR)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={2,126})));
      IDEAS.Buildings.Components.InternalWall InternalRoof(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi(displayUnit="rad") = IDEAS.Types.Azimuth.S,
        A=4.12*4.26)
                 "Roof between bergruimte and attic" annotation (Placement(
            transformation(
            extent={{6,-10},{-6,10}},
            rotation=90,
            origin={-72,268})));

      IDEAS.Buildings.Components.OuterWall Roof(
        redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
          constructionType,
        inc(displayUnit="deg") = 0.52063171586991,
        azi=-2.5481807079117,
        A=15.59)                   "Diagonal roof" annotation (Placement(
            transformation(
            extent={{-6,-10},{6,10}},
            rotation=0,
            origin={-162,214})));

      IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_SE(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-0.78539816339745,
        A=9.77,
        use_T_fixed=false,
        use_Q_in=false)
        "The wall to the neigbours at the SE side" annotation (Placement(
            transformation(
            extent={{-6,-10},{6,10}},
            rotation=-90,
            origin={-64,248})));
      IDEAS.Buildings.Components.BoundaryWall Neighbour_wall_NW(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=2.3561944901923,
        A=9.77)
        "The wall to the neigbours at the NW side" annotation (Placement(
            transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={-56,152})));

      IDEAS.Buildings.Components.Zone Attic(
        redeclare package Medium = Medium,
        n50=8.22,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        nSurf=7,
        V=((0.37*2.84) + (4.48*2.84/2))*2.77,
        hZone=4.87,
        A=2.77*2.84) "Zolder 10m² on the second floor"
        annotation (Placement(transformation(extent={{104,126},{138,156}})));

      IDEAS.Buildings.Components.InternalWall Internalwall_zolder_stairs_2ndfloor(
        redeclare Walls.Inner_wall_1 constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-0.78539816339745,
        A=7.41)
        "The internal wall between the bergruimte and the stairs on the second floor"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=270,
            origin={114,226})));
      IDEAS.Buildings.Components.OuterWall OuterWall_backfacade(
        redeclare Walls.Outer_wall_back constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.59341194567807,
        A=0.37*4.64)
        "Wall of the back facade (SW side) of zolder (small part before the diagonal roof starts)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=180,
            origin={220,146})));
      IDEAS.Buildings.Components.OuterWall Diagonal_roof_backfacade(
        redeclare Walls.Pitched_roof constructionType,
        inc=0.56496307887056,
        azi=0.59341194567807,
        A=6.54*4.64,
        hasBuildingShade=false) "Diagonal roof of the back facade in the attic"
        annotation (Placement(transformation(
            extent={{6,-10},{-6,10}},
            rotation=0,
            origin={214,188})));
      IDEAS.Buildings.Components.Window window(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=0.56496307887056,
        azi=0.59341194567807,
        A=1*1,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
        annotation (Placement(transformation(extent={{204,208},{192,228}})));
      IDEAS.Buildings.Components.BoundaryWall zolder_neigbours_NW_2ndfloor(
        redeclare Walls.Wall_neighbour constructionType,
        inc=1.5707963267949,
        azi=2.3561944901923,
        A=(0.37*2.84) + (4.48*2.84/2))
        "the wall from the zolder (attic) on the second floor to the neighbours at the NW side"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={124,78})));
      IDEAS.Buildings.Components.InternalWall Floor_attic_2ndfloor(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi=IDEAS.Types.Azimuth.S,
        A=2.77*2.84)
        "The internal wall (floor/ceiling) between the attic on the second floor and the bureau on the first floor (Modelled as FLOOR)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={80,84})));
      IDEAS.Buildings.Components.InternalWall Internallwall_bergruimte_zolder(
        redeclare Walls.Inner_wall_1 constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.78539816339745,
        A=6.925)
        "Wall between zone zolder and zone bergruimte on the 2nd floor" annotation (
         Placement(transformation(
            extent={{-6,10},{6,-10}},
            rotation=180,
            origin={36,146})));

      IDEAS.Buildings.Components.Zone Hallway_2(
        redeclare package Medium = Medium,
        n50=8.22,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=0),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED_RG ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
        nSurf=8,
        V=(((0.37*2.84) + (2.84*4.48/2))*1.6) + (2.5*2.12/2*4.26),
        hZone=4.87,
        A=2.84*1.36) "Stairs on the second floor"
        annotation (Placement(transformation(extent={{140,298},{174,334}})));

      IDEAS.Buildings.Components.BoundaryWall boundaryWall_SE_stairs(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=-0.78539816339745,
        A=(0.37*2.84) + (2.84*4.48/2) + (2.5*2.12/2))
        "The wall to the neighbours at the SE side from the stairs on the second floor"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=-90,
            origin={148,360})));
      IDEAS.Buildings.Components.OuterWall PitchedroofSW_stairs(
        redeclare Walls.Pitched_roof constructionType,
        inc=0.56496307887056,
        azi=0.59341194567807,
        A=1.36*6.54)
        "Pitched (diagonal) roof in the stair room on the second floor at the back side SW"
        annotation (Placement(transformation(
            extent={{-6,10},{6,-10}},
            rotation=180,
            origin={250,322})));
      IDEAS.Buildings.Components.BoundaryWall boundaryWall_NW_stairs(
        redeclare Walls.Wall_neighbour constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=2.3561944901923,
        A=2.12*2.5/2)
        "The walls to the neighbours at the NW side in the stairs zone on the second floor: it is the neighbour wall on the bedroom (in the dark corner)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={102,258})));
      IDEAS.Buildings.Components.OuterWall Pitchedroof_NE_stairs(
        redeclare Walls.Pitched_roof constructionType,
        inc=0.73303828583762,
        azi=-2.5481807079117,
        A=3.18*4.26)
        "The pitched roof above the zolder at the front facade of the building NE"
        annotation (Placement(transformation(extent={{44,328},{56,348}})));
      IDEAS.Buildings.Components.InternalWall Floor_stairs_2ndfloor(
        redeclare Walls.inner_floor constructionType,
        inc=IDEAS.Types.Tilt.Floor,
        azi=IDEAS.Types.Azimuth.S,
        A=1.36*2.84)
        "The internal wall (floor/ceiling) between the stairs 2nd floor and stairs 1st floor (Modelled as FLOOR)"
        annotation (Placement(transformation(
            extent={{-6,-10},{6,10}},
            rotation=90,
            origin={184,246})));

      //////////////////////////////////Heating and heating schedule////////////////////////////////////////////////////////////////

      IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2016,
          offset=0)
        annotation (Placement(transformation(extent={{258,76},{278,96}})));

      IDEAS.Buildings.Components.Window Kitchen_window(
        redeclare IDEAS.Buildings.Data.Glazing.EpcSingle glazing,
        inc=1.5707963267949,
        azi=0.59341194567807,
        A=1.15*1,
        redeclare IDEAS.Buildings.Data.Frames.Wood fraType)
        "Window at the back side of the kitchen facing the koer"
        annotation (Placement(transformation(extent={{68,-48},{56,-28}})));
      Accumulator.Heat_Demand heat_Demand(
        nZones=1,
        fractionRad=0.3*ones(1),
        t=200,
        QNom=0.5*ones(1)*2800,
        Q_design=0.5*ones(1)*2800)
        annotation (Placement(transformation(extent={{28,-124},{68,-104}})));
      Modelica.Blocks.Sources.RealExpression schedule_Living_Room(y=if (calTim.hour ==
            12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20 or (
            calTim.hour > 0 and calTim.hour < 6)) then (273.15 + 21) else (273.15 -
            20)) "heating schedule accumulator" annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-234,-84})));
      Accumulator.Heat_Demand heat_Demand1(
        nZones=1,
        fractionRad=0.3*ones(1),
        t=300,
        QNom=ones(1)*2000,
        Q_design=ones(1)*2000)
        annotation (Placement(transformation(extent={{152,-110},{192,-90}})));
      Modelica.Blocks.Sources.RealExpression schedule_bathroom(y=if calTim.weekDay <
            6 and ( calTim.hour == 7)  then (273.15
             + 21) elseif calTim.weekDay > 5 and (calTim.hour == 9) then (273.15 + 21) else (273.15
             - 20)) "heating schedule accumulator, convective heat emission"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={100,-142})));
      Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
        annotation (Placement(transformation(extent={{-222,34},{-202,54}})));
      Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=
            Living_Room.gainCon.Q_flow + Living_Room.gainRad.Q_flow) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-264,44})));
      IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
        fileName="integrator_heat_demand_Living_Room.json",
        varKeys={"Heat Demand [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{-172,34},{-152,54}})));
      Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Bathroom(y=Bathroom.gainCon.Q_flow
             + Bathroom.gainRad.Q_flow) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-266,78})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/3600000)
        annotation (Placement(transformation(extent={{-224,68},{-204,88}})));
      IDEAS.Utilities.IO.Files.JSONWriter jsonWri1(
        fileName="integrator_heat_demand_bathroom.json",
        varKeys={"Heat Demand [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{-174,68},{-154,88}})));
      IDEAS.Buildings.Components.OuterWall outerWall(
        redeclare Walls.Outer_wall_back constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.59341194567807,
        A=3.05*2.62) "Back facade kitchen"
        annotation (Placement(transformation(extent={{72,-18},{60,2}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Heat_Demand(
        tableOnFile=true,
        tableName="tabHeat",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/HeaterReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-294,346},{-268,372}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Living_Room(
        tableOnFile=true,
        tableName="tabLivingRoom",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Living_RoomReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-292,310},{-268,334}})));

      Modelica.Blocks.Math.Gain gain_HeaterReader(k=1000*6)
        annotation (Placement(transformation(extent={{-248,348},{-228,368}})));
      Modelica.Blocks.Logical.Switch Switch_Start
        annotation (Placement(transformation(extent={{-184,-116},{-164,-96}})));
      Modelica.Blocks.Sources.BooleanExpression Expr_start(y=if ((calTim.month > 10
             and calTim.day > 3) or (calTim.month == 12) or (calTim.month == 1) or (
            calTim.month == 2)) then true else false)
        annotation (Placement(transformation(extent={{-240,-116},{-220,-96}})));
      Modelica.Blocks.Sources.RealExpression OFF(y=273.15 - 20)
        "heating schedule accumulator" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-256,-132})));
      Modelica.Blocks.Logical.Switch Switch_Stop
        annotation (Placement(transformation(extent={{-148,-142},{-128,-122}})));
      Modelica.Blocks.Sources.BooleanExpression Expr_stop(y=if (calTim.month == 2)
             and (calTim.day > 17 and calTim.day < 27) then true else false)
        annotation (Placement(transformation(extent={{-220,-168},{-200,-148}})));
      Modelica.Blocks.Logical.Switch Switch_Offday1
        annotation (Placement(transformation(extent={{-100,-150},{-80,-130}})));
      Modelica.Blocks.Sources.BooleanExpression Expr_offday1(y=if (calTim.month == 12)
             and ((calTim.day == 24 and calTim.hour > 14) or (calTim.day == 25 and
            calTim.hour < 22)) then true else false)
        annotation (Placement(transformation(extent={{-220,-190},{-200,-170}})));
      Modelica.Blocks.Logical.Switch Switch_Offday2
        annotation (Placement(transformation(extent={{-28,-160},{-8,-140}})));
      Modelica.Blocks.Sources.BooleanExpression Expr_offday2(y=if (calTim.month == 1)
             and ((calTim.day == 29 and calTim.hour > 5) or (calTim.day == 30 and
            calTim.hour < 23)) then true else false)
        annotation (Placement(transformation(extent={{-84,-194},{-64,-174}})));
      IDEAS.Buildings.Components.InternalWall internalWall(
        redeclare Walls.Window constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=0.59341194567807,
        A=0.9*1) annotation (Placement(transformation(extent={{4,-100},{16,-80}})));
      Modelica.Blocks.Sources.CombiTimeTable Reader_Bathroom(
        tableOnFile=true,
        tableName="tabBathroom",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/BathroomReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-294,274},{-270,298}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Storage_Room(
        tableOnFile=true,
        tableName="tabStorageRoom",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Storage_RoomReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-296,230},{-272,254}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom1(
        tableOnFile=true,
        tableName="tabBedroom1",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom1Reader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-296,194},{-272,218}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Office(
        tableOnFile=true,
        tableName="tabOffice",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/OfficeReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-294,160},{-270,184}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Bedroom2(
        tableOnFile=true,
        tableName="tabBedroom2",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/Bedroom2Reader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-292,128},{-268,152}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Attic(
        tableOnFile=true,
        tableName="tabAttic",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/AtticReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-290,94},{-266,118}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Kitchen(
        tableOnFile=true,
        tableName="tabKitchen",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/KitchenReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-204,266},{-180,290}})));

      Modelica.Blocks.Sources.CombiTimeTable Reader_Electricity(
        tableOnFile=true,
        tableName="tabElectricity",
        columns={2},
        smoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        fileName=ModelicaServices.ExternalReferences.loadResource("modelica://IDEAS/Resources/weatherdata/ElectricityReader.txt"),
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint,
        timeScale=60)
        annotation (Placement(transformation(extent={{-194,342},{-168,368}})));

      Modelica.Blocks.Math.Gain gain_ElectricityReader(k=1000*6)
        annotation (Placement(transformation(extent={{-146,344},{-126,364}})));
      Modelica.Blocks.Sources.RealExpression schedule_Living_Room_0_1(y=if (calTim.hour
             == 12 or calTim.hour == 13 or calTim.hour == 14 or calTim.hour > 20
             or (calTim.hour > 0 and calTim.hour < 6)) then (1) else (0))
        "heating schedule accumulator" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-178,316})));
      Modelica.Blocks.Math.Gain gain_BathroomReader(k=100)
        annotation (Placement(transformation(extent={{-248,276},{-228,296}})));
      Modelica.Blocks.Sources.RealExpression cte2(y=2) annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-256,310})));
      Modelica.Blocks.Math.Add add(k2=-1)
        annotation (Placement(transformation(extent={{-230,312},{-210,332}})));
      Modelica.Blocks.Sources.RealExpression realExpression1(y=64.8)
        annotation (Placement(transformation(extent={{-118,-100},{-98,-80}})));
      Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
        annotation (Placement(transformation(extent={{-84,-100},{-64,-80}})));
      Modelica.Blocks.Sources.RealExpression realExpression(y=151.2)
        annotation (Placement(transformation(extent={{-106,-120},{-86,-100}})));
      Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
        annotation (Placement(transformation(extent={{-64,-120},{-44,-100}})));
      Modelica.Blocks.Sources.RealExpression realExpression2(y=26.4)
        annotation (Placement(transformation(extent={{6,-178},{26,-158}})));
      Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
        annotation (Placement(transformation(extent={{40,-178},{60,-158}})));
      Modelica.Blocks.Sources.RealExpression realExpression3(y=61.6)
        annotation (Placement(transformation(extent={{18,-198},{38,-178}})));
      Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
        annotation (Placement(transformation(extent={{58,-198},{78,-178}})));
      IDEAS.Buildings.Components.InternalWall thermal_mass(
        redeclare Walls.Mass_wall constructionType,
        inc=IDEAS.Types.Tilt.Wall,
        azi=IDEAS.Types.Azimuth.S,
        A=100) "increasing thermal capacity in living room" annotation (
          Placement(transformation(
            extent={{6,-10},{-6,10}},
            rotation=180,
            origin={-158,-70})));
    equation

      connect(sim.weaDat.HGloHor_in, inputSol.y[8]);
      connect(sim.weaDat.HDifHor_in, inputSol.y[10]);
      connect(Bathroom.proBusB[1], Storage_Room.proBusD[1]) annotation (Line(
          points={{118.5,-54.4},{134.25,-54.4},{134.25,-73.2},{146.6,-73.2}},
          color={255,204,51},
          thickness=0.5));
      connect(Living_Room.proBusA[1], Hallway_0.proBusC[1]) annotation (Line(
          points={{-60,-63.5},{-42,-63.5},{-42,-56},{-32,-56},{-32,-35.68},{-32.8,-35.68}},
          color={255,204,51},
          thickness=0.5));

      connect(Living_Room.proBusB[1], Kitchen.proBusD[1]) annotation (Line(
          points={{-37.5,-68},{-9.75,-68},{-9.75,-79.2},{24.6,-79.2}},
          color={255,204,51},
          thickness=0.5));
      connect(Kitchen.proBusExt[1], Hallway_0.proBusB[1]) annotation (Line(
          points={{21,-54.4},{-2.5,-54.4},{-2.5,-10.4},{-29.5,-10.4}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_1.proBusFlo[1], Hallway_0.proBusCei[1]) annotation (Line(
          points={{-48,46.8},{-44,46.8},{-44,-10.4},{-43.3,-10.4}},
          color={255,204,51},
          thickness=0.5));
      connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_b, Bedroom_1.proBusExt[
        1]) annotation (Line(
          points={{-116,11},{-116,72.3},{-64.8,72.3}},
          color={255,204,51},
          thickness=0.5));
      connect(Ceiling_leefruimte_hallway_Slaapkamer.propsBus_a, Living_Room.proBusCei[
        1]) annotation (Line(
          points={{-116,1},{-116,-68},{-51.3,-68}},
          color={255,204,51},
          thickness=0.5));
      connect(Bathroom.proBusD[1], Kitchen.proBusB[1]) annotation (Line(
          points={{90.6,-75.2},{74.3,-75.2},{74.3,-58.4},{52.5,-58.4}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_1.proBusB[1], Office.proBusD[1]) annotation (Line(
          points={{-35.4,67.2},{-16.7,67.2},{-16.7,15.1},{2.56,15.1}},
          color={255,204,51},
          thickness=0.5));

      connect(Living_Room.proBusExt[1], Office.proBusFlo[1]) annotation (Line(
          points={{-69,-64.25},{-69,-52},{-68,-52},{-68,-42},{16,-42},{16,16.8}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_1.proBusExt[2], Hallway_1.proBusD[1]) annotation (Line(
          points={{-64.8,75.7},{2,75.7},{2,67.1},{0.56,67.1}},
          color={255,204,51},
          thickness=0.5));
      connect(Office.proBusA[1], Hallway_1.proBusC[1]) annotation (Line(
          points={{7.6,42.3},{7.6,47.15},{23.52,47.15},{23.52,62.34}},
          color={255,204,51},
          thickness=0.5));
      connect(Hallway_0.proBusExt[1], Hallway_1.proBusFlo[1]) annotation (Line(
          points={{-61,-4},{-22.5,-4},{-22.5,68.8},{14,68.8}},
          color={255,204,51},
          thickness=0.5));
      connect(outerWall1NE.propsBus_a, Bedroom_2.propsBus[1]) annotation (Line(
          points={{-131,204},{-86,204},{-86,209.7},{-74,209.7}},
          color={255,204,51},
          thickness=0.5));

    //Equations floor 2///////////////////////////////////////////////////////////////////////////////

      connect(window1N1.propsBus_a, Bedroom_2.propsBus[2]) annotation (Line(
          points={{-123,234},{-100,234},{-100,209.1},{-74,209.1}},
          color={255,204,51},
          thickness=0.5));
      connect(window1N2.propsBus_a, Bedroom_2.propsBus[3]) annotation (Line(
          points={{-121,172},{-100,172},{-100,208.5},{-74,208.5}},
          color={255,204,51},
          thickness=0.5));
      connect(internalWall1S2.propsBus_a, Bedroom_2.propsBus[4]) annotation (Line(
          points={{9,284},{-78,284},{-78,207.9},{-74,207.9}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_bergruimte2nd_Slaapkamer.propsBus_a, Bedroom_2.propsBus[5])
        annotation (Line(
          points={{8.88178e-16,131},{8.88178e-16,222},{-74,222},{-74,207.3}},
          color={255,204,51},
          thickness=0.5));
      connect(InternalRoof.propsBus_a, Bedroom_2.propsBus[6]) annotation (Line(
          points={{-74,263},{-56,263},{-56,262},{-38,262},{-38,206.7},{-74,206.7}},
          color={255,204,51},
          thickness=0.5));

      connect(Roof.propsBus_a, Bedroom_2.propsBus[7]) annotation (Line(
          points={{-157,216},{-94,216},{-94,206.1},{-74,206.1}},
          color={255,204,51},
          thickness=0.5));
      connect(Neighbour_wall_NW.propsBus_a, Bedroom_2.propsBus[8]) annotation (Line(
          points={{-58,157},{-66,157},{-66,205.5},{-74,205.5}},
          color={255,204,51},
          thickness=0.5));
      connect(Neighbour_wall_SE.propsBus_a, Bedroom_2.propsBus[9]);

      connect(Internalwall_zolder_stairs_2ndfloor.propsBus_a, Attic.propsBus[1])
        annotation (Line(
          points={{116,221},{74,221},{74,149.571},{104,149.571}},
          color={255,204,51},
          thickness=0.5));
      connect(OuterWall_backfacade.propsBus_a, Attic.propsBus[2]) annotation (Line(
          points={{215,144},{215,148.714},{104,148.714}},
          color={255,204,51},
          thickness=0.5));
      connect(Diagonal_roof_backfacade.propsBus_a, Attic.propsBus[3]) annotation (
          Line(
          points={{209,190},{156,190},{156,147.857},{104,147.857}},
          color={255,204,51},
          thickness=0.5));
      connect(window.propsBus_a, Attic.propsBus[4]) annotation (Line(
          points={{193,220},{148,220},{148,147},{104,147}},
          color={255,204,51},
          thickness=0.5));
      connect(zolder_neigbours_NW_2ndfloor.propsBus_a, Attic.propsBus[5])
        annotation (Line(
          points={{122,83},{112,83},{112,146.143},{104,146.143}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_attic_2ndfloor.propsBus_a, Attic.propsBus[6]) annotation (Line(
          points={{78,89},{90,89},{90,145.286},{104,145.286}},
          color={255,204,51},
          thickness=0.5));
      connect(Internallwall_bergruimte_zolder.propsBus_b, Attic.propsBus[7])
        annotation (Line(
          points={{41,148},{72,148},{72,144.429},{104,144.429}},
          color={255,204,51},
          thickness=0.5));
      connect(Bedroom_2.propsBus[10], Internallwall_bergruimte_zolder.propsBus_a)
        annotation (Line(
          points={{-74,204.3},{-22,204.3},{-22,148},{31,148}},
          color={255,204,51},
          thickness=0.5));

      connect(boundaryWall_SE_stairs.propsBus_a, Hallway_2.propsBus[1]) annotation (
         Line(
          points={{150,355},{122,355},{122,326.35},{140,326.35}},
          color={255,204,51},
          thickness=0.5));
      connect(PitchedroofSW_stairs.propsBus_a, Hallway_2.propsBus[2]) annotation (
          Line(
          points={{245,324},{134,324},{134,325.45},{140,325.45}},
          color={255,204,51},
          thickness=0.5));
      connect(boundaryWall_NW_stairs.propsBus_a, Hallway_2.propsBus[3]) annotation (
         Line(
          points={{100,263},{100,276},{132,276},{132,324.55},{140,324.55}},
          color={255,204,51},
          thickness=0.5));
      connect(Pitchedroof_NE_stairs.propsBus_a, Hallway_2.propsBus[4]) annotation (
          Line(
          points={{55,340},{94,340},{94,323.65},{140,323.65}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_stairs_2ndfloor.propsBus_a, Hallway_2.propsBus[5]) annotation (
          Line(
          points={{182,251},{186,251},{186,298},{140,298},{140,322.75}},
          color={255,204,51},
          thickness=0.5));
      connect(internalWall1S2.propsBus_b, Hallway_2.propsBus[6]) annotation (Line(
          points={{19,284},{76,284},{76,321.85},{140,321.85}},
          color={255,204,51},
          thickness=0.5));
      connect(Internalwall_zolder_stairs_2ndfloor.propsBus_b, Hallway_2.propsBus[7])
        annotation (Line(
          points={{116,231},{126,231},{126,320.95},{140,320.95}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_bergruimte2nd_Slaapkamer.propsBus_b, Bedroom_1.proBusCei[1])
        annotation (Line(
          points={{-4.44089e-16,121},{-48,121},{-48,67.2},{-48.28,67.2}},
          color={255,204,51},
          thickness=0.5));

      connect(Hallway_1.proBusCei[1], Floor_stairs_2ndfloor.propsBus_b) annotation (
         Line(
          points={{13.72,89.2},{16.86,89.2},{16.86,241},{182,241}},
          color={255,204,51},
          thickness=0.5));
      connect(Floor_attic_2ndfloor.propsBus_b,Office. proBusCei[1]) annotation (
          Line(
          points={{78,79},{48,79},{48,37.2},{15.72,37.2}},
          color={255,204,51},
          thickness=0.5));

      connect(Kitchen.proBusExt[2], Kitchen_window.propsBus_a) annotation (Line(
          points={{21,-52.8},{41.5,-52.8},{41.5,-36},{57,-36}},
          color={255,204,51},
          thickness=0.5));
      connect(InternalRoof.propsBus_b, Hallway_2.propsBus[8]) annotation (Line(
          points={{-74,273},{31,273},{31,320.05},{140,320.05}},
          color={255,204,51},
          thickness=0.5));
      connect(Living_Room.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-34.5,
              -74},{-14,-74},{-14,-120},{27.6,-120}},        color={0,0,127}));
      connect(heat_Demand.heatPortRad[1], Living_Room.gainRad) annotation (Line(
            points={{28,-116},{-8,-116},{-8,-86},{-36,-86}}, color={191,0,0}));
      connect(Living_Room.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(
            points={{-36,-81.5},{0,-81.5},{0,-112},{28,-112}}, color={191,0,0}));
      connect(schedule_bathroom.y, heat_Demand1.TSet[1]) annotation (Line(points={{111,
              -142},{172,-142},{172,-110.2}},              color={0,0,127}));
      connect(Bathroom.TSensor, heat_Demand1.TSensor[1]) annotation (Line(points={{121.5,
              -60.8},{121.5,-60},{138,-60},{138,-106},{151.6,-106}}, color={0,0,127}));
      connect(heat_Demand1.heatPortCon[1], Bathroom.gainCon) annotation (Line(
            points={{152,-98},{142,-98},{142,-68.8},{120,-68.8}}, color={191,0,0}));
      connect(heat_Demand1.heatPortRad[1], Bathroom.gainRad) annotation (Line(
            points={{152,-102},{142,-102},{142,-106},{130,-106},{130,-73.6},{120,-73.6}},
            color={191,0,0}));
      connect(Expr_Heat_Demand_Living_Room.y, integrator.u)
        annotation (Line(points={{-253,44},{-224,44}}, color={0,0,127}));
      connect(integrator.y, jsonWri.u[1])
        annotation (Line(points={{-201,44},{-172,44}}, color={0,0,127}));
      connect(Expr_Heat_Demand_Bathroom.y, integrator1.u)
        annotation (Line(points={{-255,78},{-226,78}}, color={0,0,127}));
      connect(integrator1.y, jsonWri1.u[1])
        annotation (Line(points={{-203,78},{-174,78}},
                                                     color={0,0,127}));
      connect(Kitchen.proBusExt[3], outerWall.propsBus_a) annotation (Line(
          points={{21,-51.2},{24,-51.2},{24,-6},{61,-6}},
          color={255,204,51},
          thickness=0.5));
      connect(Reader_Heat_Demand.y[1], gain_HeaterReader.u) annotation (Line(points=
             {{-266.7,359},{-252.35,359},{-252.35,358},{-250,358}}, color={0,0,127}));
      connect(Expr_start.y, Switch_Start.u2)
        annotation (Line(points={{-219,-106},{-186,-106}}, color={255,0,255}));
      connect(schedule_Living_Room.y, Switch_Start.u1) annotation (Line(points={{-223,
              -84},{-206,-84},{-206,-98},{-186,-98}}, color={0,0,127}));
      connect(OFF.y, Switch_Start.u3) annotation (Line(points={{-245,-132},{-206,-132},
              {-206,-114},{-186,-114}}, color={0,0,127}));
      connect(Expr_stop.y, Switch_Stop.u2) annotation (Line(points={{-199,-158},{-152,
              -158},{-152,-132},{-150,-132}}, color={255,0,255}));
      connect(OFF.y, Switch_Stop.u1) annotation (Line(points={{-245,-132},{-138.5,-132},
              {-138.5,-124},{-150,-124}}, color={0,0,127}));
      connect(Switch_Start.y, Switch_Stop.u3) annotation (Line(points={{-163,-106},{
              -118,-106},{-118,-140},{-150,-140}}, color={0,0,127}));
      connect(Switch_Stop.y, Switch_Offday1.u3) annotation (Line(points={{-127,-132},
              {-32,-132},{-32,-148},{-102,-148}}, color={0,0,127}));
      connect(OFF.y, Switch_Offday1.u1)
        annotation (Line(points={{-245,-132},{-102,-132}}, color={0,0,127}));
      connect(Expr_offday1.y, Switch_Offday1.u2) annotation (Line(points={{-199,-180},
              {-102,-180},{-102,-140}}, color={255,0,255}));
      connect(Switch_Offday1.y, Switch_Offday2.u3) annotation (Line(points={{-79,-140},
              {-70,-140},{-70,-156},{-50,-156},{-50,-158},{-30,-158}}, color={0,0,127}));
      connect(OFF.y, Switch_Offday2.u1) annotation (Line(points={{-245,-132},{14,-132},
              {14,-142},{-30,-142}}, color={0,0,127}));
      connect(Switch_Offday2.y, heat_Demand.TSet[1]) annotation (Line(points={{-7,-150},
              {46,-150},{46,-124.2},{48,-124.2}}, color={0,0,127}));
      connect(Expr_offday2.y, Switch_Offday2.u2) annotation (Line(points={{-63,-184},
              {-46,-184},{-46,-150},{-30,-150}}, color={255,0,255}));
      connect(internalWall.propsBus_a, Kitchen.proBusExt[4]) annotation (Line(
          points={{15,-88},{20,-88},{20,-49.6},{21,-49.6}},
          color={255,204,51},
          thickness=0.5));
      connect(internalWall.propsBus_b, Living_Room.proBusExt[2]) annotation (Line(
          points={{5,-88},{-28,-88},{-28,-62.75},{-69,-62.75}},
          color={255,204,51},
          thickness=0.5));
      connect(Reader_Electricity.y[1], gain_ElectricityReader.u) annotation (Line(
            points={{-166.7,355},{-155.35,355},{-155.35,354},{-148,354}}, color={0,0,
              127}));
      connect(Reader_Bathroom.y[1], gain_BathroomReader.u)
        annotation (Line(points={{-268.8,286},{-250,286}}, color={0,0,127}));
      connect(Reader_Living_Room.y[1], add.u1) annotation (Line(points={{-266.8,322},
              {-247.4,322},{-247.4,328},{-232,328}}, color={0,0,127}));
      connect(cte2.y, add.u2) annotation (Line(points={{-245,310},{-238,310},{-238,316},
              {-232,316}}, color={0,0,127}));
      connect(realExpression1.y,prescribedHeatFlow1. Q_flow)
        annotation (Line(points={{-97,-90},{-84,-90}}, color={0,0,127}));
      connect(prescribedHeatFlow1.port, Living_Room.gainRad) annotation (Line(
            points={{-64,-90},{-48,-90},{-48,-86},{-36,-86}}, color={191,0,0}));
      connect(realExpression.y,prescribedHeatFlow. Q_flow)
        annotation (Line(points={{-85,-110},{-64,-110}}, color={0,0,127}));
      connect(prescribedHeatFlow.port, Living_Room.gainCon) annotation (Line(points={{-44,
              -110},{-22,-110},{-22,-81.5},{-36,-81.5}},      color={191,0,0}));
      connect(realExpression2.y,prescribedHeatFlow2. Q_flow)
        annotation (Line(points={{27,-168},{40,-168}}, color={0,0,127}));
      connect(realExpression3.y, prescribedHeatFlow3.Q_flow)
        annotation (Line(points={{39,-188},{58,-188}}, color={0,0,127}));
      connect(prescribedHeatFlow3.port, Kitchen.gainCon) annotation (Line(points={{78,-188},
              {82,-188},{82,-72.8},{54,-72.8}},       color={191,0,0}));
      connect(prescribedHeatFlow2.port, Kitchen.gainRad) annotation (Line(points={{60,-168},
              {64,-168},{64,-77.6},{54,-77.6}},       color={191,0,0}));
      connect(thermal_mass.propsBus_a, Living_Room.proBusExt[3]) annotation (
          Line(
          points={{-153,-72},{-112,-72},{-112,-61.25},{-69,-61.25}},
          color={255,204,51},
          thickness=0.5));
      connect(thermal_mass.propsBus_b, Living_Room.proBusExt[4]) annotation (
          Line(
          points={{-163,-72},{-114,-72},{-114,-59.75},{-69,-59.75}},
          color={255,204,51},
          thickness=0.5));
      annotation (Diagram(coordinateSystem(extent={{-300,-200},{300,380}}),
            graphics={
            Text(
              extent={{224,-66},{296,-108}},
              lineColor={28,108,200},
              textString="Ground floor
"),         Text(
              extent={{76,54},{152,16}},
              lineColor={28,108,200},
              textString="First floor"),
            Text(
              extent={{222,294},{296,238}},
              lineColor={28,108,200},
              textString="Second floor
")}),                                                                        Icon(
            coordinateSystem(extent={{-300,-200},{300,380}})),
        experiment(StartTime=23673600, StopTime=36716400));
    end Case_O4_Final_Report;
    annotation ();
  end Case_O4;

  package Building_Envelopes
    "Package that contains all considered sets of North-South zone"

    model Building_Envelopes
      import Occupancy;
      import Vaartstraat;
    replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});

      IDEAS.Buildings.Components.RectangularZoneTemplate VN(
        redeclare package Medium = Medium,
        useLigCtrInput=true,
        n50=0.5,
        T_start=295.15,
        redeclare Occupancy.OccSched_Residence occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
        redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=true,
        hasInt=true,
        aziA=-2.8099800957109,
        l=3.52,
        w=5.35,
        lInt=3,
        h=3.52,
        A_winA=3.158,
        fracA=0.255,
        redeclare Vaartstraat.Walls.Outer_wall conTypA,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
        redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
        redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingA,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
        hasEmb=true)
                    "Room north in Vaarstraat 0241"
        annotation (Placement(transformation(extent={{-78,14},{-50,42}})));

      inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
            Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
        annotation (Placement(transformation(extent={{-100,78},{-80,98}})));
       Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
            (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
             < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
        "Number of occupants present"
        annotation (Placement(transformation(extent={{-16,32},{-36,52}})));
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-74,82},{-58,98}})));
      IDEAS.Buildings.Components.RectangularZoneTemplate VS(
        redeclare package Medium = Medium,
        useLigCtrInput=true,
        n50=0.5,
        T_start=295.15,
        redeclare Occupancy.OccSched_Residence occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=false,
        hasWinC=true,
        hasWinD=false,
        hasInt=true,
        aziA=-2.8099800957109,
        l=3.52,
        w=5.35,
        lInt=3,
        h=3.52,
        A_winA=3.158,
        A_winC=3.158,
        A_winD=3.158,
        fracC=0.255,
        redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
        redeclare Vaartstraat.Walls.Outer_wall conTypC,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
        redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingA,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingC,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
        hasCavityC=false,
        hasEmb=true)     "Room south in Vaartstraat 0256"
        annotation (Placement(transformation(extent={{-72,-38},{-44,-10}})));

       Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
            (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
             < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
        "Number of occupants present"
        annotation (Placement(transformation(extent={{-12,-26},{-32,-6}})));
      IDEAS.Buildings.Components.RectangularZoneTemplate ON(
        redeclare package Medium = Medium,
        n50=0.5,
        T_start=295.15,
        redeclare Occupancy.OccSched_Office occNum(k=2),
        redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=true,
        hasInt=true,
        aziA=IDEAS.Types.Azimuth.N,
        l=4,
        w=4,
        lInt=1,
        h=2.7,
        A_winA=1*1,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
        redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
          shaTypA,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
        hasEmb=true)
                   "North parth of the zone"
        annotation (Placement(transformation(extent={{24,8},{52,42}})));

      IDEAS.Buildings.Components.RectangularZoneTemplate OS(
        redeclare package Medium = Medium,
        n50=0.5,
        T_start=295.15,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
        redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
        redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinC=true,
        hasInt=true,
        aziA=IDEAS.Types.Azimuth.N,
        l=4,
        w=4,
        lInt=1,
        h=2.7,
        A_winC=1*1,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
        redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
          shaTypC,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
        hasEmb=true)
                   "South part of the zone"
        annotation (Placement(transformation(extent={{24,-68},{52,-36}})));

      IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
        runningMeanTemperatureEN15251_1
        annotation (Placement(transformation(extent={{-38,76},{-18,96}})));
      TABS.TDC.TDC
              tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCVN.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{-24,48},{0,68}})));
      TABS.TDC.TDC
              tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCVS.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{-28,-2},{-4,18}})));
      TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCON.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1)) annotation (Placement(transformation(extent={{64,36},{88,56}})));
      TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCOS.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{70,-40},{94,-20}})));
    equation
      connect(VN.uLig, light41.y) annotation (Line(points={{-47.2,37.8},{-37,37.8},{
              -37,42}},  color={0,0,127}));
      connect(light56.y, VS.uLig) annotation (Line(points={{-33,-16},{-34,-16},{
              -34,-14.2},{-41.2,-14.2}}, color={0,0,127}));
      connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
          points={{-64.28,36.4},{-64.28,28.2},{-64,28.2},{-64,19.6}},
          color={255,204,51},
          thickness=0.5));
      connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
          points={{-51.4,36.4},{-54.7,36.4},{-54.7,18.2},{-77.44,18.2}},
          color={255,204,51},
          thickness=0.5));
      connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
          points={{-66.4,-11.4},{-66.4,1.3},{-54.48,1.3},{-54.48,14.28}},
          color={255,204,51},
          thickness=0.5));
      connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
          points={{-71.44,-33.8},{-54.72,-33.8},{-54.72,-15.6},{-45.4,-15.6}},
          color={255,204,51},
          thickness=0.5));
      connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
          points={{-58.28,-15.6},{-58.28,-23.8},{-58,-23.8},{-58,-32.4}},
          color={255,204,51},
          thickness=0.5));
      connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
          points={{38,14.8},{37.72,14.8},{37.72,35.2}},
          color={255,204,51},
          thickness=0.5));
      connect(OS.proBusA, ON.proBusC) annotation (Line(
          points={{29.6,-37.6},{29.6,-9.5},{47.52,-9.5},{47.52,8.34}},
          color={255,204,51},
          thickness=0.5));
      connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
          points={{37.72,-42.4},{38,-42.4},{38,-61.6}},
          color={255,204,51},
          thickness=0.5));
      connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-48.6,30.8},{-31.3,
              30.8},{-31.3,58},{-26,58}}, color={0,0,127}));
      connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-42.6,-21.2},{-42.6,
              -7.6},{-30,-7.6},{-30,8}}, color={0,0,127}));
      connect(ON.TSensor, tDCON.a) annotation (Line(points={{53.4,28.4},{53.4,
              38.2},{62,38.2},{62,46}}, color={0,0,127}));
      connect(OS.TSensor, tDCOS.a) annotation (Line(points={{53.4,-48.8},{53.4,
              -39.4},{68,-39.4},{68,-30}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
            coordinateSystem(preserveAspectRatio=false)),
        experiment(StopTime=31536000));
    end Building_Envelopes;

    package Test
      model Test_Building_Envelopes_Demand_W "Made use of the Heat_cool_demand model to calculate the required heat to keep the zones at 22 °C.
  This set point only counts for the winter so use this only to size the heating system. The model calculates the required heat and delivers it immediately/directly"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=5,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=5,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-10},{60,24}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={4,-108})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Test_Heat_Cool_Demand test_Heat_Cool_Demand_VN(
          nZones=1,
          t=300,
          QNom=10000*ones(1),
          Q_design=10000*ones(1))
          annotation (Placement(transformation(extent={{-28,-20},{12,0}})));
        Case_O4.Accumulator.Test_Heat_Cool_Demand test_Heat_Cool_Demand_VS(
          nZones=1,
          t=300,
          QNom=10000*ones(1),
          Q_design=10000*ones(1))
          annotation (Placement(transformation(extent={{-44,-78},{-4,-58}})));
        Case_O4.Accumulator.Test_Heat_Cool_Demand test_Heat_Cool_Demand_OS(
          nZones=1,
          t=300,
          QNom=10000*ones(1),
          Q_design=10000*ones(1))
          annotation (Placement(transformation(extent={{82,-82},{122,-62}})));
        Case_O4.Accumulator.Test_Heat_Cool_Demand test_Heat_Cool_Demand_ON(
          nZones=1,
          t=300,
          QNom=10000*ones(1),
          Q_design=10000*ones(1))
          annotation (Placement(transformation(extent={{86,-14},{126,6}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-3.2},{45.72,-3.2},{45.72,17.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-9.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},
                {30,24},{43.2,24}},color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{
                56,42},{56,24},{48.8,24}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(test_Heat_Cool_Demand_VN.heatPortCon[1], VN.gainCon) annotation (
            Line(points={{-28,-8},{-42,-8},{-42,-8.2},{-56,-8.2}}, color={191,0,0}));
        connect(test_Heat_Cool_Demand_VN.heatPortRad[1], VN.gainRad) annotation (
            Line(points={{-28,-12},{-42,-12},{-42,-12.4},{-56,-12.4}}, color={191,
                0,0}));
        connect(VN.TSensor, test_Heat_Cool_Demand_VN.TSensor[1]) annotation (Line(
              points={{-54.6,-1.2},{-41.3,-1.2},{-41.3,-16},{-28.4,-16}}, color={
                0,0,127}));
        connect(Tset.y, test_Heat_Cool_Demand_VN.TSet[1]) annotation (Line(points=
               {{4,-97},{-2,-97},{-2,-20.2},{-8,-20.2}}, color={0,0,127}));
        connect(test_Heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (
            Line(points={{-44,-66},{-50,-66},{-50,-64.2},{-56,-64.2}}, color={191,
                0,0}));
        connect(test_Heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (
            Line(points={{-44,-70},{-50,-70},{-50,-68.4},{-56,-68.4}}, color={191,
                0,0}));
        connect(VS.TSensor, test_Heat_Cool_Demand_VS.TSensor[1]) annotation (Line(
              points={{-54.6,-57.2},{-54.6,-75.6},{-44.4,-75.6},{-44.4,-74}},
              color={0,0,127}));
        connect(test_Heat_Cool_Demand_VS.TSet[1], Tset.y) annotation (Line(points=
               {{-24,-78.2},{-24,-97},{4,-97}}, color={0,0,127}));
        connect(OS.gainCon, test_Heat_Cool_Demand_OS.heatPortCon[1]) annotation (
            Line(points={{62,-74.8},{72,-74.8},{72,-70},{82,-70}}, color={191,0,0}));
        connect(test_Heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (
            Line(points={{82,-74},{70,-74},{70,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, test_Heat_Cool_Demand_OS.TSensor[1]) annotation (Line(
              points={{63.4,-66.8},{63.4,-65.4},{81.6,-65.4},{81.6,-78}}, color={
                0,0,127}));
        connect(Tset.y, test_Heat_Cool_Demand_OS.TSet[1]) annotation (Line(points=
               {{4,-97},{102,-97},{102,-82.2}}, color={0,0,127}));
        connect(Tset.y, test_Heat_Cool_Demand_ON.TSet[1]) annotation (Line(points=
               {{4,-97},{134,-97},{134,-14.2},{106,-14.2}}, color={0,0,127}));
        connect(test_Heat_Cool_Demand_ON.TSensor[1], ON.TSensor) annotation (Line(
              points={{85.6,-10},{72,-10},{72,10.4},{61.4,10.4}}, color={0,0,127}));
        connect(ON.gainCon, test_Heat_Cool_Demand_ON.heatPortCon[1]) annotation (
            Line(points={{60,1.9},{74,1.9},{74,-2},{86,-2}}, color={191,0,0}));
        connect(ON.gainRad, test_Heat_Cool_Demand_ON.heatPortRad[1]) annotation (
            Line(points={{60,-3.2},{74,-3.2},{74,-6},{86,-6}}, color={191,0,0}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Test_Building_Envelopes_Demand_W;

      model Test_thermal_mass_hasint
        "Model to test influence of thermal mass. Implement by hasint in rectangularzonetemplate"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=3,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-10},{60,24}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=3,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-28,-16},{-40,-4}})));
         Modelica.Blocks.Sources.RealExpression Qheat(y=100)
          annotation (Placement(transformation(extent={{-8,-16},{-22,-4}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-34,-30},{-46,-18}})));
         Modelica.Blocks.Sources.RealExpression Qheat1(y=100)
          annotation (Placement(transformation(extent={{-10,-30},{-24,-18}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{-34,-70},{-46,-58}})));
         Modelica.Blocks.Sources.RealExpression Qheat2(y=100)
          annotation (Placement(transformation(extent={{-10,-70},{-24,-58}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{-28,-82},{-40,-70}})));
         Modelica.Blocks.Sources.RealExpression Qheat3(y=100)
          annotation (Placement(transformation(extent={{-6,-78},{-20,-66}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow4
          annotation (Placement(transformation(extent={{96,-4},{84,8}})));
         Modelica.Blocks.Sources.RealExpression Qheat4(y=100)
          annotation (Placement(transformation(extent={{120,-4},{106,8}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow5
          annotation (Placement(transformation(extent={{100,-26},{88,-14}})));
         Modelica.Blocks.Sources.RealExpression Qheat5(y=100)
          annotation (Placement(transformation(extent={{124,-26},{110,-14}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow6
          annotation (Placement(transformation(extent={{96,-82},{84,-70}})));
         Modelica.Blocks.Sources.RealExpression Qheat6(y=100)
          annotation (Placement(transformation(extent={{120,-82},{106,-70}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow7
          annotation (Placement(transformation(extent={{86,-92},{74,-80}})));
         Modelica.Blocks.Sources.RealExpression Qheat7(y=100)
          annotation (Placement(transformation(extent={{110,-92},{96,-80}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-3.2},{45.72,-3.2},{45.72,17.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-9.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},
                {30,24},{43.2,24}},color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{
                56,42},{56,24},{48.8,24}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(Qheat.y, prescribedHeatFlow.Q_flow)
          annotation (Line(points={{-22.7,-10},{-28,-10}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, VN.gainCon) annotation (Line(points={{-40,-10},
                {-52,-10},{-52,-8.2},{-56,-8.2}}, color={191,0,0}));
        connect(Qheat1.y, prescribedHeatFlow1.Q_flow)
          annotation (Line(points={{-24.7,-24},{-34,-24}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, VN.gainRad) annotation (Line(points={{-46,-24},
                {-52,-24},{-52,-12.4},{-56,-12.4}}, color={191,0,0}));
        connect(Qheat2.y, prescribedHeatFlow2.Q_flow)
          annotation (Line(points={{-24.7,-64},{-34,-64}}, color={0,0,127}));
        connect(VS.gainCon, prescribedHeatFlow2.port) annotation (Line(points={{-56,-64.2},
                {-52,-64.2},{-52,-64},{-46,-64}}, color={191,0,0}));
        connect(Qheat3.y, prescribedHeatFlow3.Q_flow) annotation (Line(points={{-20.7,
                -72},{-28,-72},{-28,-76}}, color={0,0,127}));
        connect(VS.gainRad, prescribedHeatFlow3.port) annotation (Line(points={{-56,-68.4},
                {-44,-68.4},{-44,-76},{-40,-76}}, color={191,0,0}));
        connect(Qheat4.y, prescribedHeatFlow4.Q_flow)
          annotation (Line(points={{105.3,2},{96,2}}, color={0,0,127}));
        connect(prescribedHeatFlow4.port, ON.gainCon) annotation (Line(points={{84,2},
                {72,2},{72,1.9},{60,1.9}}, color={191,0,0}));
        connect(Qheat5.y, prescribedHeatFlow5.Q_flow)
          annotation (Line(points={{109.3,-20},{100,-20}}, color={0,0,127}));
        connect(prescribedHeatFlow5.port, ON.gainRad) annotation (Line(points={{88,-20},
                {76,-20},{76,-3.2},{60,-3.2}}, color={191,0,0}));
        connect(Qheat6.y, prescribedHeatFlow6.Q_flow)
          annotation (Line(points={{105.3,-76},{96,-76}}, color={0,0,127}));
        connect(prescribedHeatFlow6.port, OS.gainCon) annotation (Line(points={{84,-76},
                {74,-76},{74,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(Qheat7.y, prescribedHeatFlow7.Q_flow)
          annotation (Line(points={{95.3,-86},{86,-86}}, color={0,0,127}));
        connect(prescribedHeatFlow7.port, OS.gainRad) annotation (Line(points={{74,-86},
                {70,-86},{70,-79.6},{62,-79.6}}, color={191,0,0}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=10800000));
      end Test_thermal_mass_hasint;

      model Test_thermal_mass_internalwall
        "Model to test influence of thermal mass. Implement by connection both sides of an internal wall to the same zone
  thermal capacitance VN=VS=80769.26, "
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          nSurfExt=2,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=5,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA(mats={
                Vaartstraat.Materials.Brick(d=0.09),
                IDEAS.Buildings.Data.Materials.Air(d=0.06),
                Vaartstraat.Materials.Polyueretha(d=0.2),
                Vaartstraat.Materials.Heavy_Concrete(d=0.15),
                Vaartstraat.Materials.Gypsumplas(d=0.01)}),
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-20},{-56,8}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=false,
          nSurfExt=2,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=5,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          nSurfExt=2,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-12},{60,22}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          nSurfExt=2,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,6},{-92,26}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow
          annotation (Placement(transformation(extent={{-28,-16},{-40,-4}})));
         Modelica.Blocks.Sources.RealExpression Qheat(y=100)
          annotation (Placement(transformation(extent={{-8,-16},{-22,-4}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow1
          annotation (Placement(transformation(extent={{-34,-30},{-46,-18}})));
         Modelica.Blocks.Sources.RealExpression Qheat1(y=100)
          annotation (Placement(transformation(extent={{-10,-30},{-24,-18}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow2
          annotation (Placement(transformation(extent={{-34,-70},{-46,-58}})));
         Modelica.Blocks.Sources.RealExpression Qheat2(y=100)
          annotation (Placement(transformation(extent={{-10,-70},{-24,-58}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow3
          annotation (Placement(transformation(extent={{-28,-82},{-40,-70}})));
         Modelica.Blocks.Sources.RealExpression Qheat3(y=100)
          annotation (Placement(transformation(extent={{-6,-78},{-20,-66}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow4
          annotation (Placement(transformation(extent={{96,-4},{84,8}})));
         Modelica.Blocks.Sources.RealExpression Qheat4(y=100)
          annotation (Placement(transformation(extent={{120,-4},{106,8}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow5
          annotation (Placement(transformation(extent={{100,-26},{88,-14}})));
         Modelica.Blocks.Sources.RealExpression Qheat5(y=100)
          annotation (Placement(transformation(extent={{124,-26},{110,-14}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow6
          annotation (Placement(transformation(extent={{96,-82},{84,-70}})));
         Modelica.Blocks.Sources.RealExpression Qheat6(y=100)
          annotation (Placement(transformation(extent={{120,-82},{106,-70}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow prescribedHeatFlow7
          annotation (Placement(transformation(extent={{86,-92},{74,-80}})));
         Modelica.Blocks.Sources.RealExpression Qheat7(y=100)
          annotation (Placement(transformation(extent={{110,-92},{96,-80}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass_VN(
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall constructionType,
          inc=1.5707963267949,
          azi=0,
          A=5)
          annotation (Placement(transformation(extent={{-158,-34},{-146,-14}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass_VS(
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall constructionType,
          inc=1.5707963267949,
          azi=0,
          A=5)
          annotation (Placement(transformation(extent={{-170,-92},{-158,-72}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass_OS(
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall constructionType,
          inc=1.5707963267949,
          azi=0,
          A=5)   annotation (Placement(transformation(extent={{4,-110},{16,-90}})));
        IDEAS.Buildings.Components.InternalWall thermal_mass_ON(
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall constructionType,
          inc=1.5707963267949,
          azi=0,
          A=5)   annotation (Placement(transformation(extent={{2,-10},{14,10}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,3.8},{-45,3.8},{-45,
                12}},      color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,2.4},{-70.28,-1.8},{-70,-1.8},{-70,-14.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,2.4},{-62.7,2.4},{-62.7,-15.8},{-83.44,-15.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-19.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-5.2},{45.72,-5.2},{45.72,15.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-11.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,8},{-82,8},
                {-82,16},{-92,16}},
                           color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,8},{-64,
                8},{-64,22},{-62,22}},  color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},{
                30,22},{43.2,22}}, color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{56,42},
                {56,22},{48.8,22}}, color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(Qheat.y, prescribedHeatFlow.Q_flow)
          annotation (Line(points={{-22.7,-10},{-28,-10}}, color={0,0,127}));
        connect(prescribedHeatFlow.port, VN.gainCon) annotation (Line(points={{-40,-10},
                {-52,-10},{-52,-10.2},{-56,-10.2}}, color={191,0,0}));
        connect(Qheat1.y, prescribedHeatFlow1.Q_flow)
          annotation (Line(points={{-24.7,-24},{-34,-24}}, color={0,0,127}));
        connect(prescribedHeatFlow1.port, VN.gainRad) annotation (Line(points={{-46,-24},
                {-52,-24},{-52,-14.4},{-56,-14.4}}, color={191,0,0}));
        connect(Qheat2.y, prescribedHeatFlow2.Q_flow)
          annotation (Line(points={{-24.7,-64},{-34,-64}}, color={0,0,127}));
        connect(VS.gainCon, prescribedHeatFlow2.port) annotation (Line(points={{-56,-64.2},
                {-52,-64.2},{-52,-64},{-46,-64}}, color={191,0,0}));
        connect(Qheat3.y, prescribedHeatFlow3.Q_flow) annotation (Line(points={{-20.7,
                -72},{-28,-72},{-28,-76}}, color={0,0,127}));
        connect(VS.gainRad, prescribedHeatFlow3.port) annotation (Line(points={{-56,-68.4},
                {-44,-68.4},{-44,-76},{-40,-76}}, color={191,0,0}));
        connect(Qheat4.y, prescribedHeatFlow4.Q_flow)
          annotation (Line(points={{105.3,2},{96,2}}, color={0,0,127}));
        connect(prescribedHeatFlow4.port, ON.gainCon) annotation (Line(points={{84,2},
                {72,2},{72,-0.1},{60,-0.1}}, color={191,0,0}));
        connect(Qheat5.y, prescribedHeatFlow5.Q_flow)
          annotation (Line(points={{109.3,-20},{100,-20}}, color={0,0,127}));
        connect(prescribedHeatFlow5.port, ON.gainRad) annotation (Line(points={{88,-20},
                {76,-20},{76,-5.2},{60,-5.2}}, color={191,0,0}));
        connect(Qheat6.y, prescribedHeatFlow6.Q_flow)
          annotation (Line(points={{105.3,-76},{96,-76}}, color={0,0,127}));
        connect(prescribedHeatFlow6.port, OS.gainCon) annotation (Line(points={{84,-76},
                {74,-76},{74,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(Qheat7.y, prescribedHeatFlow7.Q_flow)
          annotation (Line(points={{95.3,-86},{86,-86}}, color={0,0,127}));
        connect(prescribedHeatFlow7.port, OS.gainRad) annotation (Line(points={{74,-86},
                {70,-86},{70,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(VN.proBusExt[1], thermal_mass_VN.propsBus_a) annotation (Line(
            points={{-86.8,6.6},{-132,6.6},{-132,-22},{-147,-22}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_VN.propsBus_b, VN.proBusExt[2]) annotation (Line(
            points={{-157,-22},{-136,-22},{-136,9.4},{-86.8,9.4}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_VS.propsBus_a, VS.proBusExt[1]) annotation (Line(
            points={{-159,-80},{-124,-80},{-124,-47.4},{-86.8,-47.4}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_VS.propsBus_b, VS.proBusExt[2]) annotation (Line(
            points={{-169,-80},{-128,-80},{-128,-44.6},{-86.8,-44.6}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_OS.propsBus_a, OS.proBusExt[1]) annotation (Line(
            points={{15,-98},{24,-98},{24,-55.6},{31.2,-55.6}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_OS.propsBus_b, OS.proBusExt[2]) annotation (Line(
            points={{5,-98},{5,-75},{31.2,-75},{31.2,-52.4}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_ON.propsBus_a, ON.proBusExt[1]) annotation (Line(
            points={{13,2},{20,2},{20,20.3},{29.2,20.3}},
            color={255,204,51},
            thickness=0.5));
        connect(thermal_mass_ON.propsBus_b, ON.proBusExt[2]) annotation (Line(
            points={{3,2},{18,2},{18,23.7},{29.2,23.7}},
            color={255,204,51},
            thickness=0.5));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=10800000));
      end Test_thermal_mass_internalwall;

      model U_values
        "The U_values of the walls in the RectangularZoneTemplate can not be checked. This model uses the Zone model and connects it to the different walls and windows"
        import Occupancy;
        import Vaartstraat;
        IDEAS.Buildings.Components.Zone VN(
          redeclare package Medium = IDEAS.Media.Air,
          nSurf=5,
          V=3.52*5.35*3.52,
          hZone=3.52,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1))
          annotation (Placement(transformation(extent={{-72,-18},{-28,24}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim
          annotation (Placement(transformation(extent={{-98,78},{-78,98}})));
        IDEAS.Buildings.Components.OuterWall VN_A(
          redeclare Vaartstraat.Walls.Outer_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=9.23) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-76,38})));
        IDEAS.Buildings.Components.Window VN_W(
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=3.158) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-46,40})));
        IDEAS.Buildings.Components.BoundaryWall VN_B(
          redeclare Vaartstraat.Walls.Inner_wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-1.239183768916,
          A=3.52*5.35)
          annotation (Placement(transformation(extent={{-6,0},{-18,20}})));
        IDEAS.Buildings.Components.BoundaryWall VN_C(
          redeclare Vaartstraat.Walls.Inner_wall_hall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.33161255787892,
          A=3.52*3.52) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=-90,
              origin={-62,-28})));
        IDEAS.Buildings.Components.BoundaryWall VN_D(
          redeclare Vaartstraat.Walls.Inner_wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=1.9024088846738,
          A=3.52*5.35)
          annotation (Placement(transformation(extent={{-98,20},{-86,0}})));
        IDEAS.Buildings.Components.Zone ON(
          redeclare package Medium = IDEAS.Media.Air,
          nSurf=5,
          V=4*4*2.7,
          hZone=2.7,
          n50=0.5,
          redeclare Occupancy.OccSched_Office occNum(k=1))
          annotation (Placement(transformation(extent={{28,-20},{72,22}})));
        IDEAS.Buildings.Components.OuterWall ON_A(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=4*2.7) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={32,56})));
        IDEAS.Buildings.Components.Window ON_W(
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=1) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={58,54})));
        IDEAS.Buildings.Components.OuterWall ON_B(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-1.239183768916,
          A=4*2.7) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={92,8})));
        IDEAS.Buildings.Components.BoundaryWall ON_C(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.33161255787892,
          A=3.52*3.52) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=-90,
              origin={42,-54})));
        IDEAS.Buildings.Components.OuterWall ON_D(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=1.9024088846738,
          A=4*2.7) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={10,4})));
      equation
        connect(VN.propsBus[1], VN_A.propsBus_a) annotation (Line(
            points={{-72,14.76},{-78,14.76},{-78,33}},
            color={255,204,51},
            thickness=0.5));
        connect(VN_W.propsBus_a, VN.propsBus[2]) annotation (Line(
            points={{-44,35},{-62,35},{-62,13.08},{-72,13.08}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.propsBus[3], VN_B.propsBus_a) annotation (Line(
            points={{-72,11.4},{-36,11.4},{-36,12},{-17,12}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.propsBus[4], VN_C.propsBus_a) annotation (Line(
            points={{-72,9.72},{-60,9.72},{-60,-23}},
            color={255,204,51},
            thickness=0.5));
        connect(VN_D.propsBus_a, VN.propsBus[5]) annotation (Line(
            points={{-87,8},{-88,8},{-88,8.04},{-72,8.04}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_A.propsBus_a, ON.propsBus[1]) annotation (Line(
            points={{30,51},{30,12.76},{28,12.76}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_W.propsBus_a, ON.propsBus[2]) annotation (Line(
            points={{60,49},{44,49},{44,11.08},{28,11.08}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.propsBus[3], ON_B.propsBus_a) annotation (Line(
            points={{28,9.4},{58,9.4},{58,10},{87,10}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_C.propsBus_a, ON.propsBus[4]) annotation (Line(
            points={{44,-49},{42,-49},{42,7.72},{28,7.72}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_D.propsBus_a, ON.propsBus[5]) annotation (Line(
            points={{15,6},{20,6},{20,6.04},{28,6.04}},
            color={255,204,51},
            thickness=0.5));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false)),
          Diagram(coordinateSystem(preserveAspectRatio=false)),
          experiment(StopTime=3600));
      end U_values;

      model CO2_calculation
        "calculation of the minimum ventilaion rate required to keep CO2 under 800 ppm in VN (1 person)"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA) "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-58,10},{-30,38}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-162,78},{-142,98}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{2,28},{-18,48}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-136,82},{-120,98}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-58,-44},{-30,-16}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{4,-30},{-16,-10}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{60,16},{88,50}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{60,-70},{88,-38}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand(
          nZones=1,
          t=300,
          QNom=ones(1)*10000,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{8,4},{48,24}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={28,-22})));

        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-42,68})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-98,30},{-78,50}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{38,-22},{58,-2}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={84,-12})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={80,86})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{24,56},{44,76}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-27.2,33.8},{-19,33.8},{
                -19,38}},  color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-17,-20},{-16,-20},{-16,
                -20.2},{-27.2,-20.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-44.28,32.4},{-44.28,24.2},{-44,24.2},{-44,15.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-31.4,32.4},{-36.7,32.4},{-36.7,14.2},{-57.44,14.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-52.4,-17.4},{-52.4,-2.7},{-34.48,-2.7},{-34.48,10.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-57.44,-39.8},{-36.72,-39.8},{-36.72,-21.6},{-31.4,-21.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-44.28,-21.6},{-44.28,-27.8},{-44,-27.8},{-44,-38.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{74,22.8},{73.72,22.8},{73.72,43.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{65.6,-39.6},{65.6,0.5},{83.52,0.5},{83.52,16.34}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{73.72,-44.4},{74,-44.4},{74,-63.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand.heatPortCon[1], VN.gainCon) annotation (Line(points={{8,16},{
                -14,16},{-14,19.8},{-30,19.8}},           color={191,0,0}));
        connect(heat_Cool_Demand.heatPortRad[1], VN.gainRad) annotation (Line(points={{8,12},{
                -14,12},{-14,15.6},{-30,15.6}},           color={191,0,0}));
        connect(heat_Cool_Demand.TSensor[1], VN.TSensor) annotation (Line(points={{7.6,8},
                {-12,8},{-12,26.8},{-28.6,26.8}},      color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand.TSet[1])
          annotation (Line(points={{28,-11},{28,3.8}},color={0,0,127}));
        connect(msource_VN.ports[1], VN.port_a) annotation (Line(points={{-42,58},{
                -42,51},{-41.2,51},{-41.2,38}}, color={0,127,255}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-46.8,38},{
                -62,38},{-62,40},{-78,40}}, color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{58,-12},{64,
                -12},{64,-38},{71.2,-38}}, color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{84,-22},{
                80,-22},{80,-38},{76.8,-38}}, color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{44,66},{58,66},
                {58,50},{71.2,50}}, color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{80,76},{
                78,76},{78,50},{76.8,50}}, color={0,127,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},
                  {100,100}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},{100,100}})),
          experiment(StopTime=31536000));
      end CO2_calculation;

      model U_values_noboundarywalls "The U_values of the walls in the RectangularZoneTemplate can not be checked. This model uses the Zone model and connects it to the different walls and windows
  The U_values are not given for boundary walls, so they are modelled as outer walls here, just to check their U_value"
        import Occupancy;
        import Vaartstraat;
        IDEAS.Buildings.Components.Zone VN(
          redeclare package Medium = IDEAS.Media.Air,
          nSurf=5,
          V=3.52*5.35*3.52,
          hZone=3.52,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1))
          annotation (Placement(transformation(extent={{-72,-18},{-28,24}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim
          annotation (Placement(transformation(extent={{-98,78},{-78,98}})));
        IDEAS.Buildings.Components.OuterWall VN_A(
          redeclare Vaartstraat.Walls.Outer_wall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=9.23) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={-76,38})));
        IDEAS.Buildings.Components.Window VN_W(
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=3.158) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={-46,40})));
        IDEAS.Buildings.Components.Zone ON(
          redeclare package Medium = IDEAS.Media.Air,
          nSurf=5,
          V=4*4*2.7,
          hZone=2.7,
          n50=0.5,
          redeclare Occupancy.OccSched_Office occNum(k=1))
          annotation (Placement(transformation(extent={{28,-20},{72,22}})));
        IDEAS.Buildings.Components.OuterWall ON_A(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=(4*2.7) - 1)
                   annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=90,
              origin={32,56})));
        IDEAS.Buildings.Components.Window ON_W(
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazing,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-2.8099800957109,
          A=1) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=-90,
              origin={58,54})));
        IDEAS.Buildings.Components.OuterWall ON_B(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-1.239183768916,
          A=4*2.7) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={92,8})));
        IDEAS.Buildings.Components.OuterWall ON_D(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=1.9024088846738,
          A=4*2.7) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=0,
              origin={10,4})));
        IDEAS.Buildings.Components.OuterWall VN_B(
          redeclare Vaartstraat.Walls.Inner_wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=-1.239183768916,
          A=3.52*5.35) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=0,
              origin={-10,8})));
        IDEAS.Buildings.Components.OuterWall VN_C(
          redeclare Vaartstraat.Walls.Inner_wall_hall constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.33161255787892,
          A=3.52*3.52) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={-54,-34})));
        IDEAS.Buildings.Components.OuterWall VN_D(
          redeclare Vaartstraat.Walls.Inner_wall_neighbour constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=1.9024088846738,
          A=3.52*5.35) annotation (Placement(transformation(
              extent={{6,-10},{-6,10}},
              rotation=180,
              origin={-90,10})));
        IDEAS.Buildings.Components.OuterWall ON_C(
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            constructionType,
          inc=IDEAS.Types.Tilt.Wall,
          azi=0.33161255787892,
          A=4*2.7) annotation (Placement(transformation(
              extent={{-6,-10},{6,10}},
              rotation=90,
              origin={50,-36})));
        Modelica.Blocks.Sources.RealExpression U_total(y=(VN_A.U_value*VN_A.A) + (
              0.56*VN_W.A))
          annotation (Placement(transformation(extent={{-66,52},{-46,72}})));
      equation
        connect(VN.propsBus[1], VN_A.propsBus_a) annotation (Line(
            points={{-72,14.76},{-78,14.76},{-78,33}},
            color={255,204,51},
            thickness=0.5));
        connect(VN_W.propsBus_a, VN.propsBus[2]) annotation (Line(
            points={{-44,35},{-62,35},{-62,13.08},{-72,13.08}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_A.propsBus_a, ON.propsBus[1]) annotation (Line(
            points={{30,51},{30,12.76},{28,12.76}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_W.propsBus_a, ON.propsBus[2]) annotation (Line(
            points={{60,49},{44,49},{44,11.08},{28,11.08}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.propsBus[3], ON_B.propsBus_a) annotation (Line(
            points={{28,9.4},{58,9.4},{58,10},{87,10}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_D.propsBus_a, ON.propsBus[4]) annotation (Line(
            points={{15,6},{20,6},{20,7.72},{28,7.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.propsBus[3], VN_B.propsBus_a) annotation (Line(
            points={{-72,11.4},{-42,11.4},{-42,10},{-15,10}},
            color={255,204,51},
            thickness=0.5));
        connect(VN_C.propsBus_a, VN.propsBus[4]) annotation (Line(
            points={{-56,-29},{-64,-29},{-64,9.72},{-72,9.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VN_D.propsBus_a, VN.propsBus[5]) annotation (Line(
            points={{-85,8},{-78,8},{-78,8.04},{-72,8.04}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_C.propsBus_a, ON.propsBus[5]) annotation (Line(
            points={{48,-31},{38,-31},{38,6.04},{28,6.04}},
            color={255,204,51},
            thickness=0.5));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false)),
          Diagram(coordinateSystem(preserveAspectRatio=false)),
          experiment(StopTime=3600));
      end U_values_noboundarywalls;

      model Building_Envelopes_Demand_W_tL "This model is to test what happens to Tseensor and Qheat for all zones when the time constant in the Heat_cool_demand model is set ver low"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-10},{60,24}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VN(
          nZones=1,
          t=10,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-18,-24},{22,-4}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={2,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VS(
          nZones=1,
          t=10,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-42,-86},{-2,-66}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_OS(
          nZones=1,
          t=10,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{92,-88},{132,-68}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_ON(
          nZones=1,
          t=10,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{96,-12},{136,8}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-3.2},{45.72,-3.2},{45.72,17.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-9.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand_VN.heatPortCon[1], VN.gainCon) annotation (Line(
              points={{-18,-12},{-40,-12},{-40,-8.2},{-56,-8.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.heatPortRad[1], VN.gainRad) annotation (Line(
              points={{-18,-16},{-40,-16},{-40,-12.4},{-56,-12.4}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.TSensor[1], VN.TSensor) annotation (Line(points={{-18.4,
                -20},{-38,-20},{-38,-1.2},{-54.6,-1.2}},       color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_VN.TSet[1])
          annotation (Line(points={{2,-99},{2,-24.2}}, color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},
                {30,24},{43.2,24}},color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{
                56,42},{56,24},{48.8,24}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (Line(
              points={{-42,-74},{-50,-74},{-50,-64.2},{-56,-64.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (Line(
              points={{-42,-78},{-50,-78},{-50,-68.4},{-56,-68.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_VS.TSensor[1]) annotation (Line(points={{-54.6,
                -57.2},{-54.6,-58},{-48,-58},{-48,-82},{-42.4,-82}},       color={0,0,
                127}));
        connect(Tset.y, heat_Cool_Demand_VS.TSet[1])
          annotation (Line(points={{2,-99},{-22,-99},{-22,-86.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_OS.heatPortCon[1], OS.gainCon) annotation (Line(
              points={{92,-76},{76,-76},{76,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (Line(
              points={{92,-80},{72,-80},{72,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, heat_Cool_Demand_OS.TSensor[1]) annotation (Line(points={{63.4,
                -66.8},{63.4,-66},{76,-66},{76,-84},{91.6,-84}},      color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_OS.TSet[1])
          annotation (Line(points={{2,-99},{112,-99},{112,-88.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_ON.heatPortCon[1], ON.gainCon) annotation (Line(
              points={{96,0},{78,0},{78,1.9},{60,1.9}}, color={191,0,0}));
        connect(heat_Cool_Demand_ON.heatPortRad[1], ON.gainRad) annotation (Line(
              points={{96,-4},{78,-4},{78,-3.2},{60,-3.2}}, color={191,0,0}));
        connect(Tset.y, heat_Cool_Demand_ON.TSet[1]) annotation (Line(points={{2,-99},
                {146,-99},{146,-12.2},{116,-12.2}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_ON.TSensor[1]) annotation (Line(points={{61.4,
                10.4},{78.7,10.4},{78.7,-8},{95.6,-8}},      color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W_tL;

      model Building_Envelopes_Demand_W_tH "This model is to test what happens to Tseensor and Qheat for all zones
  when the time constant in the Heat_cool_demand model is set very high"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-10},{60,24}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VN(
          nZones=1,
          t=7200,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-18,-24},{22,-4}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={2,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VS(
          nZones=1,
          t=7200,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-42,-86},{-2,-66}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_OS(
          nZones=1,
          t=7200,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{92,-88},{132,-68}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_ON(
          nZones=1,
          t=7200,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{98,-12},{138,8}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-3.2},{45.72,-3.2},{45.72,17.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-9.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand_VN.heatPortCon[1], VN.gainCon) annotation (Line(
              points={{-18,-12},{-40,-12},{-40,-8.2},{-56,-8.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.heatPortRad[1], VN.gainRad) annotation (Line(
              points={{-18,-16},{-40,-16},{-40,-12.4},{-56,-12.4}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.TSensor[1], VN.TSensor) annotation (Line(points={{-18.4,
                -20},{-38,-20},{-38,-1.2},{-54.6,-1.2}},       color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_VN.TSet[1])
          annotation (Line(points={{2,-99},{2,-24.2}}, color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},
                {30,24},{43.2,24}},color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{
                56,42},{56,24},{48.8,24}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (Line(
              points={{-42,-74},{-50,-74},{-50,-64.2},{-56,-64.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (Line(
              points={{-42,-78},{-50,-78},{-50,-68.4},{-56,-68.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_VS.TSensor[1]) annotation (Line(points={{-54.6,
                -57.2},{-54.6,-58},{-48,-58},{-48,-82},{-42.4,-82}},       color={0,0,
                127}));
        connect(Tset.y, heat_Cool_Demand_VS.TSet[1])
          annotation (Line(points={{2,-99},{-22,-99},{-22,-86.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_OS.heatPortCon[1], OS.gainCon) annotation (Line(
              points={{92,-76},{76,-76},{76,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (Line(
              points={{92,-80},{72,-80},{72,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, heat_Cool_Demand_OS.TSensor[1]) annotation (Line(points={{63.4,
                -66.8},{63.4,-66},{76,-66},{76,-84},{91.6,-84}},      color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_OS.TSet[1])
          annotation (Line(points={{2,-99},{112,-99},{112,-88.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_ON.heatPortCon[1], ON.gainCon) annotation (Line(
              points={{98,0},{78,0},{78,1.9},{60,1.9}}, color={191,0,0}));
        connect(heat_Cool_Demand_ON.heatPortRad[1], ON.gainRad) annotation (Line(
              points={{98,-4},{78,-4},{78,-3.2},{60,-3.2}}, color={191,0,0}));
        connect(Tset.y, heat_Cool_Demand_ON.TSet[1]) annotation (Line(points={{2,-99},
                {146,-99},{146,-12.2},{118,-12.2}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_ON.TSensor[1]) annotation (Line(points={{61.4,
                10.4},{78.7,10.4},{78.7,-8},{97.6,-8}},      color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W_tH;

      model Building_Envelopes_Demand_W_f_RH "Test model to see how much the temperature drops in the zones after 8 hours in order to determine the fRH factor"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-8},{60,26}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

         Modelica.Blocks.Sources.RealExpression Tset(y=if calTim.month < 2 then 273.15
               + 22 else 273.15)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={-12,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-32,-16},{8,4}})));
        Case_O4.Accumulator.Heat_Demand heat_Demand1(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-36,-78},{4,-58}})));
        Case_O4.Accumulator.Heat_Demand heat_Demand2(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{96,-84},{136,-64}})));
        Case_O4.Accumulator.Heat_Demand heat_Demand3(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{76,-2},{116,18}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-1.2},{45.72,-1.2},{45.72,19.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-7.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,
                44},{30,26},{43.2,26}},
                                   color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},
                {56,42},{56,26},{48.8,26}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(Tset.y, heat_Demand.TSet[1])
          annotation (Line(points={{-12,-99},{-12,-16.2}}, color={0,0,127}));
        connect(VN.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{
                -54.6,-1.2},{-43.3,-1.2},{-43.3,-12},{-32.4,-12}}, color={0,0,127}));
        connect(VN.gainCon, heat_Demand.heatPortCon[1]) annotation (Line(points={
                {-56,-8.2},{-44,-8.2},{-44,-4},{-32,-4}}, color={191,0,0}));
        connect(VN.gainRad, heat_Demand.heatPortRad[1]) annotation (Line(points={
                {-56,-12.4},{-44,-12.4},{-44,-8},{-32,-8}}, color={191,0,0}));
        connect(Tset.y, heat_Demand1.TSet[1]) annotation (Line(points={{-12,-99},
                {-16,-99},{-16,-78.2}}, color={0,0,127}));
        connect(heat_Demand1.heatPortCon[1], VS.gainCon) annotation (Line(points=
                {{-36,-66},{-46,-66},{-46,-64.2},{-56,-64.2}}, color={191,0,0}));
        connect(heat_Demand1.heatPortRad[1], VS.gainRad) annotation (Line(points=
                {{-36,-70},{-46,-70},{-46,-68.4},{-56,-68.4}}, color={191,0,0}));
        connect(heat_Demand1.TSensor[1], VS.TSensor) annotation (Line(points={{
                -36.4,-74},{-44,-74},{-44,-57.2},{-54.6,-57.2}}, color={0,0,127}));
        connect(Tset.y, heat_Demand2.TSet[1]) annotation (Line(points={{-12,-99},
                {52,-99},{52,-84.2},{116,-84.2}}, color={0,0,127}));
        connect(heat_Demand2.TSensor[1], OS.TSensor) annotation (Line(points={{
                95.6,-80},{80,-80},{80,-66.8},{63.4,-66.8}}, color={0,0,127}));
        connect(heat_Demand2.heatPortCon[1], OS.gainCon) annotation (Line(points=
                {{96,-72},{80,-72},{80,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(heat_Demand2.heatPortRad[1], OS.gainRad) annotation (Line(points=
                {{96,-76},{80,-76},{80,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(Tset.y, heat_Demand3.TSet[1]) annotation (Line(points={{-12,-99},
                {152,-99},{152,-2.2},{96,-2.2}}, color={0,0,127}));
        connect(heat_Demand3.TSensor[1], ON.TSensor) annotation (Line(points={{
                75.6,2},{68,2},{68,12.4},{61.4,12.4}}, color={0,0,127}));
        connect(heat_Demand3.heatPortCon[1], ON.gainCon) annotation (Line(points=
                {{76,10},{70,10},{70,3.9},{60,3.9}}, color={191,0,0}));
        connect(heat_Demand3.heatPortRad[1], ON.gainRad) annotation (Line(points=
                {{76,6},{68,6},{68,-1.2},{60,-1.2}}, color={191,0,0}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W_f_RH;

      model HC_demand "did not finish the model since heat_demand_scalar suddenly worked"

       // parameter Modelica.SIunits.Time t=10 "Time needed to reach temperature setpoint";

        Modelica.Blocks.Interfaces.RealInput Tsensor
          annotation (Placement(transformation(extent={{-140,-22},{-100,18}})));
        Modelica.Blocks.Interfaces.RealInput Tset annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=90,
              origin={0,-118})));
        Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b QHC
          annotation (Placement(transformation(extent={{-16,100},{16,132}})));
      equation

      QHC.Q_flow = 5;

        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={Text(
                extent={{-54,20},{60,-42}},
                lineColor={28,108,200},
                textString="HC Demand
"),       Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1)}),                                    Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end HC_demand;

      model Test_HC_Demand
        Modelica.Blocks.Sources.RealExpression realExpression(y=25)
          annotation (Placement(transformation(extent={{-88,-4},{-68,16}})));
        HC_demand hC_demand
          annotation (Placement(transformation(extent={{-26,-14},{22,28}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=22)
          annotation (Placement(transformation(extent={{-42,-58},{-22,-38}})));
      equation
        connect(realExpression.y, hC_demand.Tsensor) annotation (Line(points={{
                -67,6},{-48,6},{-48,6.58},{-30.8,6.58}}, color={0,0,127}));
        connect(realExpression1.y, hC_demand.Tset) annotation (Line(points={{-21,
                -48},{-12,-48},{-12,-17.78},{-2,-17.78}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end Test_HC_Demand;
    end Test;

    package Thais
      model Building_Envelopes_Demand_Thais
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-78,20},{-50,48}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource(
              "modelica://IDEAS/Resources/weatherdata/LeuvenWeather_2.txt"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,40},{-40,60}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-80,-32},{-52,-4}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-18,-18},{-38,2}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{38,28},{66,62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-46},{64,-14}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand(
          nZones=1,
          t=300,
          QNom=ones(1)*10000,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{-14,16},{26,36}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/
              3600)*(24.5 - 27.5)))     "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/
              3600)*(22 - 18)))     "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=if VN.occNum.nOcc == 1
               then 273.15 + 18 else 273.15 + 15) "Number of occupants present"
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-20,-72})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={6,-48})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-47.2,43.8},{-41,43.8},
                {-41,50}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-39,-8},{-38,-8},{-38,-8.2},
                {-49.2,-8.2}},             color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-64.28,42.4},{-64.28,36.2},{-64,36.2},{-64,25.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-51.4,42.4},{-58.7,42.4},{-58.7,24.2},{-77.44,24.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-74.4,-5.4},{-74.4,9.3},{-54.48,9.3},{-54.48,20.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-79.44,-27.8},{-58.72,-27.8},{-58.72,-9.6},{-53.4,-9.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-66.28,-9.6},{-66.28,-15.8},{-66,-15.8},{-66,-26.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{52,34.8},{51.72,34.8},{51.72,55.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-15.6},{41.6,12.5},{61.52,12.5},{61.52,28.34}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-20.4},{50,-20.4},{50,-39.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand.heatPortCon[1], VN.gainCon) annotation (Line(points={{-14,28},
                {-36,28},{-36,29.8},{-50,29.8}},          color={191,0,0}));
        connect(heat_Cool_Demand.heatPortRad[1], VN.gainRad) annotation (Line(points={{-14,24},
                {-36,24},{-36,25.6},{-50,25.6}},          color={191,0,0}));
        connect(heat_Cool_Demand.TSensor[1], VN.TSensor) annotation (Line(points={{-14.4,
                20},{-34,20},{-34,36.8},{-48.6,36.8}}, color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand.TSet[1])
          annotation (Line(points={{6,-37},{6,15.8}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_Thais;

      model Building_Envelopes_Demand_W_Leuven
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-78,20},{-50,48}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/LeuvenWeather_2.txt"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,40},{-40,60}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-80,-32},{-52,-4}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-18,-18},{-38,2}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{38,28},{66,62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-46},{64,-14}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand(
          nZones=1,
          t=300,
          QNom=ones(1)*10000,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{-14,16},{26,36}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=if VN.occNum.nOcc == 1 then 273.15
               + 18 else 273.15 + 15) "Number of occupants present" annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-20,-72})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 21)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={6,-48})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=55*1.204/3600,
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-58,72})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-102,42},{-82,62}})));
         Modelica.Blocks.Sources.RealExpression Tamb(y=sim.Te)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{5,-8},{-5,8}},
              rotation=90,
              origin={-53,110})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-47.2,43.8},{-41,43.8},{
                -41,50}},  color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-39,-8},{-38,-8},{-38,-8.2},
                {-49.2,-8.2}},             color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-64.28,42.4},{-64.28,36.2},{-64,36.2},{-64,25.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-51.4,42.4},{-58.7,42.4},{-58.7,24.2},{-77.44,24.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-74.4,-5.4},{-74.4,9.3},{-54.48,9.3},{-54.48,20.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-79.44,-27.8},{-58.72,-27.8},{-58.72,-9.6},{-53.4,-9.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-66.28,-9.6},{-66.28,-15.8},{-66,-15.8},{-66,-26.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{52,34.8},{51.72,34.8},{51.72,55.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-15.6},{41.6,12.5},{61.52,12.5},{61.52,28.34}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-20.4},{50,-20.4},{50,-39.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand.heatPortCon[1], VN.gainCon) annotation (Line(points={{-14,28},
                {-36,28},{-36,29.8},{-50,29.8}},          color={191,0,0}));
        connect(heat_Cool_Demand.heatPortRad[1], VN.gainRad) annotation (Line(points={{-14,24},
                {-36,24},{-36,25.6},{-50,25.6}},          color={191,0,0}));
        connect(heat_Cool_Demand.TSensor[1], VN.TSensor) annotation (Line(points={{-14.4,
                20},{-34,20},{-34,36.8},{-48.6,36.8}}, color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand.TSet[1])
          annotation (Line(points={{6,-37},{6,15.8}}, color={0,0,127}));
        connect(Tamb.y, msource_VN.T_in) annotation (Line(points={{-53,104.5},{-53,95.25},
                {-54,95.25},{-54,84}}, color={0,0,127}));
        connect(msource_VN.ports[1], VN.port_a) annotation (Line(points={{-58,62},{-61.2,
                62},{-61.2,48}}, color={0,127,255}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-66.8,48},{-80,48},
                {-80,52},{-82,52}}, color={0,127,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W_Leuven;

      model Building_Envelopes_Demand_W_Leuven_winterheat
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-80,-28},{-52,0}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/LeuvenWeather_2.txt"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-14,-4},{-34,16}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-80,-68},{-52,-40}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-18,-54},{-38,-34}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{38,-8},{66,26}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-82},{64,-50}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=if VN.occNum.nOcc == 1 then 273.15
               + 18 else 273.15 + 15) "Number of occupants present" annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-30,-88})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=55*1.204/3600,
          use_T_in=true,
          T=291.15,
          nPorts=2) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,100})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-170,-50},{-150,-30}})));
         Modelica.Blocks.Sources.RealExpression Tamb(y=sim.Te)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{5,-8},{-5,8}},
              rotation=90,
              origin={-57,130})));
        Case_O4.Accumulator.Heat_Demand heat_Demand(
          nZones=1,
          t=300,
          QNom=1753*ones(1),
          Q_design=1753*ones(1))
          annotation (Placement(transformation(extent={{-22,-30},{18,-10}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=if VN.occNum.nOcc == 1 then 273.15 + 18 else 273.15 + 15)    "Number of occupants present"
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={0,-52})));
        IDEAS.Fluid.HeatExchangers.ConstantEffectiveness hex(
          redeclare package Medium1 = Medium,
          redeclare package Medium2 = Medium,
          m1_flow_nominal=msource_VN.m_flow,
          m2_flow_nominal=msource_VN.m_flow,
          dp1_nominal=100,
          dp2_nominal=100,
          eps=0.87)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-68,60})));
        IDEAS.Fluid.Actuators.Valves.ThreeWayLinear val(
          redeclare package Medium = Medium,
          m_flow_nominal=msource_VN.m_flow,
          dpValve_nominal=100) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-62,36})));
         Modelica.Blocks.Sources.RealExpression bypass(y=if VN.TSensor > 273.15
               + 23 then 0 else 1)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-122,2},{-102,22}})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort senTem(redeclare package Medium
            = Medium, m_flow_nominal=msource_VN.m_flow)
          annotation (Placement(transformation(extent={{6,6},{-6,-6}},
              rotation=90,
              origin={-62,14})));
        Modelica.Blocks.Continuous.Integrator integrator(k=1/3600000)
          annotation (Placement(transformation(extent={{-132,-114},{-112,-94}})));
        Modelica.Blocks.Sources.RealExpression Expr_Heat_Demand_Living_Room(y=VN.gainCon.Q_flow
               + VN.gainRad.Q_flow)                                    annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-174,-104})));
        IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="integrator_heat_demand_Living_Room.json",
          varKeys={"Heat Demand [kWh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{-82,-114},{-62,-94}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-49.2,-4.2},{-35,
                -4.2},{-35,6}},
                           color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-39,-44},{-38,-44},{-38,
                -44.2},{-49.2,-44.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-66.28,-5.6},{-66.28,0.2},{-66,0.2},{-66,-22.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-53.4,-5.6},{-58.7,-5.6},{-58.7,-23.8},{-79.44,-23.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-74.4,-41.4},{-74.4,-26.7},{-56.48,-26.7},{-56.48,-27.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-79.44,-63.8},{-58.72,-63.8},{-58.72,-45.6},{-53.4,-45.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-66.28,-45.6},{-66.28,-51.8},{-66,-51.8},{-66,-62.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{52,-1.2},{51.72,-1.2},{51.72,19.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-51.6},{41.6,-23.5},{61.52,-23.5},{61.52,-7.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-56.4},{50,-56.4},{50,-75.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(Tamb.y, msource_VN.T_in) annotation (Line(points={{-57,124.5},{
                -57,95.25},{-58,95.25},{-58,112}},
                                       color={0,0,127}));
        connect(VN.TSensor, heat_Demand.TSensor[1]) annotation (Line(points={{-50.6,
                -11.2},{-35.3,-11.2},{-35.3,-26},{-22.4,-26}},
                                                      color={0,0,127}));
        connect(heat_Demand.heatPortCon[1], VN.gainCon) annotation (Line(points={{-22,-18},
                {-36,-18},{-36,-18.2},{-52,-18.2}},  color={191,0,0}));
        connect(heat_Demand.heatPortRad[1], VN.gainRad) annotation (Line(points={{-22,-22},
                {-36,-22},{-36,-22.4},{-52,-22.4}},      color={191,0,0}));
        connect(Tset.y, heat_Demand.TSet[1])
          annotation (Line(points={{0,-41},{0,-30.2},{-2,-30.2}}, color={0,0,127}));
        connect(msource_VN.ports[1], hex.port_a1)
          annotation (Line(points={{-60,90},{-60,70},{-62,70}}, color={0,127,255}));
        connect(VN.port_b, hex.port_a2) annotation (Line(points={{-68.8,
                3.55271e-15},{-74,3.55271e-15},{-74,50}},
                                   color={0,127,255}));
        connect(hex.port_b2, bou_VN.ports[1]) annotation (Line(points={{-74,70},{
                -92,70},{-92,-40},{-150,-40}},
                                       color={0,127,255}));
        connect(hex.port_b1, val.port_1)
          annotation (Line(points={{-62,50},{-62,46}}, color={0,127,255}));
        connect(msource_VN.ports[2], val.port_3) annotation (Line(points={{-64,90},
                {-64,80},{-30,80},{-30,36},{-52,36}}, color={0,127,255}));
        connect(bypass.y, val.y) annotation (Line(points={{-101,12},{-88,12},{-88,
                36},{-74,36}}, color={0,0,127}));
        connect(val.port_2, senTem.port_a)
          annotation (Line(points={{-62,26},{-62,20}}, color={0,127,255}));
        connect(senTem.port_b, VN.port_a) annotation (Line(points={{-62,8},{-62,4},
                {-62,0},{-63.2,0}}, color={0,127,255}));
        connect(Expr_Heat_Demand_Living_Room.y,integrator. u)
          annotation (Line(points={{-163,-104},{-134,-104}},
                                                         color={0,0,127}));
        connect(integrator.y,jsonWri. u[1])
          annotation (Line(points={{-111,-104},{-82,-104}},
                                                         color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-140},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-140},{100,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W_Leuven_winterheat;

      model Building_Envelopes_Demand_W_Leuven_noheating
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-78,20},{-50,48}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/LeuvenWeather_2.txt"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,40},{-40,60}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=false,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=0.4,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Vaartstraat_Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-80,-32},{-52,-4}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-18,-18},{-38,2}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{38,28},{66,62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-46},{64,-14}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=if VN.occNum.nOcc == 1 then 273.15
               + 18 else 273.15 + 15) "Number of occupants present" annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-20,-72})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 21)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={6,-48})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=55*1.204/3600,
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-58,72})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-102,42},{-82,62}})));
         Modelica.Blocks.Sources.RealExpression Tamb(y=sim.Te)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{5,-8},{-5,8}},
              rotation=90,
              origin={-53,104})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-47.2,43.8},{-41,43.8},{
                -41,50}},  color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-39,-8},{-38,-8},{-38,-8.2},
                {-49.2,-8.2}},             color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-64.28,42.4},{-64.28,36.2},{-64,36.2},{-64,25.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-51.4,42.4},{-58.7,42.4},{-58.7,24.2},{-77.44,24.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-74.4,-5.4},{-74.4,9.3},{-54.48,9.3},{-54.48,20.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-79.44,-27.8},{-58.72,-27.8},{-58.72,-9.6},{-53.4,-9.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-66.28,-9.6},{-66.28,-15.8},{-66,-15.8},{-66,-26.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{52,34.8},{51.72,34.8},{51.72,55.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-15.6},{41.6,12.5},{61.52,12.5},{61.52,28.34}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-20.4},{50,-20.4},{50,-39.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(Tamb.y, msource_VN.T_in) annotation (Line(points={{-53,98.5},{-53,
                95.25},{-54,95.25},{-54,84}},
                                       color={0,0,127}));
        connect(msource_VN.ports[1], VN.port_a) annotation (Line(points={{-58,62},{-61.2,
                62},{-61.2,48}}, color={0,127,255}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-66.8,48},{-80,48},
                {-80,52},{-82,52}}, color={0,127,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W_Leuven_noheating;
    end Thais;

    package Ideal_HC_demand_TABS
      model HC_demand_TABS_25Kh
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-56,-14},{-28,14}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{2,6},{-18,26}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-82,-70},{-54,-42}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-54},{-40,-34}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                     "North parth of the zone"
          annotation (Placement(transformation(extent={{60,-6},{88,28}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasEmb=true)
                     "South part of the zone"
          annotation (Placement(transformation(extent={{58,-84},{86,-52}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-198,86},{-184,102}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-168,72},{-154,86}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-194,106},{-182,122}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-164,82},{-148,96}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/
              3600)*(24.5 - 27.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-180,30},{-168,46}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/
              3600)*(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-188,52},{-178,68}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-144,136},{-124,156}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-144,122},{-124,142}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-66,140},{-54,152}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-58,118},{-46,130}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-60,88},{-48,100}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={-33,-158})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={20,-162})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-10,-174})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={6,-126})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={6,-172})));
        TABS.TDC.TDC
                tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN_ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{4,32},{28,52}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VN(
          t=3250,
          QNom=2500,
          VZones=66.29)
          annotation (Placement(transformation(extent={{-8,-28},{32,-8}})));
        TABS.BaseClasses.Switch_3 switch_VN_Tra annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=0,
              origin={-141,109})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_N(y=2.5365*((273.15 + 22 + 2.5
              *((TRM.TRm - 273.15) - 10)/5) - sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-206,96},{-192,112}})));
        TABS.BaseClasses.Switch_3 switch_VN_inf annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=0,
              origin={-129,85})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_N(y=(1012*66.29*1.204*0.5/3600
              /20*((273.15 + 22 + 2.5*((TRM.TRm - 273.15) - 10)/5) - sim.Te)))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-190,76},{-174,90}})));
        TABS.BaseClasses.Switch_3 switch_VN_vent annotation (Placement(transformation(
              extent={{-7,-7},{7,7}},
              rotation=0,
              origin={-127,57})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_N(y=0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-182,44},{-172,60}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-42,42})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-124,-4},{-104,16}})));
        TABS.BaseClasses.Switch_3 switch_VN_mvent
                                                 annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=-90,
              origin={-37,69})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm1
          annotation (Placement(transformation(extent={{-5,-6},{5,6}},
              rotation=0,
              origin={-73,64})));
         Modelica.Blocks.Sources.RealExpression TSu(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-24,86})));
         Modelica.Blocks.Sources.RealExpression TWi(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-42,90})));
         Modelica.Blocks.Sources.RealExpression TN(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-32,98})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-114,-68},{-94,-48}})));
        TABS.BaseClasses.Switch_3 switch_VS_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=180,
              origin={-145,-31})));
         Modelica.Blocks.Sources.RealExpression TSu1(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-174,-34})));
         Modelica.Blocks.Sources.RealExpression TN1(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-184,-20})));
         Modelica.Blocks.Sources.RealExpression TWi1(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-178,-8})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VS(
          t=580,
          QNom=2500,
          VZones=66.29)
          annotation (Placement(transformation(extent={{-40,-82},{0,-62}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_OS(
          t=1185,
          QNom=2500,
          VZones=43.2)
          annotation (Placement(transformation(extent={{118,-78},{158,-58}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{20,-56},{40,-36}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={94,-42})));
        TABS.BaseClasses.Switch_3 switch_OS_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=90,
              origin={119,-23})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm2
          annotation (Placement(transformation(extent={{5,-6},{-5,6}},
              rotation=0,
              origin={157,-22})));
         Modelica.Blocks.Sources.RealExpression TWi2(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={134,-4})));
         Modelica.Blocks.Sources.RealExpression TN2(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={122,-4})));
         Modelica.Blocks.Sources.RealExpression TSu2(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={108,-2})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_ON(
          t=900,
          QNom=2500,
          VZones=43.2)
          annotation (Placement(transformation(extent={{110,28},{150,48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={76,56})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{24,4},{44,24}})));
        TABS.BaseClasses.Switch_3 switch_ON_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=90,
              origin={79,85})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm3
          annotation (Placement(transformation(extent={{5,-6},{-5,6}},
              rotation=0,
              origin={117,86})));
         Modelica.Blocks.Sources.RealExpression TWi3(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={94,104})));
         Modelica.Blocks.Sources.RealExpression TN3(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={82,104})));
         Modelica.Blocks.Sources.RealExpression TSu3(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={68,106})));
        TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCON.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{122,54},{146,74}})));
        TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCOS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{132,-52},{156,-32}})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-70,-96},{-94,-76}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-25.2,9.8},{-19,9.8},{-19,
                16}},      color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-41,-44},{-40,-44},{-40,
                -46.2},{-51.2,-46.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-42.28,8.4},{-42.28,2.2},{-42,2.2},{-42,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-29.4,8.4},{-36.7,8.4},{-36.7,-9.8},{-55.44,-9.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-76.4,-43.4},{-76.4,-26.7},{-32.48,-26.7},{-32.48,-13.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-81.44,-65.8},{-60.72,-65.8},{-60.72,-47.6},{-55.4,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-68.28,-47.6},{-68.28,-52},{-68,-52},{-68,-64.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{74,0.8},{73.72,0.8},{73.72,21.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{63.6,-53.6},{63.6,-15.5},{83.52,-15.5},{83.52,-5.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{71.72,-58.4},{72,-58.4},{72,-77.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-123,146},{-77.5,146},
                {-77.5,149.36},{-66,149.36}},   color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-123,132},{-78,132},
                {-78,147.68},{-66,147.68}},   color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-123,146},{-78,146},
                {-78,127.36},{-58,127.36}},  color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-123,132},{-78,132},
                {-78,125.68},{-58,125.68}},color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-183.3,94},{
                -102,94},{-102,124},{-58,124}},
                                              color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-153.3,79},{
                -88.65,79},{-88.65,122.32},{-58,122.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-177.5,60},
                {-96,60},{-96,120.64},{-58,120.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-123,146},{-76,146},
                {-76,97.36},{-60,97.36}},  color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-123,132},{-123,127},
                {-60,127},{-60,95.68}},color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-181.4,114},
                {-102,114},{-102,94},{-60,94}},
                                              color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-147.2,89},{
                -85.6,89},{-85.6,92.32},{-60,92.32}},   color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-167.4,38},
                {-96,38},{-96,90.64},{-60,90.64}},   color={0,0,127}));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-33,-152.7},{-33,-129.35},
                {-6,-129.35},{-6,-126}},
                                      color={0,0,127}));
        connect(TSetW.y, switch_VN_T.a) annotation (Line(points={{-10,-163},{-6,-163},
                {-6,-138},{-2,-138}},
                                color={0,0,127}));
        connect(TsetS.y, switch_VN_T.c) annotation (Line(points={{20,-151},{18,-151},{
                18,-138},{14,-138}},
                                color={0,0,127}));
        connect(TSetW1.y, switch_VN_T.b)
          annotation (Line(points={{6,-161},{6,-138}},
                                                     color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-26.6,2.8},{-26.6,35.4},
                {2,35.4},{2,42}},      color={0,0,127}));
        connect(heat_Cool_Demand_scalar_VN.TSet, switch_VN_T.y) annotation (Line(
              points={{12,-28.2},{14,-28.2},{14,-115},{6,-115}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar_VN.TSensor) annotation (Line(
              points={{-26.6,2.8},{-26.6,2.4},{-8.4,2.4},{-8.4,-24}},   color={0,0,127}));
        connect(heat_Cool_Demand_scalar_VN.heatPort, VN.gainEmb[1]) annotation (Line(
              points={{-8,-20},{-20,-20},{-20,-12.6},{-28,-12.6}},  color={191,0,0}));
        connect(Trm.TRm, switch_VN_Tra.u) annotation (Line(points={{-191.7,68},{-166,68},
                {-166,100.6},{-141,100.6}}, color={0,0,127}));
        connect(Qtra_VN_S.y, switch_VN_Tra.c) annotation (Line(points={{-181.4,114},{-164,
                114},{-164,114.6},{-149.4,114.6}}, color={0,0,127}));
        connect(Qtra_VN_W.y, switch_VN_Tra.a) annotation (Line(points={{-183.3,94},{-164,
                94},{-164,103.4},{-149.4,103.4}}, color={0,0,127}));
        connect(Qtra_VN_N.y, switch_VN_Tra.b) annotation (Line(points={{-191.3,104},{-184,
                104},{-184,109},{-149.4,109}}, color={0,0,127}));
        connect(switch_VN_Tra.y, Qdemand_VN.u[3]) annotation (Line(points={{-133.3,109},
                {-99.65,109},{-99.65,146},{-66,146}}, color={0,0,127}));
        connect(Trm.TRm, switch_VN_inf.u) annotation (Line(points={{-191.7,68},{-160,68},
                {-160,76.6},{-129,76.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, switch_VN_inf.c) annotation (Line(points={{-147.2,89},{-142.6,
                89},{-142.6,90.6},{-137.4,90.6}}, color={0,0,127}));
        connect(Qinf_VN_W.y, switch_VN_inf.a) annotation (Line(points={{-153.3,79},{-145.65,
                79},{-145.65,79.4},{-137.4,79.4}}, color={0,0,127}));
        connect(Qinf_VN_N.y, switch_VN_inf.b) annotation (Line(points={{-173.2,83},{-154.6,
                83},{-154.6,85},{-137.4,85}}, color={0,0,127}));
        connect(switch_VN_inf.y, Qdemand_VN.u[4]) annotation (Line(points={{-121.3,85},
                {-121.3,115.5},{-66,115.5},{-66,144.32}}, color={0,0,127}));
        connect(switch_VN_inf.u, switch_VN_vent.u) annotation (Line(points={{-129,76.6},
                {-129,65.4},{-127,65.4}}, color={0,0,127}));
        connect(QVent_VN_S.y, switch_VN_vent.c) annotation (Line(points={{-167.4,38},{
                -152,38},{-152,51.4},{-135.4,51.4}}, color={0,0,127}));
        connect(QVent_VN_W.y, switch_VN_vent.a) annotation (Line(points={{-177.5,60},{
                -157.45,60},{-157.45,62.6},{-135.4,62.6}}, color={0,0,127}));
        connect(QVent_VN_N.y, switch_VN_vent.b) annotation (Line(points={{-171.5,52},{
                -154,52},{-154,57},{-135.4,57}}, color={0,0,127}));
        connect(switch_VN_vent.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,57},
                {-119.3,101.5},{-66,101.5},{-66,142.64}}, color={0,0,127}));
        connect(msource_VN.ports[1], VN.port_a) annotation (Line(points={{-42,32},{-42,
                23},{-39.2,23},{-39.2,14}}, color={0,127,255}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-44.8,14},{-104,
                14},{-104,6}}, color={0,127,255}));
        connect(Trm1.TRm, switch_VN_mvent.u) annotation (Line(points={{-67.7,64},{-66,
                64},{-66,69},{-45.4,69}}, color={0,0,127}));
        connect(switch_VN_mvent.y, msource_VN.T_in) annotation (Line(points={{-37,61.3},
                {-38.5,61.3},{-38.5,54},{-38,54}}, color={0,0,127}));
        connect(switch_VN_mvent.c, TSu.y) annotation (Line(points={{-31.4,77.4},{-26.7,
                77.4},{-26.7,79.4},{-24,79.4}}, color={0,0,127}));
        connect(TWi.y, switch_VN_mvent.a) annotation (Line(points={{-42,83.4},{-42,77.4},
                {-42.6,77.4}}, color={0,0,127}));
        connect(TN.y, switch_VN_mvent.b) annotation (Line(points={{-32,91.4},{-36,91.4},
                {-36,77.4},{-37,77.4}}, color={0,0,127}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},{-64,
                -34},{-64,-42},{-65.2,-42}}, color={0,127,255}));
        connect(VS.port_b, bou_VS.ports[1]) annotation (Line(points={{-70.8,-42},{-84,
                -42},{-84,-58},{-94,-58}}, color={0,127,255}));
        connect(switch_VS_mvent.y, msource_VS.T_in) annotation (Line(points={{-137.3,-31},
                {-123.65,-31},{-123.65,-30},{-112,-30}}, color={0,0,127}));
        connect(Trm.TRm, switch_VS_mvent.u) annotation (Line(points={{-191.7,68},{-144,
                68},{-144,-22.6},{-145,-22.6}}, color={0,0,127}));
        connect(TSu1.y, switch_VS_mvent.c) annotation (Line(points={{-167.4,-34},{-160.7,
                -34},{-160.7,-36.6},{-153.4,-36.6}}, color={0,0,127}));
        connect(TWi1.y, switch_VS_mvent.a) annotation (Line(points={{-171.4,-8},{-162,
                -8},{-162,-25.4},{-153.4,-25.4}}, color={0,0,127}));
        connect(TN1.y, switch_VS_mvent.b) annotation (Line(points={{-177.4,-20},{-166,
                -20},{-166,-31},{-153.4,-31}}, color={0,0,127}));
        connect(VS.gainEmb[1], heat_Cool_Demand_scalar_VS.heatPort) annotation (Line(
              points={{-54,-68.6},{-48,-68.6},{-48,-74},{-40,-74}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_scalar_VS.TSensor) annotation (Line(
              points={{-52.6,-53.2},{-52.6,-64.6},{-40.4,-64.6},{-40.4,-78}}, color={0,
                0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VS.TSet) annotation (Line(
              points={{6,-115},{-16,-115},{-16,-82.2},{-20,-82.2}}, color={0,0,127}));
        connect(OS.TSensor, heat_Cool_Demand_scalar_OS.TSensor) annotation (Line(
              points={{87.4,-64.8},{101.7,-64.8},{101.7,-74},{117.6,-74}}, color={0,0,
                127}));
        connect(heat_Cool_Demand_scalar_OS.heatPort, OS.gainEmb[1]) annotation (Line(
              points={{118,-70},{102,-70},{102,-82.4},{86,-82.4}}, color={191,0,0}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_OS.TSet) annotation (Line(
              points={{6,-115},{138,-115},{138,-78.2}}, color={0,0,127}));
        connect(msource_OS.ports[1], OS.port_a)
          annotation (Line(points={{94,-52},{74.8,-52}}, color={0,127,255}));
        connect(OS.port_b, bou_OS.ports[1]) annotation (Line(points={{69.2,-52},{49.6,
                -52},{49.6,-46},{40,-46}}, color={0,127,255}));
        connect(Trm2.TRm, switch_OS_mvent.u) annotation (Line(points={{151.7,-22},{138,
                -22},{138,-23},{127.4,-23}}, color={0,0,127}));
        connect(TWi2.y, switch_OS_mvent.a) annotation (Line(points={{134,-10.6},{130,-10.6},
                {130,-14.6},{124.6,-14.6}}, color={0,0,127}));
        connect(TN2.y, switch_OS_mvent.b) annotation (Line(points={{122,-10.6},{122,-14.6},
                {119,-14.6}}, color={0,0,127}));
        connect(TSu2.y, switch_OS_mvent.c) annotation (Line(points={{108,-8.6},{110,-8.6},
                {110,-14.6},{113.4,-14.6}}, color={0,0,127}));
        connect(switch_OS_mvent.y, msource_OS.T_in) annotation (Line(points={{119,-30.7},
                {104.5,-30.7},{104.5,-30},{98,-30}}, color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_ON.TSet) annotation (Line(
              points={{6,-115},{174,-115},{174,27.8},{130,27.8}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_scalar_ON.TSensor) annotation (Line(
              points={{89.4,14.4},{99.7,14.4},{99.7,32},{109.6,32}}, color={0,0,127}));
        connect(heat_Cool_Demand_scalar_ON.heatPort, ON.gainEmb[1]) annotation (Line(
              points={{110,36},{100,36},{100,-4.3},{88,-4.3}}, color={191,0,0}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{76,46},{76,38},
                {76,28},{76.8,28}}, color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{44,14},{57,14},{
                57,28},{71.2,28}}, color={0,127,255}));
        connect(Trm3.TRm, switch_ON_mvent.u) annotation (Line(points={{111.7,86},{98,86},
                {98,85},{87.4,85}}, color={0,0,127}));
        connect(TWi3.y, switch_ON_mvent.a) annotation (Line(points={{94,97.4},{90,97.4},
                {90,93.4},{84.6,93.4}}, color={0,0,127}));
        connect(TN3.y, switch_ON_mvent.b)
          annotation (Line(points={{82,97.4},{82,93.4},{79,93.4}}, color={0,0,127}));
        connect(TSu3.y, switch_ON_mvent.c) annotation (Line(points={{68,99.4},{70,99.4},
                {70,93.4},{73.4,93.4}}, color={0,0,127}));
        connect(switch_ON_mvent.y, msource_ON.T_in) annotation (Line(points={{79,77.3},
                {79,72.65},{80,72.65},{80,68}}, color={0,0,127}));
        connect(OS.TSensor, tDCOS.a) annotation (Line(points={{87.4,-64.8},{107.7,-64.8},
                {107.7,-42},{130,-42}}, color={0,0,127}));
        connect(ON.TSensor, tDCON.a) annotation (Line(points={{89.4,14.4},{89.4,40.2},
                {120,40.2},{120,64}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-52.6,-53.2},{-52.6,-85.6},
                {-68,-85.6},{-68,-86}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-180},
                  {180,160}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-180},{180,160}})),
          experiment(StopTime=31536000));
      end HC_demand_TABS_25Kh;

      package BaseClasses
        model Heat_Cool_Demand_scalar
          "Ideal heating and cooling, no DHW, with radiators"
          extends BaseClass_scalar;
          extends HeatingSystem_Accumulator_scalar;

        equation

             QHeatZone = IDEAS.Utilities.Math.Functions.smoothMin(x1=C*(TSet - TSensor)/t, x2=QNom,deltaX=1);

             heatPort.Q_flow = -QHeatZone;

         annotation (Documentation(info="<html>
<p><b>Description</b> </p>
<p>Ideal heating (no hydraulics) but with limited power <i>QNom</i> per zone. There are no radiators. This model assumes a thermal inertia of each zone and computes the heat flux that would be required to heat up the zone to the set point within a time <i>t</i>. This heat flux is limited to <i>QNom</i> and splitted in a radiative and a convective part which are imposed on the heatPorts <i>heatPortRad</i> and <i>heatPortCon</i> respectively. A COP can be passed in order to compute the electricity consumption of the heating.</p>
<p><u>Note</u>: the responsiveness of the system is influenced by the time constant <i>t</i>.  For small values of<i> t</i>, this system is close to ideal, but for larger values, there may still be deviations between the zone temperature and it&apos;s set point. </p>
<p><h4>Assumptions and limitations </h4></p>
<p><ol>
<li>No inertia; responsiveness modelled by time constant <i>t</i> for reaching the temperature set point. </li>
<li>Limited output power according to <i>QNom[nZones]</i></li>
<li>Heat emitted through <i>heatPortRad</i> and <i>heatPortCon</i> </li>
</ol></p>
<p><h4>Model use</h4></p>
<p><ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> </li>
<li>Connect <i>plugLoad </i>to an inhome grid. A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required. </li>
</ol></p>
<p><h4>Validation </h4></p>
<p>No validation performed.</p>
<p><h4>Example </h4></p>
<p>An example of the use of this model can be found in<a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating\"> IDEAS.Thermal.HeatingSystems.Examples.IdealRadiatorHeating</a>.</p>
</html>",         revisions="<html>
<p><ul>
<li>2013 June, Roel De Coninck: reworking interface and documentation</li>
<li>2011, Roel De Coninck: first version</li>
</ul></p>
</html>"),         Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                    -100},{200,100}}),
                                 graphics),
            Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,100}}),
                graphics));
        end Heat_Cool_Demand_scalar;

        partial model HeatingSystem_Accumulator_scalar
          "Partial heating/cooling system"
           replaceable package Medium=IDEAS.Media.Water;

          // --- thermal
        //  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPortCon
         //   "Nodes for convective heat gains"
          Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPort
            "Heat port where ideally calculated heat is instantly supplied"
            annotation (Placement(transformation(extent={{-210,-30},{-190,-10}})));
         // Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b heatPortEmb
         //   "Construction nodes for heat gains by embedded layers"

          // --- Sensor
          Modelica.Blocks.Interfaces.RealInput TSensor(
            final quantity="ThermodynamicTemperature",
            unit="K",
            displayUnit="degC",
            min=0) "Sensor temperature" annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=180,
                origin={-204,-60})));

          Modelica.Blocks.Interfaces.RealInput TSet(
            final quantity="ThermodynamicTemperature",
            unit="K",
            displayUnit="degC",
            min=0) "Setpoint temperature for the zones" annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=90,
                origin={20,-104}), iconTransformation(
                extent={{-10,-10},{10,10}},
                rotation=90,
                origin={0,-102})));

            annotation (Placement(transformation(extent={{-210,10},{-190,30}})),
                        Placement(transformation(extent={{-210,50},{-190,70}})),
            Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{200,
                    100}}), graphics={
                Rectangle(
                  extent={{-200,100},{200,-100}},
                  fillColor={215,215,215},
                  fillPattern=FillPattern.Solid,
                  lineColor={191,0,0}),
                Line(
                  points={{50,-20},{30,0}},
                  color={0,0,127}),
                Line(
                  points={{30,0},{0,-30}},
                  color={0,0,127},
                  pattern=LinePattern.Dash),
                Line(
                  points={{30,0},{-8,0}},
                  color={191,0,0},
                  thickness=0.5),
                Line(
                  points={{200,100},{200,-100}},
                  color={85,170,255},
                  smooth=Smooth.None),
                Line(
                  points={{-28,-20},{-128,-20}},
                  color={191,0,0},
                  thickness=0.5),
                Line(
                  points={{-28,20},{-128,20}},
                  color={191,0,0},
                  thickness=0.5),
                Line(
                  points={{-8,0},{-28,-20}},
                  color={191,0,0},
                  thickness=0.5),
                Line(
                  points={{-8,0},{-28,20}},
                  color={191,0,0},
                  thickness=0.5),
                Polygon(
                  points={{-128,0},{-128,40},{-158,20},{-128,0}},
                  lineColor={191,0,0},
                  fillColor={191,0,0},
                  fillPattern=FillPattern.Solid),
                Polygon(
                  points={{-128,-40},{-128,0},{-158,-20},{-128,-40}},
                  lineColor={191,0,0},
                  fillColor={191,0,0},
                  fillPattern=FillPattern.Solid),
                Rectangle(
                  extent={{-158,40},{-178,-40}},
                  lineColor={191,0,0},
                  fillColor={191,0,0},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{200,0},{30,0}},
                  color={85,170,255},
                  smooth=Smooth.None),
                Line(points={{30,70},{30,40}}),
                Line(points={{52.9,32.8},{70.2,57.3}}),
                Line(points={{7.1,32.8},{-10.2,57.3}}),
                Line(points={{67.6,13.7},{95.8,23.9}}),
                Ellipse(
                  lineColor={64,64,64},
                  fillColor={215,215,215},
                  extent={{18,-12},{42,12}},
                  fillPattern=FillPattern.Solid),
                Polygon(
                  origin={30,0},
                  rotation=-17.5,
                  fillColor={64,64,64},
                  pattern=LinePattern.None,
                  fillPattern=FillPattern.Solid,
                  points={{-5.0,0.0},{-2.0,60.0},{0.0,65.0},{2.0,60.0},{5.0,0.0}}),
                Ellipse(
                  fillColor={64,64,64},
                  pattern=LinePattern.None,
                  fillPattern=FillPattern.Solid,
                  extent={{23,-7},{37,7}}),
                Line(
                  points={{60,-30},{50,-20}},
                  color={0,0,127},
                  pattern=LinePattern.Dash),
                Line(
                  points={{0,-100},{0,-30}},
                  color={0,0,127},
                  smooth=Smooth.None,
                  pattern=LinePattern.Dash),
                Line(
                  points={{60,-100},{60,-30}},
                  color={0,0,127},
                  smooth=Smooth.None,
                  pattern=LinePattern.Dash)}),
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{
                    200,100}})),
            Documentation(info="<html>
<p><b>Description</b> </p>
<p>Interface model for a complete multi-zone heating system (with our without domestic hot water and solar system).</p>
<p>This model defines the ports used to link a heating system with a building, and the basic parameters that most heating systems will need to have. The model is modular as a function of the number of zones <i>nZones. </i></p>
<p>Two sets of heatPorts are defined:</p>
<ol>
<li><i>heatPortCon[nZones]</i> and <i>heatPortRad[nZones]</i> for convective respectively radiative heat transfer to the building. </li>
<li><i>heatPortEmb[nZones]</i> for heat transfer to TABS elements in the building. </li>
</ol>
<p>The model also defines <i>TSensor[nZones]</i> and <i>TSet[nZones]</i> for the control, and a nominal power <i>QNom[nZones].</i></p>
<p>There is also an input for the DHW flow rate, <i>mDHW60C</i>, but this can be unconnected if the system only includes heating and no DHW.</p>
<h4>Assumptions and limitations </h4>
<ol>
<li>See the different extensions of this model in <a href=\"modelica://IDEAS.Thermal.HeatingSystems\">IDEAS.Thermal.HeatingSystems</a></li>
</ol>
<h4>Model use</h4>
<ol>
<li>Connect the heating system to the corresponding heatPorts of a <a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.Structure\">structure</a>. </li>
<li>Connect <i>TSet</i> and <i>TSensor</i> and <i>plugLoad. </i></li>
<li>Connect <i>plugLoad </i> to an inhome grid.  A<a href=\"modelica://IDEAS.Templates.Interfaces.BaseClasses.CausalInhomeFeeder\"> dummy inhome grid like this</a> has to be used if no inhome grid is to be modelled. </li>
<li>Set all parameters that are required, depending on which implementation of this interface is used. </li>
</ol>
<h4>Validation </h4>
<p>No validation performed.</p>
<h4>Example </h4>
<p>See the <a href=\"modelica://IDEAS.Thermal.HeatingSystems.Examples\">heating system examples</a>. </p>
</html>",         revisions="<html>
<ul>
<li>
June 5, 2018 by Filip Jorissen:<br/>
Cleaned up implementation for
<a href=\"https://github.com/open-ideas/IDEAS/issues/821\">#821</a>.
</li>
</ul>
</html>"));
        end HeatingSystem_Accumulator_scalar;

        partial model BaseClass_scalar
          "Ideal, non-hydraulic heating with limited power"
          parameter Real fractionRad=0.3
            "Fraction of radiative to total power";
          parameter Modelica.SIunits.Time t=10 "Time needed to reach temperature setpoint";
          parameter Modelica.SIunits.Power QNom(each min=0) = 5000
            "Nominal power, can be seen as the max power of the emission system per zone";
          parameter Real VZones = 50
            "Conditioned volumes of the zones";
          final parameter Modelica.SIunits.HeatCapacity C=1012*1.204*VZones*8
            "Heat capacity of the conditioned zones (air capacity with a correction factor of 8)";
           Modelica.SIunits.Power QHeatZone;
        end BaseClass_scalar;
      end BaseClasses;

      model Test__test_TABS_Qidealcontrol "Qcontrol does not work so well"
        import Occupancy;
        import Vaartstraat;
         replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-274,122},{-258,138}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-246,120},{-230,136}})));

        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar(
          t=1800,
          QNom=1100,
          VZones=66.29)
          annotation (Placement(transformation(extent={{56,76},{96,96}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={-25,-116})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={28,-120})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-2,-132})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={14,-84})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={14,-130})));
        TABS.TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVNideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{52,114},{76,134}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-26,92},{2,120}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,112},{12,132}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-34,38},{-6,66}})));
         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,52},{12,72}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS1(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-128,28},{-100,56}})));
         Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,42},{-82,62}})));
         Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,102},{-82,122}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN1(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-92,82},{-120,110}})));
        TABS.TDC.TDC
                tDCVN1(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN1ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-118,122},{-94,142}})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.8506*0.0077)
                                                                 annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-185,92})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.43355*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-203,94})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.0867*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-193,102})));
        TABS.BaseClasses.Switch_3 switch_VN_m_flow annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-192,60})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
                                                                        annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=0,
              origin={-161,60})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          use_T_in=true,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-188,6})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-172,-90})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-172,-128})));
        Modelica.Blocks.Sources.RealExpression Qsup(y=TABSVN1.heatPortEmb[1].Q_flow)
          annotation (Placement(transformation(extent={{-264,-12},{-244,8}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-182,-30})));
        IDEAS.Controls.Continuous.LimPID conPID(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=10,
          yMax=273.15 + 25,
          yMin=273.15 + 20,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-244,22},{-224,42}})));
        Modelica.Blocks.Sources.RealExpression Qideal(y=heat_Cool_Demand_scalar.heatPort.Q_flow)
          annotation (Placement(transformation(extent={{-278,20},{-258,40}})));
      equation
        connect(TRM.TRm,switch_VN_T. u) annotation (Line(points={{-25,-110.7},{-25,-85.35},
                {2,-85.35},{2,-84}},  color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{-2,-121},{2,-121},{2,
                -96},{6,-96}},  color={0,0,127}));
        connect(TsetS1.y, switch_VN_T.c) annotation (Line(points={{28,-109},{26,-109},
                {26,-96},{22,-96}}, color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{14,-119},{14,-96}},
                                                     color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar.TSet)
          annotation (Line(points={{14,-73},{76,-73},{76,75.8}}, color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-12.28,114.4},{-12.28,108.2},{-12,108.2},{-12,97.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{0.6,114.4},{-6.7,114.4},{-6.7,96.2},{-25.44,96.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.uLig,light41. y) annotation (Line(points={{4.8,115.8},{11,115.8},{11,
                122}},     color={0,0,127}));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-28.4,64.6},{-28.4,79.3},{-2.48,79.3},{-2.48,92.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-20.28,60.4},{-20.28,54.2},{-20,54.2},{-20,43.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-33.44,42.2},{-24.72,42.2},{-24.72,60.4},{-7.4,60.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light56.y,VS. uLig) annotation (Line(points={{11,62},{-10,62},{-10,61.8},
                {-3.2,61.8}},              color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{3.4,108.8},{27.7,108.8},
                {27.7,124},{50,124}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar.TSensor) annotation (Line(points={
                {3.4,108.8},{30.7,108.8},{30.7,80},{55.6,80}}, color={0,0,127}));
        connect(VS1.proBusCei[1], VS1.proBusFlo[1]) annotation (Line(
            points={{-114.28,50.4},{-114.28,44.2},{-114,44.2},{-114,33.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS1.proBusD[1], VS1.proBusB[1]) annotation (Line(
            points={{-127.44,32.2},{-118.72,32.2},{-118.72,50.4},{-101.4,50.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light1.y, VS1.uLig) annotation (Line(points={{-83,52},{-104,52},{-104,
                51.8},{-97.2,51.8}}, color={0,0,127}));
        connect(VS1.proBusA[1], VN1.proBusC[1]) annotation (Line(
            points={{-122.4,54.6},{-122.4,69.3},{-115.52,69.3},{-115.52,82.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusCei[1], VN1.proBusFlo[1]) annotation (Line(
            points={{-105.72,104.4},{-105.72,98.2},{-106,98.2},{-106,87.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusB[1], VN1.proBusD[1]) annotation (Line(
            points={{-118.6,104.4},{-100.7,104.4},{-100.7,86.2},{-92.56,86.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.uLig, light2.y) annotation (Line(points={{-122.8,105.8},{-83,105.8},
                {-83,112}}, color={0,0,127}));
        connect(VN1.TSensor, tDCVN1.a) annotation (Line(points={{-121.4,98.8},{-121.4,
                111.4},{-120,111.4},{-120,132}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m_flow.c) annotation (Line(points={{-203,88.5},{-203,
                79.25},{-200,79.25},{-200,72}}, color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m_flow.b) annotation (Line(points={{-193,96.5},{-193,
                84.25},{-192,84.25},{-192,72}}, color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m_flow.a) annotation (Line(points={{-185,86.5},{-185,
                79.25},{-184,79.25},{-184,72}}, color={0,0,127}));
        connect(switch_VN_m_flow.u, TRM1.TRm)
          annotation (Line(points={{-180,60},{-166.3,60}}, color={0,0,127}));
        connect(switch_VN_m_flow.y, boundary.m_flow_in)
          annotation (Line(points={{-192,49},{-180,49},{-180,18}}, color={0,0,127}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-172,-100},{-172,-118}}, color={0,127,255}));
        connect(TABSVN1.port_a, boundary.ports[1]) annotation (Line(points={{-182,-20},
                {-186,-20},{-186,-4},{-188,-4}}, color={0,127,255}));
        connect(TABSVN1.port_b, Tout_VN.port_a) annotation (Line(points={{-182,-40},{-178,
                -40},{-178,-80},{-172,-80}}, color={0,127,255}));
        connect(VN1.gainEmb[1], TABSVN1.heatPortEmb[1]) annotation (Line(points={{-120,
                83.4},{-135,83.4},{-135,-30},{-172,-30}}, color={191,0,0}));
        connect(Qsup.y, conPID.u_m) annotation (Line(points={{-243,-2},{-238,-2},{-238,
                20},{-234,20}}, color={0,0,127}));
        connect(boundary.T_in, conPID.y)
          annotation (Line(points={{-184,18},{-223,18},{-223,32}}, color={0,0,127}));
        connect(Qideal.y, conPID.u_s) annotation (Line(points={{-257,30},{-252,30},{-252,
                32},{-246,32}}, color={0,0,127}));
        connect(VN.gainEmb[1], heat_Cool_Demand_scalar.heatPort) annotation (Line(
              points={{2,93.4},{30,93.4},{30,84},{56,84}}, color={191,0,0}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},{100,140}})),
          experiment(StopTime=31536000));
      end Test__test_TABS_Qidealcontrol;

      model Test__test_TABS_Tfloorcontrol "Control the ideal Tfloor. Works perfectly if Tsupmin=15 °C, for Tsupmin= 17 °C it works okay, see later what is possible with borefield"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-274,122},{-258,138}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-246,120},{-230,136}})));

        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VN(
          t=1800,
          QNom=1100,
          VZones=66.29)
          annotation (Placement(transformation(extent={{56,76},{96,96}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={25,-116})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={78,-120})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={48,-132})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={64,-84})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={64,-130})));
        TABS.TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVNideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{52,114},{76,134}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-26,92},{2,120}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,112},{12,132}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-34,38},{-6,66}})));
         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,52},{12,72}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS1(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-122,16},{-94,44}})));
         Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,42},{-82,62}})));
         Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,102},{-82,122}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN1(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-92,82},{-120,110}})));
        TABS.TDC.TDC
                tDCVN1(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN1ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-118,122},{-94,142}})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.8506*0.0077)
                                                                 annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-193,124})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.43355*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-211,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.0867*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-201,134})));
        TABS.BaseClasses.Switch_3 switch_VN_m_flow annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-200,92})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
                                                                        annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=0,
              origin={-169,92})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          use_T_in=true,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-200,30})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-194,-38})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-194,-76})));
        Modelica.Blocks.Sources.RealExpression Tfloor_VN(y=TABSVN1.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-270,26},{-250,46}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-194,-8})));
        IDEAS.Controls.Continuous.LimPID PIDVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-242,58},{-222,78}})));
        Modelica.Blocks.Sources.RealExpression Qideal_VN(y=
              heat_Cool_Demand_scalar_VN.heatPort.T) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-258,94})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-82,26},{-66,40}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VS(
          t=1200,
          QNom=1100,
          VZones=66.29)
          annotation (Placement(transformation(extent={{22,10},{62,30}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.9783) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={-42,-22})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-44,6})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-46,34})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-46,-58})));
        TABS.BaseClasses.Switch_3 switch_VS_m annotation (Placement(
              transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={-20,-112})));
        Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)/2)
              *0.5)                                                 annotation (
            Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=90,
              origin={-23,-150})));
        Modelica.Blocks.Sources.RealExpression m_VS_H(y=1.5*0.0077)
                                                                annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=90,
              origin={-41,-150})));
        Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.9783) annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=90,
              origin={-5,-152})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM2
                                                                        annotation (
            Placement(transformation(
              extent={{-5,-6},{5,6}},
              rotation=0,
              origin={-57,-112})));
        IDEAS.Controls.Continuous.LimPID PIDVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-102,-96},{-82,-76}})));
        Modelica.Blocks.Sources.RealExpression Tfloor_VS(y=TABSVS1.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-126,-138},{-106,-118}})));
        Modelica.Blocks.Sources.RealExpression Qideal_VS(y=
              heat_Cool_Demand_scalar_VS.heatPort.T) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-126,-54})));
      equation
        connect(TRM.TRm,switch_VN_T. u) annotation (Line(points={{25,-110.7},{25,
                -85.35},{52,-85.35},{52,-84}},
                                      color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{48,-121},{52,
                -121},{52,-96},{56,-96}},
                                color={0,0,127}));
        connect(TsetS1.y, switch_VN_T.c) annotation (Line(points={{78,-109},{76,
                -109},{76,-96},{72,-96}},
                                    color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{64,-119},{64,-96}},
                                                     color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VN.TSet) annotation (Line(
              points={{64,-73},{76,-73},{76,75.8}}, color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-12.28,114.4},{-12.28,108.2},{-12,108.2},{-12,97.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{0.6,114.4},{-6.7,114.4},{-6.7,96.2},{-25.44,96.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.uLig,light41. y) annotation (Line(points={{4.8,115.8},{11,115.8},{11,
                122}},     color={0,0,127}));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-28.4,64.6},{-28.4,79.3},{-2.48,79.3},{-2.48,92.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-20.28,60.4},{-20.28,54.2},{-20,54.2},{-20,43.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-33.44,42.2},{-24.72,42.2},{-24.72,60.4},{-7.4,60.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light56.y,VS. uLig) annotation (Line(points={{11,62},{-10,62},{-10,61.8},
                {-3.2,61.8}},              color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{3.4,108.8},{27.7,108.8},
                {27.7,124},{50,124}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar_VN.TSensor) annotation (Line(
              points={{3.4,108.8},{30.7,108.8},{30.7,80},{55.6,80}}, color={0,0,
                127}));
        connect(VS1.proBusCei[1], VS1.proBusFlo[1]) annotation (Line(
            points={{-108.28,38.4},{-108.28,44.2},{-108,44.2},{-108,21.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS1.proBusD[1], VS1.proBusB[1]) annotation (Line(
            points={{-121.44,20.2},{-118.72,20.2},{-118.72,38.4},{-95.4,38.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light1.y, VS1.uLig) annotation (Line(points={{-83,52},{-104,52},{
                -104,39.8},{-91.2,39.8}},
                                     color={0,0,127}));
        connect(VS1.proBusA[1], VN1.proBusC[1]) annotation (Line(
            points={{-116.4,42.6},{-116.4,69.3},{-115.52,69.3},{-115.52,82.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusCei[1], VN1.proBusFlo[1]) annotation (Line(
            points={{-105.72,104.4},{-105.72,98.2},{-106,98.2},{-106,87.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusB[1], VN1.proBusD[1]) annotation (Line(
            points={{-118.6,104.4},{-100.7,104.4},{-100.7,86.2},{-92.56,86.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.uLig, light2.y) annotation (Line(points={{-122.8,105.8},{-83,105.8},
                {-83,112}}, color={0,0,127}));
        connect(VN1.TSensor, tDCVN1.a) annotation (Line(points={{-121.4,98.8},{-121.4,
                111.4},{-120,111.4},{-120,132}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m_flow.c) annotation (Line(points={{-211,
                120.5},{-211,111.25},{-208,111.25},{-208,104}},
                                                color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m_flow.b) annotation (Line(points={{-201,
                128.5},{-201,116.25},{-200,116.25},{-200,104}},
                                                color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m_flow.a) annotation (Line(points={{-193,
                118.5},{-193,111.25},{-192,111.25},{-192,104}},
                                                color={0,0,127}));
        connect(switch_VN_m_flow.u, TRM1.TRm)
          annotation (Line(points={{-188,92},{-174.3,92}}, color={0,0,127}));
        connect(switch_VN_m_flow.y, boundary.m_flow_in)
          annotation (Line(points={{-200,81},{-192,81},{-192,42}}, color={0,0,127}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-194,-48},{-194,-66}},   color={0,127,255}));
        connect(TABSVN1.port_a, boundary.ports[1]) annotation (Line(points={{-194,2},
                {-200,2},{-200,20}},             color={0,127,255}));
        connect(TABSVN1.port_b, Tout_VN.port_a) annotation (Line(points={{-194,
                -18},{-194,-28}},            color={0,127,255}));
        connect(VN1.gainEmb[1], TABSVN1.heatPortEmb[1]) annotation (Line(points={{-120,
                83.4},{-145,83.4},{-145,-8},{-184,-8}},   color={191,0,0}));
        connect(Tfloor_VN.y, PIDVN.u_m) annotation (Line(points={{-249,36},{-248,
                36},{-248,56},{-232,56}}, color={0,0,127}));
        connect(boundary.T_in, PIDVN.y) annotation (Line(points={{-196,42},{-221,
                42},{-221,68}}, color={0,0,127}));
        connect(Qideal_VN.y, PIDVN.u_s) annotation (Line(points={{-258,83},{-262,
                83},{-262,68},{-244,68}}, color={0,0,127}));
        connect(VN.gainEmb[1], heat_Cool_Demand_scalar_VN.heatPort) annotation (
            Line(points={{2,93.4},{30,93.4},{30,84},{56,84}}, color={191,0,0}));
        connect(VS1.TSensor, tDCVS.a) annotation (Line(points={{-92.6,32.8},{
                -81.3,32.8},{-81.3,33},{-83.3333,33}}, color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VS.TSet) annotation (Line(
              points={{64,-73},{38,-73},{38,9.8},{42,9.8}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS1.port_a) annotation (Line(points={{-46,-48},
                {-46,-32},{-42,-32}}, color={0,127,255}));
        connect(TABSVS1.port_b, Tout_VS.port_a) annotation (Line(points={{-42,-12},
                {-42,-8},{-44,-8},{-44,-4}}, color={0,127,255}));
        connect(Tout_VS.port_b,bou_VS. ports[1])
          annotation (Line(points={{-44,16},{-46,16},{-46,24}},    color={0,127,255}));
        connect(heat_Cool_Demand_scalar_VS.heatPort, VS.gainEmb[1]) annotation (
            Line(points={{22,18},{8,18},{8,39.4},{-6,39.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_scalar_VS.TSensor) annotation (Line(
              points={{-4.6,54.8},{-4.6,56.4},{21.6,56.4},{21.6,14}}, color={0,0,
                127}));
        connect(TABSVS1.heatPortEmb[1], VS1.gainEmb[1]) annotation (Line(points={
                {-52,-22},{-52,-21},{-94,-21},{-94,17.4}}, color={191,0,0}));
        connect(m_VS_H.y, switch_VS_m.a) annotation (Line(points={{-41,-144.5},{
                -41,-136.25},{-28,-136.25},{-28,-124}}, color={0,0,127}));
        connect(m_VS_C.y, switch_VS_m.c) annotation (Line(points={{-5,-146.5},{-5,
                -134.25},{-12,-134.25},{-12,-124}}, color={0,0,127}));
        connect(m_VN_N1.y, switch_VS_m.b) annotation (Line(points={{-23,-144.5},{
                -23,-134.25},{-20,-134.25},{-20,-124}}, color={0,0,127}));
        connect(switch_VS_m.y, m_VS.m_flow_in) annotation (Line(points={{-20,-101},
                {-20,-70},{-38,-70}}, color={0,0,127}));
        connect(TRM2.TRm, switch_VS_m.u)
          annotation (Line(points={{-51.7,-112},{-32,-112}}, color={0,0,127}));
        connect(PIDVS.y, m_VS.T_in) annotation (Line(points={{-81,-86},{-62,-86},
                {-62,-70},{-42,-70}}, color={0,0,127}));
        connect(Tfloor_VS.y, PIDVS.u_m) annotation (Line(points={{-105,-128},{-92,
                -128},{-92,-98}}, color={0,0,127}));
        connect(Qideal_VS.y, PIDVS.u_s) annotation (Line(points={{-126,-65},{-126,
                -86},{-104,-86}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},{100,140}})),
          experiment(StopTime=31536000));
      end Test__test_TABS_Tfloorcontrol;

      model Test__test_TABS_PIDPID
        "BUILDING ENVELOPPES ARE NOT ADAPTED
  PID controller for Tfloor as wel as mflow (gek zijn doet geen zeer)
  adapt m to control Q and adapt Tsup to control Tfl
  The model works but the dslog.txt file is bigger than 10 MB so dymola crashes ask Damien later"
        import Occupancy;
        import Vaartstraat;

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-274,122},{-258,138}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-246,120},{-230,136}})));

        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar(
          t=1800,
          QNom=1100,
          VZones=66.29)
          annotation (Placement(transformation(extent={{56,76},{96,96}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={-25,-116})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={28,-120})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-2,-132})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={14,-84})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={14,-130})));
        TABS.TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVNideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{52,114},{76,134}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-26,92},{2,120}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,112},{12,132}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-34,38},{-6,66}})));
         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,52},{12,72}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS1(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-128,28},{-100,56}})));
         Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,42},{-82,62}})));
         Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,102},{-82,122}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN1(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-92,82},{-120,110}})));
        TABS.TDC.TDC
                tDCVN1(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN1ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-118,122},{-94,142}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
                                                                        annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=0,
              origin={-161,60})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          use_T_in=true,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-188,6})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-172,-90})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-172,-128})));
        Modelica.Blocks.Sources.RealExpression Qsup(y=TABSVN1.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-264,-12},{-244,8}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-182,-30})));
        IDEAS.Controls.Continuous.LimPID conPIDTfl(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-244,18},{-224,38}})));
        Modelica.Blocks.Sources.RealExpression Qideal(y=heat_Cool_Demand_scalar.heatPort.T)
          annotation (Placement(transformation(extent={{-278,20},{-258,40}})));
        IDEAS.Controls.Continuous.LimPID conPIDm(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=0.1505*5,
          yMin=0.1505,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-224,78},{-204,98}})));
        Modelica.Blocks.Sources.RealExpression Qideal1(y=heat_Cool_Demand_scalar.heatPort.Q_flow)
          annotation (Placement(transformation(extent={{-266,82},{-246,102}})));
        Modelica.Blocks.Sources.RealExpression Qsup1(y=TABSVN1.heatPortEmb[1].Q_flow)
          annotation (Placement(transformation(extent={{-262,56},{-242,76}})));
      equation
        connect(TRM.TRm,switch_VN_T. u) annotation (Line(points={{-25,-110.7},{-25,-85.35},
                {2,-85.35},{2,-84}},  color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{-2,-121},{2,-121},{2,
                -96},{6,-96}},  color={0,0,127}));
        connect(TsetS1.y, switch_VN_T.c) annotation (Line(points={{28,-109},{26,-109},
                {26,-96},{22,-96}}, color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{14,-119},{14,-96}},
                                                     color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar.TSet)
          annotation (Line(points={{14,-73},{76,-73},{76,75.8}}, color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-12.28,114.4},{-12.28,108.2},{-12,108.2},{-12,97.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{0.6,114.4},{-6.7,114.4},{-6.7,96.2},{-25.44,96.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.uLig,light41. y) annotation (Line(points={{4.8,115.8},{11,115.8},{11,
                122}},     color={0,0,127}));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-28.4,64.6},{-28.4,79.3},{-2.48,79.3},{-2.48,92.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-20.28,60.4},{-20.28,54.2},{-20,54.2},{-20,43.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-33.44,42.2},{-24.72,42.2},{-24.72,60.4},{-7.4,60.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light56.y,VS. uLig) annotation (Line(points={{11,62},{-10,62},{-10,61.8},
                {-3.2,61.8}},              color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{3.4,108.8},{27.7,108.8},
                {27.7,124},{50,124}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar.TSensor) annotation (Line(points={
                {3.4,108.8},{30.7,108.8},{30.7,80},{55.6,80}}, color={0,0,127}));
        connect(VS1.proBusCei[1], VS1.proBusFlo[1]) annotation (Line(
            points={{-114.28,50.4},{-114.28,44.2},{-114,44.2},{-114,33.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS1.proBusD[1], VS1.proBusB[1]) annotation (Line(
            points={{-127.44,32.2},{-118.72,32.2},{-118.72,50.4},{-101.4,50.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light1.y, VS1.uLig) annotation (Line(points={{-83,52},{-104,52},{-104,
                51.8},{-97.2,51.8}}, color={0,0,127}));
        connect(VS1.proBusA[1], VN1.proBusC[1]) annotation (Line(
            points={{-122.4,54.6},{-122.4,69.3},{-115.52,69.3},{-115.52,82.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusCei[1], VN1.proBusFlo[1]) annotation (Line(
            points={{-105.72,104.4},{-105.72,98.2},{-106,98.2},{-106,87.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusB[1], VN1.proBusD[1]) annotation (Line(
            points={{-118.6,104.4},{-100.7,104.4},{-100.7,86.2},{-92.56,86.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.uLig, light2.y) annotation (Line(points={{-122.8,105.8},{-83,105.8},
                {-83,112}}, color={0,0,127}));
        connect(VN1.TSensor, tDCVN1.a) annotation (Line(points={{-121.4,98.8},{-121.4,
                111.4},{-120,111.4},{-120,132}}, color={0,0,127}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-172,-100},{-172,-118}}, color={0,127,255}));
        connect(TABSVN1.port_a, boundary.ports[1]) annotation (Line(points={{-182,-20},
                {-186,-20},{-186,-4},{-188,-4}}, color={0,127,255}));
        connect(TABSVN1.port_b, Tout_VN.port_a) annotation (Line(points={{-182,-40},{-178,
                -40},{-178,-80},{-172,-80}}, color={0,127,255}));
        connect(VN1.gainEmb[1], TABSVN1.heatPortEmb[1]) annotation (Line(points={{-120,
                83.4},{-135,83.4},{-135,-30},{-172,-30}}, color={191,0,0}));
        connect(Qsup.y, conPIDTfl.u_m) annotation (Line(points={{-243,-2},{-238,-2},{-238,
                16},{-234,16}}, color={0,0,127}));
        connect(boundary.T_in, conPIDTfl.y)
          annotation (Line(points={{-184,18},{-223,18},{-223,28}}, color={0,0,127}));
        connect(Qideal.y, conPIDTfl.u_s) annotation (Line(points={{-257,30},{-252,30},
                {-252,28},{-246,28}}, color={0,0,127}));
        connect(VN.gainEmb[1], heat_Cool_Demand_scalar.heatPort) annotation (Line(
              points={{2,93.4},{30,93.4},{30,84},{56,84}}, color={191,0,0}));
        connect(Qideal1.y, conPIDm.u_s) annotation (Line(points={{-245,92},{-234,92},{
                -234,88},{-226,88}}, color={0,0,127}));
        connect(Qsup1.y, conPIDm.u_m) annotation (Line(points={{-241,66},{-226,66},{-226,
                76},{-214,76}}, color={0,0,127}));
        connect(conPIDm.y, boundary.m_flow_in) annotation (Line(points={{-203,88},{-203,
                53},{-180,53},{-180,18}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},{100,140}})),
          experiment(StopTime=31536000));
      end Test__test_TABS_PIDPID;

      model HC_demand_TABS_150Kh_21_23
                                "Calculation maximum heat and cooling demand when is aspired for a TDC < 150Kh
  and uses this maximum heat and cooling demand to determine R_t max which determines mmin"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-56,-14},{-28,14}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{2,6},{-18,26}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-82,-70},{-54,-42}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-54},{-40,-34}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                     "North parth of the zone"
          annotation (Placement(transformation(extent={{60,-6},{88,28}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasEmb=true)
                     "South part of the zone"
          annotation (Placement(transformation(extent={{58,-84},{86,-52}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-198,86},{-184,102}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-168,72},{-154,86}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-194,106},{-182,122}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-164,82},{-148,96}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/
              3600)*(24.5 - 27.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-180,30},{-168,46}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/
              3600)*(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-188,52},{-178,68}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-144,136},{-124,156}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-144,122},{-124,142}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-66,140},{-54,152}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-58,118},{-46,130}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-60,88},{-48,100}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={-33,-158})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={20,-162})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-10,-174})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={6,-126})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={6,-172})));
        TABS.TDC.TDC
                tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN_ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{4,32},{28,52}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VN(
          t=4000,
          QNom=2500,
          VZones=66.29)
          annotation (Placement(transformation(extent={{-8,-28},{32,-8}})));
        TABS.BaseClasses.Switch_3 switch_VN_Tra annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=0,
              origin={-141,109})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_N(y=2.5365*((273.15 + 22 + 2.5
              *((TRM.TRm - 273.15) - 10)/5) - sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-206,96},{-192,112}})));
        TABS.BaseClasses.Switch_3 switch_VN_inf annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=0,
              origin={-129,85})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_N(y=(1012*66.29*1.204*0.5/3600
              /20*((273.15 + 22 + 2.5*((TRM.TRm - 273.15) - 10)/5) - sim.Te)))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-190,76},{-174,90}})));
        TABS.BaseClasses.Switch_3 switch_VN_vent annotation (Placement(transformation(
              extent={{-7,-7},{7,7}},
              rotation=0,
              origin={-127,57})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_N(y=0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-182,44},{-172,60}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-42,42})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-124,-4},{-104,16}})));
        TABS.BaseClasses.Switch_3 switch_VN_mvent
                                                 annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=-90,
              origin={-37,69})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm1
          annotation (Placement(transformation(extent={{-5,-6},{5,6}},
              rotation=0,
              origin={-73,64})));
         Modelica.Blocks.Sources.RealExpression TSu(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-24,86})));
         Modelica.Blocks.Sources.RealExpression TWi(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-42,90})));
         Modelica.Blocks.Sources.RealExpression TN(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-32,98})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-114,-68},{-94,-48}})));
        TABS.BaseClasses.Switch_3 switch_VS_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=180,
              origin={-145,-31})));
         Modelica.Blocks.Sources.RealExpression TSu1(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-174,-34})));
         Modelica.Blocks.Sources.RealExpression TN1(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-184,-20})));
         Modelica.Blocks.Sources.RealExpression TWi1(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-178,-8})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VS(
          t=2100,
          QNom=2500,
          VZones=66.29)
          annotation (Placement(transformation(extent={{-40,-82},{0,-62}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_OS(
          t=1515,
          QNom=2500,
          VZones=43.2)
          annotation (Placement(transformation(extent={{116,-78},{156,-58}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{20,-56},{40,-36}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={94,-42})));
        TABS.BaseClasses.Switch_3 switch_OS_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=90,
              origin={119,-23})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm2
          annotation (Placement(transformation(extent={{5,-6},{-5,6}},
              rotation=0,
              origin={157,-22})));
         Modelica.Blocks.Sources.RealExpression TWi2(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={134,-4})));
         Modelica.Blocks.Sources.RealExpression TN2(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={122,-4})));
         Modelica.Blocks.Sources.RealExpression TSu2(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={108,-2})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_ON(
          t=1075,
          QNom=2500,
          VZones=43.2)
          annotation (Placement(transformation(extent={{110,28},{150,48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={76,56})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{24,4},{44,24}})));
        TABS.BaseClasses.Switch_3 switch_ON_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=90,
              origin={79,85})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm3
          annotation (Placement(transformation(extent={{5,-6},{-5,6}},
              rotation=0,
              origin={117,86})));
         Modelica.Blocks.Sources.RealExpression TWi3(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={94,104})));
         Modelica.Blocks.Sources.RealExpression TN3(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={82,104})));
         Modelica.Blocks.Sources.RealExpression TSu3(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={68,106})));
        TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCON.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{122,54},{146,74}})));
        TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCOS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{132,-52},{156,-32}})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-70,-96},{-94,-76}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-25.2,9.8},{-19,9.8},{-19,
                16}},      color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-41,-44},{-40,-44},{-40,
                -46.2},{-51.2,-46.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-42.28,8.4},{-42.28,2.2},{-42,2.2},{-42,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-29.4,8.4},{-36.7,8.4},{-36.7,-9.8},{-55.44,-9.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-76.4,-43.4},{-76.4,-26.7},{-32.48,-26.7},{-32.48,-13.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-81.44,-65.8},{-60.72,-65.8},{-60.72,-47.6},{-55.4,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-68.28,-47.6},{-68.28,-52},{-68,-52},{-68,-64.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{74,0.8},{73.72,0.8},{73.72,21.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{63.6,-53.6},{63.6,-15.5},{83.52,-15.5},{83.52,-5.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{71.72,-58.4},{72,-58.4},{72,-77.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-123,146},{-77.5,146},
                {-77.5,149.36},{-66,149.36}},   color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-123,132},{-78,132},
                {-78,147.68},{-66,147.68}},   color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-123,146},{-78,146},
                {-78,127.36},{-58,127.36}},  color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-123,132},{-78,132},
                {-78,125.68},{-58,125.68}},color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-183.3,94},{
                -102,94},{-102,124},{-58,124}},
                                              color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-153.3,79},{
                -88.65,79},{-88.65,122.32},{-58,122.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-177.5,60},
                {-96,60},{-96,120.64},{-58,120.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-123,146},{-76,146},
                {-76,97.36},{-60,97.36}},  color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-123,132},{-123,127},
                {-60,127},{-60,95.68}},color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-181.4,114},
                {-102,114},{-102,94},{-60,94}},
                                              color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-147.2,89},{
                -85.6,89},{-85.6,92.32},{-60,92.32}},   color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-167.4,38},
                {-96,38},{-96,90.64},{-60,90.64}},   color={0,0,127}));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-33,-152.7},{-33,-129.35},
                {-6,-129.35},{-6,-126}},
                                      color={0,0,127}));
        connect(TSetW.y, switch_VN_T.a) annotation (Line(points={{-10,-163},{-6,-163},
                {-6,-138},{-2,-138}},
                                color={0,0,127}));
        connect(TsetS.y, switch_VN_T.c) annotation (Line(points={{20,-151},{18,-151},{
                18,-138},{14,-138}},
                                color={0,0,127}));
        connect(TSetW1.y, switch_VN_T.b)
          annotation (Line(points={{6,-161},{6,-138}},
                                                     color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-26.6,2.8},{-26.6,35.4},
                {2,35.4},{2,42}},      color={0,0,127}));
        connect(heat_Cool_Demand_scalar_VN.TSet, switch_VN_T.y) annotation (Line(
              points={{12,-28.2},{14,-28.2},{14,-115},{6,-115}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar_VN.TSensor) annotation (Line(
              points={{-26.6,2.8},{-26.6,2.4},{-8.4,2.4},{-8.4,-24}},   color={0,0,127}));
        connect(heat_Cool_Demand_scalar_VN.heatPort, VN.gainEmb[1]) annotation (Line(
              points={{-8,-20},{-20,-20},{-20,-12.6},{-28,-12.6}},  color={191,0,0}));
        connect(Trm.TRm, switch_VN_Tra.u) annotation (Line(points={{-191.7,68},{-166,68},
                {-166,100.6},{-141,100.6}}, color={0,0,127}));
        connect(Qtra_VN_S.y, switch_VN_Tra.c) annotation (Line(points={{-181.4,114},{-164,
                114},{-164,114.6},{-149.4,114.6}}, color={0,0,127}));
        connect(Qtra_VN_W.y, switch_VN_Tra.a) annotation (Line(points={{-183.3,94},{-164,
                94},{-164,103.4},{-149.4,103.4}}, color={0,0,127}));
        connect(Qtra_VN_N.y, switch_VN_Tra.b) annotation (Line(points={{-191.3,104},{-184,
                104},{-184,109},{-149.4,109}}, color={0,0,127}));
        connect(switch_VN_Tra.y, Qdemand_VN.u[3]) annotation (Line(points={{-133.3,109},
                {-99.65,109},{-99.65,146},{-66,146}}, color={0,0,127}));
        connect(Trm.TRm, switch_VN_inf.u) annotation (Line(points={{-191.7,68},{-160,68},
                {-160,76.6},{-129,76.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, switch_VN_inf.c) annotation (Line(points={{-147.2,89},{-142.6,
                89},{-142.6,90.6},{-137.4,90.6}}, color={0,0,127}));
        connect(Qinf_VN_W.y, switch_VN_inf.a) annotation (Line(points={{-153.3,79},{-145.65,
                79},{-145.65,79.4},{-137.4,79.4}}, color={0,0,127}));
        connect(Qinf_VN_N.y, switch_VN_inf.b) annotation (Line(points={{-173.2,83},{-154.6,
                83},{-154.6,85},{-137.4,85}}, color={0,0,127}));
        connect(switch_VN_inf.y, Qdemand_VN.u[4]) annotation (Line(points={{-121.3,85},
                {-121.3,115.5},{-66,115.5},{-66,144.32}}, color={0,0,127}));
        connect(switch_VN_inf.u, switch_VN_vent.u) annotation (Line(points={{-129,76.6},
                {-129,65.4},{-127,65.4}}, color={0,0,127}));
        connect(QVent_VN_S.y, switch_VN_vent.c) annotation (Line(points={{-167.4,38},{
                -152,38},{-152,51.4},{-135.4,51.4}}, color={0,0,127}));
        connect(QVent_VN_W.y, switch_VN_vent.a) annotation (Line(points={{-177.5,60},{
                -157.45,60},{-157.45,62.6},{-135.4,62.6}}, color={0,0,127}));
        connect(QVent_VN_N.y, switch_VN_vent.b) annotation (Line(points={{-171.5,52},{
                -154,52},{-154,57},{-135.4,57}}, color={0,0,127}));
        connect(switch_VN_vent.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,57},
                {-119.3,101.5},{-66,101.5},{-66,142.64}}, color={0,0,127}));
        connect(msource_VN.ports[1], VN.port_a) annotation (Line(points={{-42,32},{-42,
                23},{-39.2,23},{-39.2,14}}, color={0,127,255}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-44.8,14},{-104,
                14},{-104,6}}, color={0,127,255}));
        connect(Trm1.TRm, switch_VN_mvent.u) annotation (Line(points={{-67.7,64},{-66,
                64},{-66,69},{-45.4,69}}, color={0,0,127}));
        connect(switch_VN_mvent.y, msource_VN.T_in) annotation (Line(points={{-37,61.3},
                {-38.5,61.3},{-38.5,54},{-38,54}}, color={0,0,127}));
        connect(switch_VN_mvent.c, TSu.y) annotation (Line(points={{-31.4,77.4},{-26.7,
                77.4},{-26.7,79.4},{-24,79.4}}, color={0,0,127}));
        connect(TWi.y, switch_VN_mvent.a) annotation (Line(points={{-42,83.4},{-42,77.4},
                {-42.6,77.4}}, color={0,0,127}));
        connect(TN.y, switch_VN_mvent.b) annotation (Line(points={{-32,91.4},{-36,91.4},
                {-36,77.4},{-37,77.4}}, color={0,0,127}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},{-64,
                -34},{-64,-42},{-65.2,-42}}, color={0,127,255}));
        connect(VS.port_b, bou_VS.ports[1]) annotation (Line(points={{-70.8,-42},{-84,
                -42},{-84,-58},{-94,-58}}, color={0,127,255}));
        connect(switch_VS_mvent.y, msource_VS.T_in) annotation (Line(points={{-137.3,-31},
                {-123.65,-31},{-123.65,-30},{-112,-30}}, color={0,0,127}));
        connect(Trm.TRm, switch_VS_mvent.u) annotation (Line(points={{-191.7,68},{-144,
                68},{-144,-22.6},{-145,-22.6}}, color={0,0,127}));
        connect(TSu1.y, switch_VS_mvent.c) annotation (Line(points={{-167.4,-34},{-160.7,
                -34},{-160.7,-36.6},{-153.4,-36.6}}, color={0,0,127}));
        connect(TWi1.y, switch_VS_mvent.a) annotation (Line(points={{-171.4,-8},{-162,
                -8},{-162,-25.4},{-153.4,-25.4}}, color={0,0,127}));
        connect(TN1.y, switch_VS_mvent.b) annotation (Line(points={{-177.4,-20},{-166,
                -20},{-166,-31},{-153.4,-31}}, color={0,0,127}));
        connect(VS.gainEmb[1], heat_Cool_Demand_scalar_VS.heatPort) annotation (Line(
              points={{-54,-68.6},{-48,-68.6},{-48,-74},{-40,-74}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_scalar_VS.TSensor) annotation (Line(
              points={{-52.6,-53.2},{-52.6,-64.6},{-40.4,-64.6},{-40.4,-78}}, color={0,
                0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VS.TSet) annotation (Line(
              points={{6,-115},{-16,-115},{-16,-82.2},{-20,-82.2}}, color={0,0,127}));
        connect(OS.TSensor, heat_Cool_Demand_scalar_OS.TSensor) annotation (Line(
              points={{87.4,-64.8},{101.7,-64.8},{101.7,-74},{115.6,-74}}, color={0,0,
                127}));
        connect(heat_Cool_Demand_scalar_OS.heatPort, OS.gainEmb[1]) annotation (Line(
              points={{116,-70},{102,-70},{102,-82.4},{86,-82.4}}, color={191,0,0}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_OS.TSet) annotation (Line(
              points={{6,-115},{136,-115},{136,-78.2}}, color={0,0,127}));
        connect(msource_OS.ports[1], OS.port_a)
          annotation (Line(points={{94,-52},{74.8,-52}}, color={0,127,255}));
        connect(OS.port_b, bou_OS.ports[1]) annotation (Line(points={{69.2,-52},{49.6,
                -52},{49.6,-46},{40,-46}}, color={0,127,255}));
        connect(Trm2.TRm, switch_OS_mvent.u) annotation (Line(points={{151.7,-22},{138,
                -22},{138,-23},{127.4,-23}}, color={0,0,127}));
        connect(TWi2.y, switch_OS_mvent.a) annotation (Line(points={{134,-10.6},{130,-10.6},
                {130,-14.6},{124.6,-14.6}}, color={0,0,127}));
        connect(TN2.y, switch_OS_mvent.b) annotation (Line(points={{122,-10.6},{122,-14.6},
                {119,-14.6}}, color={0,0,127}));
        connect(TSu2.y, switch_OS_mvent.c) annotation (Line(points={{108,-8.6},{110,-8.6},
                {110,-14.6},{113.4,-14.6}}, color={0,0,127}));
        connect(switch_OS_mvent.y, msource_OS.T_in) annotation (Line(points={{119,-30.7},
                {104.5,-30.7},{104.5,-30},{98,-30}}, color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_ON.TSet) annotation (Line(
              points={{6,-115},{174,-115},{174,27.8},{130,27.8}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_scalar_ON.TSensor) annotation (Line(
              points={{89.4,14.4},{99.7,14.4},{99.7,32},{109.6,32}}, color={0,0,127}));
        connect(heat_Cool_Demand_scalar_ON.heatPort, ON.gainEmb[1]) annotation (Line(
              points={{110,36},{100,36},{100,-4.3},{88,-4.3}}, color={191,0,0}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{76,46},{76,38},
                {76,28},{76.8,28}}, color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{44,14},{57,14},{
                57,28},{71.2,28}}, color={0,127,255}));
        connect(Trm3.TRm, switch_ON_mvent.u) annotation (Line(points={{111.7,86},{98,86},
                {98,85},{87.4,85}}, color={0,0,127}));
        connect(TWi3.y, switch_ON_mvent.a) annotation (Line(points={{94,97.4},{90,97.4},
                {90,93.4},{84.6,93.4}}, color={0,0,127}));
        connect(TN3.y, switch_ON_mvent.b)
          annotation (Line(points={{82,97.4},{82,93.4},{79,93.4}}, color={0,0,127}));
        connect(TSu3.y, switch_ON_mvent.c) annotation (Line(points={{68,99.4},{70,99.4},
                {70,93.4},{73.4,93.4}}, color={0,0,127}));
        connect(switch_ON_mvent.y, msource_ON.T_in) annotation (Line(points={{79,77.3},
                {79,72.65},{80,72.65},{80,68}}, color={0,0,127}));
        connect(OS.TSensor, tDCOS.a) annotation (Line(points={{87.4,-64.8},{107.7,-64.8},
                {107.7,-42},{130,-42}}, color={0,0,127}));
        connect(ON.TSensor, tDCON.a) annotation (Line(points={{89.4,14.4},{89.4,40.2},
                {120,40.2},{120,64}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-52.6,-53.2},{-52.6,-85.6},
                {-68,-85.6},{-68,-86}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-180},
                  {180,160}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-180},{180,160}})),
          experiment(StopTime=31536000));
      end HC_demand_TABS_150Kh_21_23;

      model HC_demand_TABS_0Kh_20_24 "Calculation maximum heat and cooling demand when is aspired for a TDC < 150Kh
  and uses this maximum heat and cooling demand to determine R_t max which determines mmin"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-56,-14},{-28,14}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{2,6},{-18,26}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-82,-70},{-54,-42}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,-54},{-40,-34}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                     "North parth of the zone"
          annotation (Placement(transformation(extent={{60,-6},{88,28}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasEmb=true)
                     "South part of the zone"
          annotation (Placement(transformation(extent={{58,-84},{86,-52}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-198,86},{-184,102}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-168,72},{-154,86}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-194,106},{-182,122}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-164,82},{-148,96}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/
              3600)*(24.5 - 27.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-180,30},{-168,46}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/
              3600)*(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-188,52},{-178,68}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-144,136},{-124,156}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-144,122},{-124,142}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-66,140},{-54,152}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-58,118},{-46,130}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-60,88},{-48,100}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={-33,-158})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={20,-162})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-10,-174})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={6,-126})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={6,-172})));
        TABS.TDC.TDC
                tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN_ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{4,32},{28,52}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VN(
          t=3600,
          QNom=2500,
          VZones=66.29)
          annotation (Placement(transformation(extent={{-8,-28},{32,-8}})));
        TABS.BaseClasses.Switch_3 switch_VN_Tra annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=0,
              origin={-141,109})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_N(y=2.5365*((273.15 + 22 + 2.5
              *((TRM.TRm - 273.15) - 10)/5) - sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-206,96},{-192,112}})));
        TABS.BaseClasses.Switch_3 switch_VN_inf annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=0,
              origin={-129,85})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_N(y=(1012*66.29*1.204*0.5/3600
              /20*((273.15 + 22 + 2.5*((TRM.TRm - 273.15) - 10)/5) - sim.Te)))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-190,76},{-174,90}})));
        TABS.BaseClasses.Switch_3 switch_VN_vent annotation (Placement(transformation(
              extent={{-7,-7},{7,7}},
              rotation=0,
              origin={-127,57})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_N(y=0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-182,44},{-172,60}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-42,42})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-124,-4},{-104,16}})));
        TABS.BaseClasses.Switch_3 switch_VN_mvent
                                                 annotation (Placement(transformation(
              extent={{-7,7},{7,-7}},
              rotation=-90,
              origin={-37,69})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm1
          annotation (Placement(transformation(extent={{-5,-6},{5,6}},
              rotation=0,
              origin={-73,64})));
         Modelica.Blocks.Sources.RealExpression TSu(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-24,86})));
         Modelica.Blocks.Sources.RealExpression TWi(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-42,90})));
         Modelica.Blocks.Sources.RealExpression TN(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={-32,98})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-114,-68},{-94,-48}})));
        TABS.BaseClasses.Switch_3 switch_VS_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=180,
              origin={-145,-31})));
         Modelica.Blocks.Sources.RealExpression TSu1(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-174,-34})));
         Modelica.Blocks.Sources.RealExpression TN1(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-184,-20})));
         Modelica.Blocks.Sources.RealExpression TWi1(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{6,-8},{-6,8}},
              rotation=180,
              origin={-178,-8})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_VS(
          t=1600,
          QNom=2500,
          VZones=66.29)
          annotation (Placement(transformation(extent={{-40,-82},{0,-62}})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_OS(
          t=1200,
          QNom=2500,
          VZones=43.2)
          annotation (Placement(transformation(extent={{116,-78},{156,-58}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{20,-56},{40,-36}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={94,-44})));
        TABS.BaseClasses.Switch_3 switch_OS_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=90,
              origin={119,-23})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm2
          annotation (Placement(transformation(extent={{5,-6},{-5,6}},
              rotation=0,
              origin={157,-22})));
         Modelica.Blocks.Sources.RealExpression TWi2(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={134,-4})));
         Modelica.Blocks.Sources.RealExpression TN2(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={122,-4})));
         Modelica.Blocks.Sources.RealExpression TSu2(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={108,-2})));
        BaseClasses.Heat_Cool_Demand_scalar heat_Cool_Demand_scalar_ON(
          t=1100,
          QNom=2500,
          VZones=43.2)
          annotation (Placement(transformation(extent={{110,28},{150,48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          use_T_in=true,
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={76,56})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{24,4},{44,24}})));
        TABS.BaseClasses.Switch_3 switch_ON_mvent annotation (Placement(
              transformation(
              extent={{7,7},{-7,-7}},
              rotation=90,
              origin={79,85})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 Trm3
          annotation (Placement(transformation(extent={{5,-6},{-5,6}},
              rotation=0,
              origin={117,86})));
         Modelica.Blocks.Sources.RealExpression TWi3(y=273.15 + 18)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={94,104})));
         Modelica.Blocks.Sources.RealExpression TN3(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15)
               - 10)/5) "Number of occupants present" annotation (Placement(
              transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={82,104})));
         Modelica.Blocks.Sources.RealExpression TSu3(y=273.15 + 27.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-6,-8},{6,8}},
              rotation=-90,
              origin={68,106})));
        TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCON.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{122,54},{146,74}})));
        TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCOS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{132,-52},{156,-32}})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-70,-96},{-94,-76}})));
        Modelica.Blocks.Sources.RealExpression HC_VS(y=-
              heat_Cool_Demand_scalar_VS.heatPort.Q_flow) annotation (Placement(
              transformation(extent={{-194,-278},{-174,-258}})));
        Modelica.Blocks.Sources.RealExpression HC_VN(y=-
              heat_Cool_Demand_scalar_VN.heatPort.Q_flow)
          annotation (Placement(transformation(extent={{-200,-98},{-180,-78}})));
        Modelica.Blocks.Sources.RealExpression HC_ON(y=-
              heat_Cool_Demand_scalar_ON.heatPort.Q_flow)
          annotation (Placement(transformation(extent={{48,-154},{68,-134}})));
        Modelica.Blocks.Sources.RealExpression HC_OS(y=-
              heat_Cool_Demand_scalar_OS.heatPort.Q_flow)
          annotation (Placement(transformation(extent={{24,-282},{44,-262}})));
        Modelica.Blocks.Continuous.Integrator H_demand_VN(k=1/3600000/18.832)
          annotation (Placement(transformation(extent={{-126,-96},{-110,-80}})));
        Modelica.Blocks.Nonlinear.Limiter limiter(uMax=5000, uMin=0)
          annotation (Placement(transformation(extent={{-152,-96},{-138,-82}})));
        Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=5000, uMin=0) annotation (
           Placement(transformation(extent={{-146,-274},{-134,-262}})));
        Modelica.Blocks.Continuous.Integrator H_demand_VS(k=1/3600000/18.832)
          annotation (Placement(transformation(extent={{-120,-276},{-104,-260}})));
        Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=5000, uMin=0)
          annotation (Placement(transformation(extent={{122,-150},{134,-138}})));
        Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=5000, uMin=0)
          annotation (Placement(transformation(extent={{72,-276},{84,-264}})));
        Modelica.Blocks.Continuous.Integrator H_demand_ON(k=1/3600000/16)
          annotation (Placement(transformation(extent={{150,-152},{166,-136}})));
        Modelica.Blocks.Continuous.Integrator H_demand_OS(k=1/3600000/16)
          annotation (Placement(transformation(extent={{116,-274},{126,-264}})));
        Modelica.Blocks.Continuous.Integrator HC_demand_VN(k=1/3600000/18.832)
          annotation (Placement(transformation(extent={{-80,-152},{-64,-136}})));
        Modelica.Blocks.Continuous.Integrator HC_demand_VS(k=1/3600000/18.832)
          annotation (Placement(transformation(extent={{-8,-230},{4,-218}})));
        Modelica.Blocks.Continuous.Integrator HC_demand_ON(k=1/3600000/16)
          annotation (Placement(transformation(extent={{152,-198},{168,-182}})));
        Modelica.Blocks.Continuous.Integrator HC_demand_OS(k=1/3600000/16)
          annotation (Placement(transformation(extent={{154,-240},{164,-230}})));
        Modelica.Blocks.Logical.Switch switch2_1
          annotation (Placement(transformation(extent={{-122,-154},{-102,-134}})));
        Modelica.Blocks.Logical.GreaterThreshold greaterThreshold1
          annotation (Placement(transformation(extent={{-166,-144},{-146,-124}})));
        Modelica.Blocks.Math.Gain gain1(k=-1)
          annotation (Placement(transformation(extent={{-160,-166},{-148,-154}})));
        Modelica.Blocks.Logical.Switch switch2
          annotation (Placement(transformation(extent={{-48,-234},{-28,-214}})));
        Modelica.Blocks.Logical.GreaterThreshold greaterThreshold
          annotation (Placement(transformation(extent={{-152,-240},{-132,-220}})));
        Modelica.Blocks.Math.Gain gain2(k=-1)
          annotation (Placement(transformation(extent={{-100,-250},{-88,-238}})));
        Modelica.Blocks.Logical.Switch switch1
          annotation (Placement(transformation(extent={{116,-246},{136,-226}})));
        Modelica.Blocks.Logical.GreaterThreshold greaterThreshold2
          annotation (Placement(transformation(extent={{64,-244},{84,-224}})));
        Modelica.Blocks.Math.Gain gain3(k=-1)
          annotation (Placement(transformation(extent={{92,-256},{104,-244}})));
        Modelica.Blocks.Logical.Switch switch3
          annotation (Placement(transformation(extent={{118,-198},{138,-178}})));
        Modelica.Blocks.Math.Gain gain4(k=-1)
          annotation (Placement(transformation(extent={{90,-204},{102,-192}})));
        Modelica.Blocks.Logical.GreaterThreshold greaterThreshold3
          annotation (Placement(transformation(extent={{84,-186},{104,-166}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-25.2,9.8},{-19,9.8},{-19,
                16}},      color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-41,-44},{-40,-44},{-40,
                -46.2},{-51.2,-46.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-42.28,8.4},{-42.28,2.2},{-42,2.2},{-42,-8.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-29.4,8.4},{-36.7,8.4},{-36.7,-9.8},{-55.44,-9.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-76.4,-43.4},{-76.4,-26.7},{-32.48,-26.7},{-32.48,-13.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-81.44,-65.8},{-60.72,-65.8},{-60.72,-47.6},{-55.4,-47.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-68.28,-47.6},{-68.28,-52},{-68,-52},{-68,-64.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{74,0.8},{73.72,0.8},{73.72,21.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{63.6,-53.6},{63.6,-15.5},{83.52,-15.5},{83.52,-5.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{71.72,-58.4},{72,-58.4},{72,-77.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-123,146},{-77.5,146},
                {-77.5,149.36},{-66,149.36}},   color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-123,132},{-78,132},
                {-78,147.68},{-66,147.68}},   color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-123,146},{-78,146},
                {-78,127.36},{-58,127.36}},  color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-123,132},{-78,132},
                {-78,125.68},{-58,125.68}},color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-183.3,94},{
                -102,94},{-102,124},{-58,124}},
                                              color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-153.3,79},{
                -88.65,79},{-88.65,122.32},{-58,122.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-177.5,60},
                {-96,60},{-96,120.64},{-58,120.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-123,146},{-76,146},
                {-76,97.36},{-60,97.36}},  color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-123,132},{-123,127},
                {-60,127},{-60,95.68}},color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-181.4,114},
                {-102,114},{-102,94},{-60,94}},
                                              color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-147.2,89},{
                -85.6,89},{-85.6,92.32},{-60,92.32}},   color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-167.4,38},
                {-96,38},{-96,90.64},{-60,90.64}},   color={0,0,127}));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-33,-152.7},{-33,-129.35},
                {-6,-129.35},{-6,-126}},
                                      color={0,0,127}));
        connect(TSetW.y, switch_VN_T.a) annotation (Line(points={{-10,-163},{-6,-163},
                {-6,-138},{-2,-138}},
                                color={0,0,127}));
        connect(TsetS.y, switch_VN_T.c) annotation (Line(points={{20,-151},{18,-151},{
                18,-138},{14,-138}},
                                color={0,0,127}));
        connect(TSetW1.y, switch_VN_T.b)
          annotation (Line(points={{6,-161},{6,-138}},
                                                     color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-26.6,2.8},{-26.6,35.4},
                {2,35.4},{2,42}},      color={0,0,127}));
        connect(heat_Cool_Demand_scalar_VN.TSet, switch_VN_T.y) annotation (Line(
              points={{12,-28.2},{14,-28.2},{14,-115},{6,-115}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar_VN.TSensor) annotation (Line(
              points={{-26.6,2.8},{-26.6,2.4},{-8.4,2.4},{-8.4,-24}},   color={0,0,127}));
        connect(heat_Cool_Demand_scalar_VN.heatPort, VN.gainEmb[1]) annotation (Line(
              points={{-8,-20},{-20,-20},{-20,-12.6},{-28,-12.6}},  color={191,0,0}));
        connect(Trm.TRm, switch_VN_Tra.u) annotation (Line(points={{-191.7,68},{-166,68},
                {-166,100.6},{-141,100.6}}, color={0,0,127}));
        connect(Qtra_VN_S.y, switch_VN_Tra.c) annotation (Line(points={{-181.4,114},{-164,
                114},{-164,114.6},{-149.4,114.6}}, color={0,0,127}));
        connect(Qtra_VN_W.y, switch_VN_Tra.a) annotation (Line(points={{-183.3,94},{-164,
                94},{-164,103.4},{-149.4,103.4}}, color={0,0,127}));
        connect(Qtra_VN_N.y, switch_VN_Tra.b) annotation (Line(points={{-191.3,104},{-184,
                104},{-184,109},{-149.4,109}}, color={0,0,127}));
        connect(switch_VN_Tra.y, Qdemand_VN.u[3]) annotation (Line(points={{-133.3,109},
                {-99.65,109},{-99.65,146},{-66,146}}, color={0,0,127}));
        connect(Trm.TRm, switch_VN_inf.u) annotation (Line(points={{-191.7,68},{-160,68},
                {-160,76.6},{-129,76.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, switch_VN_inf.c) annotation (Line(points={{-147.2,89},{-142.6,
                89},{-142.6,90.6},{-137.4,90.6}}, color={0,0,127}));
        connect(Qinf_VN_W.y, switch_VN_inf.a) annotation (Line(points={{-153.3,79},{-145.65,
                79},{-145.65,79.4},{-137.4,79.4}}, color={0,0,127}));
        connect(Qinf_VN_N.y, switch_VN_inf.b) annotation (Line(points={{-173.2,83},{-154.6,
                83},{-154.6,85},{-137.4,85}}, color={0,0,127}));
        connect(switch_VN_inf.y, Qdemand_VN.u[4]) annotation (Line(points={{-121.3,85},
                {-121.3,115.5},{-66,115.5},{-66,144.32}}, color={0,0,127}));
        connect(switch_VN_inf.u, switch_VN_vent.u) annotation (Line(points={{-129,76.6},
                {-129,65.4},{-127,65.4}}, color={0,0,127}));
        connect(QVent_VN_S.y, switch_VN_vent.c) annotation (Line(points={{-167.4,38},{
                -152,38},{-152,51.4},{-135.4,51.4}}, color={0,0,127}));
        connect(QVent_VN_W.y, switch_VN_vent.a) annotation (Line(points={{-177.5,60},{
                -157.45,60},{-157.45,62.6},{-135.4,62.6}}, color={0,0,127}));
        connect(QVent_VN_N.y, switch_VN_vent.b) annotation (Line(points={{-171.5,52},{
                -154,52},{-154,57},{-135.4,57}}, color={0,0,127}));
        connect(switch_VN_vent.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,57},
                {-119.3,101.5},{-66,101.5},{-66,142.64}}, color={0,0,127}));
        connect(msource_VN.ports[1], VN.port_a) annotation (Line(points={{-42,32},{-42,
                23},{-39.2,23},{-39.2,14}}, color={0,127,255}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-44.8,14},{-104,
                14},{-104,6}}, color={0,127,255}));
        connect(Trm1.TRm, switch_VN_mvent.u) annotation (Line(points={{-67.7,64},{-66,
                64},{-66,69},{-45.4,69}}, color={0,0,127}));
        connect(switch_VN_mvent.y, msource_VN.T_in) annotation (Line(points={{-37,61.3},
                {-38.5,61.3},{-38.5,54},{-38,54}}, color={0,0,127}));
        connect(switch_VN_mvent.c, TSu.y) annotation (Line(points={{-31.4,77.4},{-26.7,
                77.4},{-26.7,79.4},{-24,79.4}}, color={0,0,127}));
        connect(TWi.y, switch_VN_mvent.a) annotation (Line(points={{-42,83.4},{-42,77.4},
                {-42.6,77.4}}, color={0,0,127}));
        connect(TN.y, switch_VN_mvent.b) annotation (Line(points={{-32,91.4},{-36,91.4},
                {-36,77.4},{-37,77.4}}, color={0,0,127}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},{-64,
                -34},{-64,-42},{-65.2,-42}}, color={0,127,255}));
        connect(VS.port_b, bou_VS.ports[1]) annotation (Line(points={{-70.8,-42},{-84,
                -42},{-84,-58},{-94,-58}}, color={0,127,255}));
        connect(switch_VS_mvent.y, msource_VS.T_in) annotation (Line(points={{-137.3,-31},
                {-123.65,-31},{-123.65,-30},{-112,-30}}, color={0,0,127}));
        connect(Trm.TRm, switch_VS_mvent.u) annotation (Line(points={{-191.7,68},{-144,
                68},{-144,-22.6},{-145,-22.6}}, color={0,0,127}));
        connect(TSu1.y, switch_VS_mvent.c) annotation (Line(points={{-167.4,-34},{-160.7,
                -34},{-160.7,-36.6},{-153.4,-36.6}}, color={0,0,127}));
        connect(TWi1.y, switch_VS_mvent.a) annotation (Line(points={{-171.4,-8},{-162,
                -8},{-162,-25.4},{-153.4,-25.4}}, color={0,0,127}));
        connect(TN1.y, switch_VS_mvent.b) annotation (Line(points={{-177.4,-20},{-166,
                -20},{-166,-31},{-153.4,-31}}, color={0,0,127}));
        connect(VS.gainEmb[1], heat_Cool_Demand_scalar_VS.heatPort) annotation (Line(
              points={{-54,-68.6},{-48,-68.6},{-48,-74},{-40,-74}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_scalar_VS.TSensor) annotation (Line(
              points={{-52.6,-53.2},{-52.6,-64.6},{-40.4,-64.6},{-40.4,-78}}, color={0,
                0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VS.TSet) annotation (Line(
              points={{6,-115},{-16,-115},{-16,-82.2},{-20,-82.2}}, color={0,0,127}));
        connect(OS.TSensor, heat_Cool_Demand_scalar_OS.TSensor) annotation (Line(
              points={{87.4,-64.8},{101.7,-64.8},{101.7,-74},{115.6,-74}}, color={0,0,
                127}));
        connect(heat_Cool_Demand_scalar_OS.heatPort, OS.gainEmb[1]) annotation (Line(
              points={{116,-70},{102,-70},{102,-82.4},{86,-82.4}}, color={191,0,0}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_OS.TSet) annotation (Line(
              points={{6,-115},{136,-115},{136,-78.2}}, color={0,0,127}));
        connect(msource_OS.ports[1], OS.port_a)
          annotation (Line(points={{94,-54},{84,-54},{84,-52},{74.8,-52}},
                                                         color={0,127,255}));
        connect(OS.port_b, bou_OS.ports[1]) annotation (Line(points={{69.2,-52},{49.6,
                -52},{49.6,-46},{40,-46}}, color={0,127,255}));
        connect(Trm2.TRm, switch_OS_mvent.u) annotation (Line(points={{151.7,-22},{138,
                -22},{138,-23},{127.4,-23}}, color={0,0,127}));
        connect(TWi2.y, switch_OS_mvent.a) annotation (Line(points={{134,-10.6},{130,-10.6},
                {130,-14.6},{124.6,-14.6}}, color={0,0,127}));
        connect(TN2.y, switch_OS_mvent.b) annotation (Line(points={{122,-10.6},{122,-14.6},
                {119,-14.6}}, color={0,0,127}));
        connect(TSu2.y, switch_OS_mvent.c) annotation (Line(points={{108,-8.6},{110,-8.6},
                {110,-14.6},{113.4,-14.6}}, color={0,0,127}));
        connect(switch_OS_mvent.y, msource_OS.T_in) annotation (Line(points={{119,
                -30.7},{104.5,-30.7},{104.5,-32},{98,-32}},
                                                     color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_ON.TSet) annotation (Line(
              points={{6,-115},{174,-115},{174,27.8},{130,27.8}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_scalar_ON.TSensor) annotation (Line(
              points={{89.4,14.4},{99.7,14.4},{99.7,32},{109.6,32}}, color={0,0,127}));
        connect(heat_Cool_Demand_scalar_ON.heatPort, ON.gainEmb[1]) annotation (Line(
              points={{110,36},{100,36},{100,-4.3},{88,-4.3}}, color={191,0,0}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{76,46},{76,38},
                {76,28},{76.8,28}}, color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{44,14},{57,14},{
                57,28},{71.2,28}}, color={0,127,255}));
        connect(Trm3.TRm, switch_ON_mvent.u) annotation (Line(points={{111.7,86},{98,86},
                {98,85},{87.4,85}}, color={0,0,127}));
        connect(TWi3.y, switch_ON_mvent.a) annotation (Line(points={{94,97.4},{90,97.4},
                {90,93.4},{84.6,93.4}}, color={0,0,127}));
        connect(TN3.y, switch_ON_mvent.b)
          annotation (Line(points={{82,97.4},{82,93.4},{79,93.4}}, color={0,0,127}));
        connect(TSu3.y, switch_ON_mvent.c) annotation (Line(points={{68,99.4},{70,99.4},
                {70,93.4},{73.4,93.4}}, color={0,0,127}));
        connect(switch_ON_mvent.y, msource_ON.T_in) annotation (Line(points={{79,77.3},
                {79,72.65},{80,72.65},{80,68}}, color={0,0,127}));
        connect(OS.TSensor, tDCOS.a) annotation (Line(points={{87.4,-64.8},{107.7,-64.8},
                {107.7,-42},{130,-42}}, color={0,0,127}));
        connect(ON.TSensor, tDCON.a) annotation (Line(points={{89.4,14.4},{89.4,40.2},
                {120,40.2},{120,64}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-52.6,-53.2},{-52.6,-85.6},
                {-68,-85.6},{-68,-86}}, color={0,0,127}));
        connect(HC_VN.y, limiter.u) annotation (Line(points={{-179,-88},{-166,-88},
                {-166,-89},{-153.4,-89}}, color={0,0,127}));
        connect(limiter.y, H_demand_VN.u) annotation (Line(points={{-137.3,-89},{
                -127.6,-89},{-127.6,-88}}, color={0,0,127}));
        connect(HC_VS.y, limiter1.u)
          annotation (Line(points={{-173,-268},{-147.2,-268}}, color={0,0,127}));
        connect(limiter1.y, H_demand_VS.u) annotation (Line(points={{-133.4,-268},
                {-121.6,-268}}, color={0,0,127}));
        connect(HC_ON.y, limiter2.u)
          annotation (Line(points={{69,-144},{120.8,-144}}, color={0,0,127}));
        connect(HC_OS.y, limiter3.u) annotation (Line(points={{45,-272},{62,-272},
                {62,-270},{70.8,-270}}, color={0,0,127}));
        connect(limiter2.y, H_demand_ON.u)
          annotation (Line(points={{134.6,-144},{148.4,-144}}, color={0,0,127}));
        connect(limiter3.y, H_demand_OS.u) annotation (Line(points={{84.6,-270},{
                100,-270},{100,-269},{115,-269}}, color={0,0,127}));
        connect(greaterThreshold1.y,switch2_1. u2) annotation (Line(points={{-145,
                -134},{-136,-134},{-136,-144},{-124,-144}},
                                                   color={255,0,255}));
        connect(gain1.y,switch2_1. u3) annotation (Line(points={{-147.4,-160},{
                -140,-160},{-140,-152},{-124,-152}},
                                        color={0,0,127}));
        connect(greaterThreshold.y,switch2. u2)
          annotation (Line(points={{-131,-230},{-66,-230},{-66,-224},{-50,-224}},
                                                           color={255,0,255}));
        connect(gain2.y,switch2. u3) annotation (Line(points={{-87.4,-244},{-64,
                -244},{-64,-232},{-50,-232}},
                                        color={0,0,127}));
        connect(HC_VN.y, greaterThreshold1.u) annotation (Line(points={{-179,-88},
                {-176,-88},{-176,-134},{-168,-134}}, color={0,0,127}));
        connect(switch2_1.y, HC_demand_VN.u)
          annotation (Line(points={{-101,-144},{-81.6,-144}}, color={0,0,127}));
        connect(HC_VN.y, switch2_1.u1) annotation (Line(points={{-179,-88},{-160,
                -88},{-160,-114},{-132,-114},{-132,-136},{-124,-136}}, color={0,0,
                127}));
        connect(gain1.u, HC_VN.y) annotation (Line(points={{-161.2,-160},{-176,
                -160},{-176,-88},{-179,-88}}, color={0,0,127}));
        connect(HC_VS.y, greaterThreshold.u) annotation (Line(points={{-173,-268},
                {-167.5,-268},{-167.5,-230},{-154,-230}}, color={0,0,127}));
        connect(HC_VS.y, gain2.u) annotation (Line(points={{-173,-268},{-156.5,
                -268},{-156.5,-244},{-101.2,-244}}, color={0,0,127}));
        connect(switch2.y, HC_demand_VS.u)
          annotation (Line(points={{-27,-224},{-9.2,-224}}, color={0,0,127}));
        connect(HC_VS.y, switch2.u1) annotation (Line(points={{-173,-268},{-167.5,
                -268},{-167.5,-216},{-50,-216}}, color={0,0,127}));
        connect(switch1.y, HC_demand_OS.u) annotation (Line(points={{137,-236},{
                144,-236},{144,-235},{153,-235}}, color={0,0,127}));
        connect(greaterThreshold2.y, switch1.u2) annotation (Line(points={{85,
                -234},{96,-234},{96,-236},{114,-236}}, color={255,0,255}));
        connect(HC_OS.y, greaterThreshold2.u) annotation (Line(points={{45,-272},
                {52,-272},{52,-234},{62,-234}}, color={0,0,127}));
        connect(HC_OS.y, switch1.u1) annotation (Line(points={{45,-272},{49.5,
                -272},{49.5,-228},{114,-228}}, color={0,0,127}));
        connect(HC_OS.y, gain3.u) annotation (Line(points={{45,-272},{62,-272},{
                62,-250},{90.8,-250}}, color={0,0,127}));
        connect(gain3.y, switch1.u3) annotation (Line(points={{104.6,-250},{108,
                -250},{108,-244},{114,-244}}, color={0,0,127}));
        connect(switch3.y, HC_demand_ON.u) annotation (Line(points={{139,-188},{
                146.5,-188},{146.5,-190},{150.4,-190}}, color={0,0,127}));
        connect(gain4.y, switch3.u3) annotation (Line(points={{102.6,-198},{110.3,
                -198},{110.3,-196},{116,-196}}, color={0,0,127}));
        connect(HC_ON.y, gain4.u) annotation (Line(points={{69,-144},{78,-144},{
                78,-198},{88.8,-198}}, color={0,0,127}));
        connect(greaterThreshold3.y, switch3.u2) annotation (Line(points={{105,
                -176},{105,-183},{116,-183},{116,-188}}, color={255,0,255}));
        connect(greaterThreshold3.u, HC_ON.y) annotation (Line(points={{82,-176},
                {78,-176},{78,-144},{69,-144}}, color={0,0,127}));
        connect(switch3.u1, HC_ON.y) annotation (Line(points={{116,-180},{110,
                -180},{110,-144},{69,-144}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                  -280},{180,160}})),                                  Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-280},{
                  180,160}})),
          experiment(StopTime=31536000));
      end HC_demand_TABS_0Kh_20_24;
    end Ideal_HC_demand_TABS;

    package HC_demand_radconv "This is a package where the heat and cooling demands of all zones is determined
  with 70 % conv and 30 % rad. This is not usefull if you want to know the TABS heat and cooling demand."

      model Supply_ststHC
        "Model to tesst which operative temperature we get if we would apply the theoretically calculated net heat transfer via stationary calculations"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-82,-18},{-54,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false)
                           "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-82,-74},{-54,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{34,-10},{62,24}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-86},{64,-54}})));

         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={2,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VS(
          nZones=1,
          t=600,
          QNom=ones(1)*10000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{-42,-84},{-2,-64}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_OS(
          nZones=1,
          t=600,
          QNom=ones(1)*10000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{92,-86},{132,-66}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_ON(
          nZones=1,
          t=450,
          QNom=ones(1)*10000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{94,-12},{134,8}})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow heat_conv
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-22,58})));
        Modelica.Blocks.Math.Gain fr_conv(k=0.7)
          annotation (Placement(transformation(extent={{-58,72},{-46,84}})));
        Modelica.Blocks.Math.Gain fr_rad(k=0.3) annotation (Placement(transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={-54,58})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow heat_rad annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-12,22})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-51.2,5.8},{-45,5.8},{-45,
                12}},      color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{-42,
                -50.2},{-51.2,-50.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-68.28,4.4},{-68.28,-1.8},{-68,-1.8},{-68,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-55.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-81.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-76.4,-47.4},{-76.4,-28.7},{-58.48,-28.7},{-58.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-81.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-55.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-68.28,-51.6},{-68.28,-53.8},{-68,-53.8},{-68,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{48,-3.2},{47.72,-3.2},{47.72,17.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-55.6},{41.6,-25.5},{57.52,-25.5},{57.52,-9.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-60.4},{50,-60.4},{50,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-70.8,10},{-92,10},
                {-92,10}}, color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-65.2,10},{-64,
                10},{-64,22},{-62,22}}, color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},{-64,
                -34},{-64,-46},{-65.2,-46}}, color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{-92,-58},
                {-92,-46},{-70.8,-46}}, color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},{
                30,24},{45.2,24}}, color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{56,42},
                {56,24},{50.8,24}}, color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,-42},
                {40,-54},{47.2,-54}}, color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{60,
                -52},{52.8,-52},{52.8,-54}}, color={0,127,255}));
        connect(heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (Line(
              points={{-42,-72},{-50,-72},{-50,-64.2},{-54,-64.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (Line(
              points={{-42,-76},{-50,-76},{-50,-68.4},{-54,-68.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_VS.TSensor[1]) annotation (Line(points={{
                -52.6,-57.2},{-52.6,-58},{-48,-58},{-48,-80},{-42.4,-80}}, color={0,0,
                127}));
        connect(Tset.y, heat_Cool_Demand_VS.TSet[1])
          annotation (Line(points={{2,-99},{-22,-99},{-22,-84.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_OS.heatPortCon[1], OS.gainCon) annotation (Line(
              points={{92,-74},{76,-74},{76,-74.8},{64,-74.8}}, color={191,0,0}));
        connect(heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (Line(
              points={{92,-78},{72,-78},{72,-79.6},{64,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, heat_Cool_Demand_OS.TSensor[1]) annotation (Line(points={{
                65.4,-66.8},{65.4,-66},{76,-66},{76,-82},{91.6,-82}}, color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_OS.TSet[1])
          annotation (Line(points={{2,-99},{112,-99},{112,-86.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_ON.heatPortCon[1], ON.gainCon) annotation (Line(
              points={{94,0},{78,0},{78,1.9},{62,1.9}}, color={191,0,0}));
        connect(heat_Cool_Demand_ON.heatPortRad[1], ON.gainRad) annotation (Line(
              points={{94,-4},{78,-4},{78,-3.2},{62,-3.2}}, color={191,0,0}));
        connect(Tset.y, heat_Cool_Demand_ON.TSet[1]) annotation (Line(points={{2,-99},
                {146,-99},{146,-12.2},{114,-12.2}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_ON.TSensor[1]) annotation (Line(points={{
                63.4,10.4},{78.7,10.4},{78.7,-8},{93.6,-8}}, color={0,0,127}));
        connect(Qdemand_VN_S.y, fr_conv.u)
          annotation (Line(points={{-78.98,78},{-59.2,78}}, color={0,0,127}));
        connect(fr_conv.y, heat_conv.Q_flow) annotation (Line(points={{-45.4,78},{-20,
                78},{-20,68},{-22,68}}, color={0,0,127}));
        connect(heat_conv.port, VN.gainCon) annotation (Line(points={{-22,48},{-22,-8.2},
                {-54,-8.2}}, color={191,0,0}));
        connect(Qdemand_VN_S.y, fr_rad.u) annotation (Line(points={{-78.98,78},{-70,78},
                {-70,58},{-61.2,58}}, color={0,0,127}));
        connect(fr_rad.y, heat_rad.Q_flow) annotation (Line(points={{-47.4,58},{-28,58},
                {-28,32},{-12,32}}, color={0,0,127}));
        connect(VN.gainRad, heat_rad.port) annotation (Line(points={{-54,-12.4},{-12,-12.4},
                {-12,12}}, color={191,0,0}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Supply_ststHC;

      model Building_Envelopes_Demand_MOSHC "Made use of the Heat_cool_demand model to calculate the required heat to keep the zones at 22 °C.
  This set point only counts for the winter so use this only to size the heating system. The model calculates the required heat and delivers it immediately/directly"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-76},{-56,-48}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                     "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-8},{60,26}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasEmb=true)
                     "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VN(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-16,-22},{24,-2}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={2,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-172,96},{-158,112}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/
              3600*0.048*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-168,72},{-154,86}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-170,84},{-158,100}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/
              3600*0.048*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-170,60},{-154,74}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*(54*1.204/3600)*
              (24.5 - 28.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-168,32},{-156,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*(54*1.204/3600)*
              (22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-168,46},{-158,62}})));
         Modelica.Blocks.Sources.RealExpression Qsol_VN(y=-VN.radDistr.iSolDir.Q_flow
               - VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG_VN(y=-(VN.occNum.nOcc*73) - (
              light41.y*37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-88,98},{-76,110}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-114,-68},{-94,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={76,40})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VS(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-42,-84},{-2,-64}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_OS(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{90,-84},{130,-64}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_ON(
          nZones=1,
          t=450,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{88,-10},{128,10}})));
         Modelica.Blocks.Sources.RealExpression Qsol_ON(y=-ON.radDistr.iSolDir.Q_flow
               - ON.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{100,120},{120,140}})));
         Modelica.Blocks.Sources.RealExpression QIG_ON(y=-(ON.occNum.nOcc*73) - (ON.occNum.nOcc
              *53.33/2)) "Number of occupants present"
          annotation (Placement(transformation(extent={{100,106},{120,126}})));
         Modelica.Blocks.Sources.RealExpression Qtra_ON_W(y=18.689*(22 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{102,94},{116,110}})));
         Modelica.Blocks.Sources.RealExpression Qtra_ON_S(y=18.689*(24.5 + 273.15
               - sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{100,80},{114,96}})));
         Modelica.Blocks.Sources.RealExpression Qinf_ON_W(y=(1012*43.2*1.204*0.5/
              3600*0.048*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{102,68},{116,82}})));
         Modelica.Blocks.Sources.RealExpression Qinf_ON_S(y=(1012*43.2*1.204*0.5/
              3600*0.048*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{102,56},{116,70}})));
         Modelica.Blocks.Sources.RealExpression QVent_ON_W(y=(1012*(2*54*1.204/3600)
              *(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{106,42},{116,58}})));
         Modelica.Blocks.Sources.RealExpression QVent_ON_S(y=(1012*(2*54*1.204/3600)
              *(24.5 - 28.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{106,28},{118,44}})));
        Modelica.Blocks.Math.MultiSum Qdemand_ON_W(nu=5)
          annotation (Placement(transformation(extent={{172,90},{184,102}})));
        Modelica.Blocks.Math.MultiSum Qdemand_ON_S(nu=5)
          annotation (Placement(transformation(extent={{172,66},{184,78}})));
         Modelica.Blocks.Sources.RealExpression Qsol_OS(y=-OS.radDistr.iSolDir.Q_flow
               - OS.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{156,-22},{176,-2}})));
         Modelica.Blocks.Sources.RealExpression QIG_OS(y=-(OS.occNum.nOcc*73) - (OS.occNum.nOcc
              *53.33)) "Number of occupants present"
          annotation (Placement(transformation(extent={{156,-36},{176,-16}})));
         Modelica.Blocks.Sources.RealExpression Qtra_OS_W(y=18.689*(22 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{158,-48},{172,-32}})));
         Modelica.Blocks.Sources.RealExpression Qtra_OS_S(y=18.689*(24.5 + 273.15
               - sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{156,-62},{170,-46}})));
         Modelica.Blocks.Sources.RealExpression Qinf_OS_W(y=(1012*43.2*1.204*0.5/
              3600*0.048*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{158,-74},{172,-60}})));
         Modelica.Blocks.Sources.RealExpression Qinf_Os_S(y=(1012*43.2*1.204*0.5/
              3600*0.048*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{158,-86},{172,-72}})));
         Modelica.Blocks.Sources.RealExpression QVent_OS_W(y=(1012*(54*1.204/3600)*
              (22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{162,-100},{172,-84}})));
         Modelica.Blocks.Sources.RealExpression QVent_OS_S(y=(1012*(54*1.204/3600)*
              (24.5 - 28.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{162,-114},{174,-98}})));
        Modelica.Blocks.Math.MultiSum Qdemand_OS_W(nu=5)
          annotation (Placement(transformation(extent={{228,-52},{240,-40}})));
        Modelica.Blocks.Math.MultiSum Qdemand_OS_S(nu=5)
          annotation (Placement(transformation(extent={{228,-76},{240,-64}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VS_W(y=2.5365*(22 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-220,-74},{-206,-58}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VS_W(y=(1012*66.29*1.204*0.5/
              3600*0.048*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-216,-98},{-202,-84}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VS_S(y=2.5365*(24.5 + 273.15
               - sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-218,-86},{-206,-70}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VS_S(y=(1012*66.29*1.204*0.5/
              3600*0.048*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-218,-110},{-202,-96}})));
         Modelica.Blocks.Sources.RealExpression QVent_VS_S(y=(1012*(54*1.204/3600)*
              (24.5 - 28.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-216,-138},{-204,-122}})));
         Modelica.Blocks.Sources.RealExpression QVent_VS_W(y=(1012*(54*1.204/3600)*
              (22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-216,-124},{-206,-108}})));
         Modelica.Blocks.Sources.RealExpression Qsol_VS(y=-VS.radDistr.iSolDir.Q_flow
               - VS.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-190,-52},{-170,-32}})));
         Modelica.Blocks.Sources.RealExpression QIG_VS(y=-(VS.occNum.nOcc*73) - (
              light56.y*37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-190,-66},{-170,-46}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VS_W(nu=5)
          annotation (Placement(transformation(extent={{-136,-72},{-124,-60}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VS_S(nu=5)
          annotation (Placement(transformation(extent={{-140,-98},{-128,-86}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},
                {-42,-52.2},{-53.2,-52.2}},color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-49.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-71.8},{-62.72,-71.8},{-62.72,-53.6},{-57.4,-53.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-53.6},{-70.28,-53.8},{-70,-53.8},{-70,-70.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-1.2},{45.72,-1.2},{45.72,19.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-7.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand_VN.heatPortCon[1], VN.gainCon) annotation (Line(
              points={{-16,-10},{-40,-10},{-40,-8.2},{-56,-8.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.heatPortRad[1], VN.gainRad) annotation (Line(
              points={{-16,-14},{-40,-14},{-40,-12.4},{-56,-12.4}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.TSensor[1], VN.TSensor) annotation (Line(points={{-16.4,
                -18},{-38,-18},{-38,-1.2},{-54.6,-1.2}},       color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_VN.TSet[1])
          annotation (Line(points={{2,-99},{2,-22.2},{4,-22.2}},
                                                       color={0,0,127}));
        connect(Qsol_VN.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{
                -110,128},{-110,107.36},{-88,107.36}}, color={0,0,127}));
        connect(QIG_VN.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{
                -110,114},{-110,105.68},{-88,105.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-157.3,
                104},{-88,104}},              color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-153.3,79},
                {-120.65,79},{-120.65,102.32},{-88,102.32}},
                                                          color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-157.5,
                54},{-128,54},{-128,100.64},{-88,100.64}},
                                                     color={0,0,127}));
        connect(Qsol_VN.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{
                -106,128},{-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG_VN.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,
                93},{-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-157.4,92},
                {-134,92},{-134,78},{-92,78}},color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-153.2,67},
                {-117.6,67},{-117.6,76.32},{-92,76.32}},color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-155.4,
                40},{-128,40},{-128,74.64},{-92,74.64}},
                                                     color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-48},{-67.2,-48}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-94,-58},{
                -92,-58},{-92,-48},{-72.8,-48}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},
                {30,26},{43.2,26}},color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{76,30},{
                56,30},{56,26},{48.8,26}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (Line(
              points={{-42,-72},{-50,-72},{-50,-66.2},{-56,-66.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (Line(
              points={{-42,-76},{-50,-76},{-50,-70.4},{-56,-70.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_VS.TSensor[1]) annotation (Line(points={{-54.6,
                -59.2},{-54.6,-58},{-48,-58},{-48,-80},{-42.4,-80}},       color={0,0,
                127}));
        connect(Tset.y, heat_Cool_Demand_VS.TSet[1])
          annotation (Line(points={{2,-99},{-22,-99},{-22,-84.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_OS.heatPortCon[1], OS.gainCon) annotation (Line(
              points={{90,-72},{76,-72},{76,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (Line(
              points={{90,-76},{72,-76},{72,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, heat_Cool_Demand_OS.TSensor[1]) annotation (Line(points={{63.4,
                -66.8},{63.4,-66},{76,-66},{76,-80},{89.6,-80}},      color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_OS.TSet[1])
          annotation (Line(points={{2,-99},{110,-99},{110,-84.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_ON.heatPortCon[1], ON.gainCon) annotation (Line(
              points={{88,2},{78,2},{78,3.9},{60,3.9}}, color={191,0,0}));
        connect(heat_Cool_Demand_ON.heatPortRad[1], ON.gainRad) annotation (Line(
              points={{88,-2},{78,-2},{78,-1.2},{60,-1.2}}, color={191,0,0}));
        connect(Tset.y, heat_Cool_Demand_ON.TSet[1]) annotation (Line(points={{2,-99},
                {146,-99},{146,-10.2},{108,-10.2}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_ON.TSensor[1]) annotation (Line(points={{61.4,
                12.4},{78.7,12.4},{78.7,-6},{87.6,-6}},      color={0,0,127}));
        connect(Qsol_ON.y, Qdemand_ON_W.u[1]) annotation (Line(points={{121,130},{
                148,130},{148,99.36},{172,99.36}}, color={0,0,127}));
        connect(QIG_ON.y, Qdemand_ON_W.u[2]) annotation (Line(points={{121,116},{
                146,116},{146,97.68},{172,97.68}}, color={0,0,127}));
        connect(Qtra_ON_W.y, Qdemand_ON_W.u[3]) annotation (Line(points={{116.7,102},
                {144,102},{144,96},{172,96}}, color={0,0,127}));
        connect(Qinf_ON_W.y, Qdemand_ON_W.u[4]) annotation (Line(points={{116.7,75},
                {146.35,75},{146.35,94.32},{172,94.32}}, color={0,0,127}));
        connect(QVent_ON_W.y, Qdemand_ON_W.u[5]) annotation (Line(points={{116.5,50},
                {144,50},{144,92.64},{172,92.64}}, color={0,0,127}));
        connect(Qsol_ON.y, Qdemand_ON_S.u[1]) annotation (Line(points={{121,130},{
                148,130},{148,75.36},{172,75.36}}, color={0,0,127}));
        connect(QIG_ON.y, Qdemand_ON_S.u[2]) annotation (Line(points={{121,116},{
                148,116},{148,73.68},{172,73.68}}, color={0,0,127}));
        connect(Qtra_ON_S.y, Qdemand_ON_S.u[3]) annotation (Line(points={{114.7,88},
                {142,88},{142,72},{172,72}}, color={0,0,127}));
        connect(Qinf_ON_S.y, Qdemand_ON_S.u[4]) annotation (Line(points={{116.7,63},
                {146.35,63},{146.35,70.32},{172,70.32}}, color={0,0,127}));
        connect(QVent_ON_S.y, Qdemand_ON_S.u[5]) annotation (Line(points={{118.6,36},
                {145.3,36},{145.3,68.64},{172,68.64}}, color={0,0,127}));
        connect(Qsol_OS.y, Qdemand_OS_W.u[1]) annotation (Line(points={{177,-12},{
                204,-12},{204,-42.64},{228,-42.64}}, color={0,0,127}));
        connect(QIG_OS.y, Qdemand_OS_W.u[2]) annotation (Line(points={{177,-26},{
                202,-26},{202,-44.32},{228,-44.32}}, color={0,0,127}));
        connect(Qtra_OS_W.y, Qdemand_OS_W.u[3]) annotation (Line(points={{172.7,-40},
                {200,-40},{200,-46},{228,-46}}, color={0,0,127}));
        connect(Qinf_OS_W.y, Qdemand_OS_W.u[4]) annotation (Line(points={{172.7,-67},
                {202.35,-67},{202.35,-47.68},{228,-47.68}}, color={0,0,127}));
        connect(QVent_OS_W.y, Qdemand_OS_W.u[5]) annotation (Line(points={{172.5,
                -92},{200,-92},{200,-49.36},{228,-49.36}}, color={0,0,127}));
        connect(Qsol_OS.y, Qdemand_OS_S.u[1]) annotation (Line(points={{177,-12},{
                204,-12},{204,-66.64},{228,-66.64}}, color={0,0,127}));
        connect(QIG_OS.y, Qdemand_OS_S.u[2]) annotation (Line(points={{177,-26},{
                204,-26},{204,-68.32},{228,-68.32}}, color={0,0,127}));
        connect(Qtra_OS_S.y, Qdemand_OS_S.u[3]) annotation (Line(points={{170.7,-54},
                {198,-54},{198,-70},{228,-70}}, color={0,0,127}));
        connect(Qinf_Os_S.y, Qdemand_OS_S.u[4]) annotation (Line(points={{172.7,-79},
                {202.35,-79},{202.35,-71.68},{228,-71.68}}, color={0,0,127}));
        connect(QVent_OS_S.y, Qdemand_OS_S.u[5]) annotation (Line(points={{174.6,
                -106},{201.3,-106},{201.3,-73.36},{228,-73.36}}, color={0,0,127}));
        connect(Qsol_VS.y, Qdemand_VS_W.u[1]) annotation (Line(points={{-169,-42},{
                -158,-42},{-158,-62.64},{-136,-62.64}}, color={0,0,127}));
        connect(QIG_VS.y, Qdemand_VS_W.u[2]) annotation (Line(points={{-169,-56},{
                -158,-56},{-158,-64.32},{-136,-64.32}}, color={0,0,127}));
        connect(Qtra_VS_W.y, Qdemand_VS_W.u[3])
          annotation (Line(points={{-205.3,-66},{-136,-66}}, color={0,0,127}));
        connect(Qinf_VS_W.y, Qdemand_VS_W.u[4]) annotation (Line(points={{-201.3,
                -91},{-168.65,-91},{-168.65,-67.68},{-136,-67.68}}, color={0,0,127}));
        connect(QVent_VS_W.y, Qdemand_VS_W.u[5]) annotation (Line(points={{-205.5,
                -116},{-176,-116},{-176,-69.36},{-136,-69.36}}, color={0,0,127}));
        connect(Qsol_VS.y, Qdemand_VS_S.u[1]) annotation (Line(points={{-169,-42},{
                -154,-42},{-154,-88.64},{-140,-88.64}}, color={0,0,127}));
        connect(QIG_VS.y, Qdemand_VS_S.u[2]) annotation (Line(points={{-169,-56},{
                -169,-77},{-140,-77},{-140,-90.32}}, color={0,0,127}));
        connect(Qtra_VS_S.y, Qdemand_VS_S.u[3]) annotation (Line(points={{-205.4,
                -78},{-182,-78},{-182,-92},{-140,-92}}, color={0,0,127}));
        connect(Qinf_VS_S.y, Qdemand_VS_S.u[4]) annotation (Line(points={{-201.2,
                -103},{-165.6,-103},{-165.6,-93.68},{-140,-93.68}}, color={0,0,127}));
        connect(QVent_VS_S.y, Qdemand_VS_S.u[5]) annotation (Line(points={{-203.4,
                -130},{-176,-130},{-176,-95.36},{-140,-95.36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-220,
                  -140},{240,140}})),                                  Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-220,-140},{240,
                  140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_MOSHC;

      model Building_Envelopes_Demand_W "Made use of the Heat_cool_demand model to calculate the required heat to keep the zones at 22 °C.
  This set point only counts for the winter so use this only to size the heating system. The model calculates the required heat and delivers it immediately/directly"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-84,-18},{-56,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-84,-74},{-56,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{32,-8},{60,26}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{34,-86},{62,-54}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VN(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-16,-22},{24,-2}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={2,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=291.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VS(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{-42,-84},{-2,-64}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_OS(
          nZones=1,
          t=600,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{92,-86},{132,-66}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_ON(
          nZones=1,
          t=450,
          QNom=ones(1)*100000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*100000)
          annotation (Placement(transformation(extent={{96,-12},{136,8}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-53.2,5.8},{-45,5.8},
                {-45,12}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{
                -42,-50.2},{-53.2,-50.2}}, color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-70.28,4.4},{-70.28,-1.8},{-70,-1.8},{-70,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-57.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-83.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-78.4,-47.4},{-78.4,-28.7},{-60.48,-28.7},{-60.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-83.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-57.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-70.28,-51.6},{-70.28,-53.8},{-70,-53.8},{-70,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{46,-1.2},{45.72,-1.2},{45.72,19.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{39.6,-55.6},{39.6,-25.5},{55.52,-25.5},{55.52,-7.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{47.72,-60.4},{48,-60.4},{48,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand_VN.heatPortCon[1], VN.gainCon) annotation (Line(
              points={{-16,-10},{-40,-10},{-40,-8.2},{-56,-8.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.heatPortRad[1], VN.gainRad) annotation (Line(
              points={{-16,-14},{-40,-14},{-40,-12.4},{-56,-12.4}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.TSensor[1], VN.TSensor) annotation (Line(points={{-16.4,
                -18},{-38,-18},{-38,-1.2},{-54.6,-1.2}},       color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_VN.TSet[1])
          annotation (Line(points={{2,-99},{2,-22.2},{4,-22.2}},
                                                       color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-72.8,10},{
                -92,10}},  color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-67.2,10},
                {-64,10},{-64,22},{-62,22}},
                                        color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},
                {-64,-34},{-64,-46},{-67.2,-46}},
                                             color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{
                -92,-58},{-92,-46},{-72.8,-46}},
                                        color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},
                {30,26},{43.2,26}},color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{
                56,42},{56,26},{48.8,26}},
                                    color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,
                -42},{40,-54},{45.2,-54}},
                                      color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{
                60,-52},{50.8,-52},{50.8,-54}},
                                             color={0,127,255}));
        connect(heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (Line(
              points={{-42,-72},{-50,-72},{-50,-64.2},{-56,-64.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (Line(
              points={{-42,-76},{-50,-76},{-50,-68.4},{-56,-68.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_VS.TSensor[1]) annotation (Line(points={{-54.6,
                -57.2},{-54.6,-58},{-48,-58},{-48,-80},{-42.4,-80}},       color={0,0,
                127}));
        connect(Tset.y, heat_Cool_Demand_VS.TSet[1])
          annotation (Line(points={{2,-99},{-22,-99},{-22,-84.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_OS.heatPortCon[1], OS.gainCon) annotation (Line(
              points={{92,-74},{76,-74},{76,-74.8},{62,-74.8}}, color={191,0,0}));
        connect(heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (Line(
              points={{92,-78},{72,-78},{72,-79.6},{62,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, heat_Cool_Demand_OS.TSensor[1]) annotation (Line(points={{63.4,
                -66.8},{63.4,-66},{76,-66},{76,-82},{91.6,-82}},      color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_OS.TSet[1])
          annotation (Line(points={{2,-99},{112,-99},{112,-86.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_ON.heatPortCon[1], ON.gainCon) annotation (Line(
              points={{96,0},{78,0},{78,3.9},{60,3.9}}, color={191,0,0}));
        connect(heat_Cool_Demand_ON.heatPortRad[1], ON.gainRad) annotation (Line(
              points={{96,-4},{78,-4},{78,-1.2},{60,-1.2}}, color={191,0,0}));
        connect(Tset.y, heat_Cool_Demand_ON.TSet[1]) annotation (Line(points={{2,-99},
                {146,-99},{146,-12.2},{116,-12.2}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_ON.TSensor[1]) annotation (Line(points={{61.4,
                12.4},{78.7,12.4},{78.7,-8},{95.6,-8}},      color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_W;

      model Building_Envelopes_Demand_both
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-78,20},{-50,48}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-20,40},{-40,60}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = IDEAS.Media.Air,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-104,-34},{-76,-6}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-42,-20},{-62,0}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{38,28},{66,62}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = IDEAS.Media.Air,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-46},{64,-14}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand(
          nZones=1,
          t=300,
          QNom=ones(1)*10000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{-14,16},{26,36}})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/
              3600)*(24.5 - 27.5)))     "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/
              3600)*(22 - 18)))     "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={-39,-52})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={18,-44})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-12,-56})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(
              transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={4,-8})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm
               - 273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={4,-74})));
        TABS.TDC.TDC
                tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN_ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-12,92},{12,112}})));
         Modelica.Blocks.Sources.RealExpression TSetW2(y=switch_VN_T.y - 273.15)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-52,126})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-47.2,43.8},{-41,43.8},
                {-41,50}}, color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-63,-10},{-62,-10},
                {-62,-10.2},{-73.2,-10.2}},color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-64.28,42.4},{-64.28,36.2},{-64,36.2},{-64,25.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-51.4,42.4},{-58.7,42.4},{-58.7,24.2},{-77.44,24.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-98.4,-7.4},{-98.4,7.3},{-54.48,7.3},{-54.48,20.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-103.44,-29.8},{-82.72,-29.8},{-82.72,-11.6},{-77.4,-11.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-90.28,-11.6},{-90.28,-17.8},{-90,-17.8},{-90,-28.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{52,34.8},{51.72,34.8},{51.72,55.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-15.6},{41.6,12.5},{61.52,12.5},{61.52,28.34}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-20.4},{50,-20.4},{50,-39.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand.heatPortCon[1], VN.gainCon) annotation (Line(points={{-14,28},
                {-36,28},{-36,29.8},{-50,29.8}},          color={191,0,0}));
        connect(heat_Cool_Demand.heatPortRad[1], VN.gainRad) annotation (Line(points={{-14,24},
                {-36,24},{-36,25.6},{-50,25.6}},          color={191,0,0}));
        connect(heat_Cool_Demand.TSensor[1], VN.TSensor) annotation (Line(points={{-14.4,
                20},{-34,20},{-34,36.8},{-48.6,36.8}}, color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-39,-46.7},{-39,
                -11.35},{-8,-11.35},{-8,-8}}, color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand.TSet[1]) annotation (Line(points=
                {{4,3},{4,10},{4,15.8},{6,15.8}}, color={0,0,127}));
        connect(TSetW.y, switch_VN_T.a) annotation (Line(points={{-12,-45},{-8,
                -45},{-8,-20},{-4,-20}}, color={0,0,127}));
        connect(TsetS.y, switch_VN_T.c) annotation (Line(points={{18,-33},{16,-33},
                {16,-20},{12,-20}}, color={0,0,127}));
        connect(TSetW1.y, switch_VN_T.b)
          annotation (Line(points={{4,-63},{4,-20}}, color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-48.6,36.8},{-48.6,
                69.4},{-14,69.4},{-14,102}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_both;

      model Building_Envelopes_Demand_S "Made use of the Heat_cool_demand model to calculate the required cooling to keep the zones at 24.5 °C.
  This set point only counts for the summer so use this only to size the cooling system. The model calculates the required cooling and delivers it immediately/directly"
        import Occupancy;
        import Vaartstraat;
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-82,-18},{-54,10}})));

        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-200,120},{-184,136}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-24,2},{-44,22}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-178,120},{-162,136}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false)
                           "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-82,-74},{-54,-46}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-22,-56},{-42,-36}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{34,-10},{62,24}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypFlo,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{36,-86},{64,-54}})));

        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VN(
          nZones=1,
          t=600,
          QNom=ones(1)*10000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{-18,-22},{22,-2}})));
         Modelica.Blocks.Sources.RealExpression Tset(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={2,-110})));

         Modelica.Blocks.Sources.RealExpression Qtra_VN_W(y=2.5365*(22 + 273.15 - sim.Te))
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-196,78},{-182,94}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_W(y=(1012*66.29*1.204*0.5/3600
              /20*(22 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-166,50},{-152,64}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=273.15 + 17, uHigh=273.15 +
              17.5)
          annotation (Placement(transformation(extent={{-186,62},{-174,74}})));
        Modelica.Blocks.Logical.Switch QTra_VN
          annotation (Placement(transformation(extent={{-164,86},{-150,100}})));
        Modelica.Blocks.Logical.Switch Qinf_VN
          annotation (Placement(transformation(extent={{-126,62},{-112,76}})));
         Modelica.Blocks.Sources.RealExpression Qtra_VN_S(y=2.5365*(24.5 + 273.15 -
              sim.Te)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-192,90},{-180,106}})));
         Modelica.Blocks.Sources.RealExpression Qinf_VN_S(y=(1012*66.29*1.204*0.5/3600
              /20*(24.5 + 273.15 - sim.Te))) "Number of occupants present"
          annotation (Placement(transformation(extent={{-160,70},{-144,84}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_S(y=(1012*0.375*(72*1.204/3600)
              *(24.5 - 27.5)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-178,32},{-166,48}})));
         Modelica.Blocks.Sources.RealExpression QVent_VN_W(y=(1012*0.375*(72*1.204/3600)
              *(22 - 18)))          "Number of occupants present"
          annotation (Placement(transformation(extent={{-176,12},{-166,28}})));
        Modelica.Blocks.Logical.Switch QVent_VN
          annotation (Placement(transformation(extent={{-134,26},{-120,40}})));
         Modelica.Blocks.Sources.RealExpression Qsol(y=-VN.radDistr.iSolDir.Q_flow -
              VN.radDistr.iSolDif.Q_flow) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,118},{-122,138}})));
         Modelica.Blocks.Sources.RealExpression QIG(y=-(VN.occNum.nOcc*73) - (light41.y
              *37.66)) "Number of occupants present"
          annotation (Placement(transformation(extent={{-142,104},{-122,124}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251_1
          annotation (Placement(transformation(extent={{-202,62},{-192,74}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN(nu=5)
          annotation (Placement(transformation(extent={{-104,116},{-92,128}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_W(nu=5)
          annotation (Placement(transformation(extent={{-92,92},{-80,104}})));
        Modelica.Blocks.Math.MultiSum Qdemand_VN_S(nu=5)
          annotation (Placement(transformation(extent={{-92,72},{-80,84}})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-112,0},{-92,20}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VN(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-62,32})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_VS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-100,-34})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{-132,-68},{-112,-48}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_ON(
          redeclare package Medium = Medium,
          m_flow=0.375*(2*72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={62,52})));
        IDEAS.Fluid.Sources.Boundary_pT bou_ON(redeclare package Medium = Medium,
            nPorts=1) annotation (Placement(transformation(extent={{-6,34},{14,54}})));
        IDEAS.Fluid.Sources.MassFlowSource_T msource_OS(
          redeclare package Medium = Medium,
          m_flow=0.375*(72*1.204/3600),
          T=300.65,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={60,-36})));
        IDEAS.Fluid.Sources.Boundary_pT bou_OS(redeclare package Medium = Medium,
            nPorts=1)
          annotation (Placement(transformation(extent={{12,-52},{32,-32}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_VS(
          nZones=1,
          t=600,
          QNom=ones(1)*10000,
          VZones=ones(1)*66.29,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{-42,-84},{-2,-64}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_OS(
          nZones=1,
          t=600,
          QNom=ones(1)*10000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{92,-86},{132,-66}})));
        Case_O4.Accumulator.Heat_Cool_Demand heat_Cool_Demand_ON(
          nZones=1,
          t=450,
          QNom=ones(1)*10000,
          VZones=ones(1)*43.2,
          Q_design=ones(1)*10000)
          annotation (Placement(transformation(extent={{94,-12},{134,8}})));
      equation
        connect(VN.uLig, light41.y) annotation (Line(points={{-51.2,5.8},{-45,5.8},{-45,
                12}},      color={0,0,127}));
        connect(light56.y, VS.uLig) annotation (Line(points={{-43,-46},{-42,-46},{-42,
                -50.2},{-51.2,-50.2}},     color={0,0,127}));
        connect(VN.proBusCei[1], VN.proBusFlo[1]) annotation (Line(
            points={{-68.28,4.4},{-68.28,-1.8},{-68,-1.8},{-68,-12.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1], VN.proBusD[1]) annotation (Line(
            points={{-55.4,4.4},{-62.7,4.4},{-62.7,-13.8},{-81.44,-13.8}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1], VN.proBusC[1]) annotation (Line(
            points={{-76.4,-47.4},{-76.4,-28.7},{-58.48,-28.7},{-58.48,-17.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1], VS.proBusB[1]) annotation (Line(
            points={{-81.44,-69.8},{-62.72,-69.8},{-62.72,-51.6},{-55.4,-51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1], VS.proBusFlo[1]) annotation (Line(
            points={{-68.28,-51.6},{-68.28,-53.8},{-68,-53.8},{-68,-68.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.proBusFlo, ON.proBusCei) annotation (Line(
            points={{48,-3.2},{47.72,-3.2},{47.72,17.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA, ON.proBusC) annotation (Line(
            points={{41.6,-55.6},{41.6,-25.5},{57.52,-25.5},{57.52,-9.66}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei, OS.proBusFlo) annotation (Line(
            points={{49.72,-60.4},{50,-60.4},{50,-79.6}},
            color={255,204,51},
            thickness=0.5));
        connect(heat_Cool_Demand_VN.heatPortCon[1], VN.gainCon) annotation (Line(
              points={{-18,-10},{-40,-10},{-40,-8.2},{-54,-8.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.heatPortRad[1], VN.gainRad) annotation (Line(
              points={{-18,-14},{-40,-14},{-40,-12.4},{-54,-12.4}}, color={191,0,0}));
        connect(heat_Cool_Demand_VN.TSensor[1], VN.TSensor) annotation (Line(points={{
                -18.4,-18},{-38,-18},{-38,-1.2},{-52.6,-1.2}}, color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_VN.TSet[1])
          annotation (Line(points={{2,-99},{2,-22.2}}, color={0,0,127}));
        connect(Qtra_VN_W.y, QTra_VN.u3) annotation (Line(points={{-181.3,86},{-180,86},
                {-180,87.4},{-165.4,87.4}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qinf_VN.u3) annotation (Line(points={{-151.3,57},{-136,57},
                {-136,63.4},{-127.4,63.4}}, color={0,0,127}));
        connect(Qtra_VN_S.y, QTra_VN.u1) annotation (Line(points={{-179.4,98},{-182,98},
                {-182,98.6},{-165.4,98.6}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qinf_VN.u1) annotation (Line(points={{-143.2,77},{-134,77},
                {-134,74.6},{-127.4,74.6}}, color={0,0,127}));
        connect(QVent_VN_S.y, QVent_VN.u1) annotation (Line(points={{-165.4,40},{-150,
                40},{-150,38.6},{-135.4,38.6}}, color={0,0,127}));
        connect(QVent_VN_W.y, QVent_VN.u3) annotation (Line(points={{-165.5,20},{-150,
                20},{-150,27.4},{-135.4,27.4}}, color={0,0,127}));
        connect(runningMeanTemperatureEN15251_1.TRm, hysteresis.u)
          annotation (Line(points={{-191.7,68},{-187.2,68}}, color={0,0,127}));
        connect(hysteresis.y, QTra_VN.u2) annotation (Line(points={{-173.4,68},{-168,68},
                {-168,93},{-165.4,93}}, color={255,0,255}));
        connect(hysteresis.y, Qinf_VN.u2) annotation (Line(points={{-173.4,68},{-138,68},
                {-138,69},{-127.4,69}}, color={255,0,255}));
        connect(hysteresis.y, QVent_VN.u2) annotation (Line(points={{-173.4,68},{-162,
                68},{-162,33},{-135.4,33}}, color={255,0,255}));
        connect(Qsol.y, Qdemand_VN.u[1]) annotation (Line(points={{-121,128},{-109.5,128},
                {-109.5,125.36},{-104,125.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,123.68},{-104,123.68}}, color={0,0,127}));
        connect(QTra_VN.y, Qdemand_VN.u[3]) annotation (Line(points={{-149.3,93},{-149.3,
                106.5},{-104,106.5},{-104,122}}, color={0,0,127}));
        connect(Qinf_VN.y, Qdemand_VN.u[4]) annotation (Line(points={{-111.3,69},{-111.3,
                101.5},{-104,101.5},{-104,120.32}}, color={0,0,127}));
        connect(QVent_VN.y, Qdemand_VN.u[5]) annotation (Line(points={{-119.3,33},{-119.3,
                34.5},{-104,34.5},{-104,118.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_W.u[1]) annotation (Line(points={{-121,128},{-110,128},
                {-110,101.36},{-92,101.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_W.u[2]) annotation (Line(points={{-121,114},{-110,114},
                {-110,99.68},{-92,99.68}}, color={0,0,127}));
        connect(Qtra_VN_W.y, Qdemand_VN_W.u[3]) annotation (Line(points={{-181.3,86},{
                -134,86},{-134,98},{-92,98}}, color={0,0,127}));
        connect(Qinf_VN_W.y, Qdemand_VN_W.u[4]) annotation (Line(points={{-151.3,57},{
                -120.65,57},{-120.65,96.32},{-92,96.32}}, color={0,0,127}));
        connect(QVent_VN_W.y, Qdemand_VN_W.u[5]) annotation (Line(points={{-165.5,20},
                {-128,20},{-128,94.64},{-92,94.64}}, color={0,0,127}));
        connect(Qsol.y, Qdemand_VN_S.u[1]) annotation (Line(points={{-121,128},{-106,128},
                {-106,81.36},{-92,81.36}}, color={0,0,127}));
        connect(QIG.y, Qdemand_VN_S.u[2]) annotation (Line(points={{-121,114},{-121,93},
                {-92,93},{-92,79.68}}, color={0,0,127}));
        connect(Qtra_VN_S.y, Qdemand_VN_S.u[3]) annotation (Line(points={{-179.4,98},{
                -134,98},{-134,78},{-92,78}}, color={0,0,127}));
        connect(Qinf_VN_S.y, Qdemand_VN_S.u[4]) annotation (Line(points={{-143.2,77},{
                -117.6,77},{-117.6,76.32},{-92,76.32}}, color={0,0,127}));
        connect(QVent_VN_S.y, Qdemand_VN_S.u[5]) annotation (Line(points={{-165.4,40},
                {-128,40},{-128,74.64},{-92,74.64}}, color={0,0,127}));
        connect(VN.port_b, bou_VN.ports[1]) annotation (Line(points={{-70.8,10},{-92,10},
                {-92,10}}, color={0,127,255}));
        connect(VN.port_a, msource_VN.ports[1]) annotation (Line(points={{-65.2,10},{-64,
                10},{-64,22},{-62,22}}, color={0,127,255}));
        connect(msource_VS.ports[1], VS.port_a) annotation (Line(points={{-90,-34},{-64,
                -34},{-64,-46},{-65.2,-46}}, color={0,127,255}));
        connect(bou_VS.ports[1], VS.port_b) annotation (Line(points={{-112,-58},{-92,-58},
                {-92,-46},{-70.8,-46}}, color={0,127,255}));
        connect(bou_ON.ports[1], ON.port_b) annotation (Line(points={{14,44},{30,44},{
                30,24},{45.2,24}}, color={0,127,255}));
        connect(msource_ON.ports[1], ON.port_a) annotation (Line(points={{62,42},{56,42},
                {56,24},{50.8,24}}, color={0,127,255}));
        connect(bou_OS.ports[1], OS.port_b) annotation (Line(points={{32,-42},{40,-42},
                {40,-54},{47.2,-54}}, color={0,127,255}));
        connect(msource_OS.ports[1], OS.port_a) annotation (Line(points={{60,-46},{60,
                -52},{52.8,-52},{52.8,-54}}, color={0,127,255}));
        connect(heat_Cool_Demand_VS.heatPortCon[1], VS.gainCon) annotation (Line(
              points={{-42,-72},{-50,-72},{-50,-64.2},{-54,-64.2}}, color={191,0,0}));
        connect(heat_Cool_Demand_VS.heatPortRad[1], VS.gainRad) annotation (Line(
              points={{-42,-76},{-50,-76},{-50,-68.4},{-54,-68.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_VS.TSensor[1]) annotation (Line(points={{
                -52.6,-57.2},{-52.6,-58},{-48,-58},{-48,-80},{-42.4,-80}}, color={0,0,
                127}));
        connect(Tset.y, heat_Cool_Demand_VS.TSet[1])
          annotation (Line(points={{2,-99},{-22,-99},{-22,-84.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_OS.heatPortCon[1], OS.gainCon) annotation (Line(
              points={{92,-74},{76,-74},{76,-74.8},{64,-74.8}}, color={191,0,0}));
        connect(heat_Cool_Demand_OS.heatPortRad[1], OS.gainRad) annotation (Line(
              points={{92,-78},{72,-78},{72,-79.6},{64,-79.6}}, color={191,0,0}));
        connect(OS.TSensor, heat_Cool_Demand_OS.TSensor[1]) annotation (Line(points={{
                65.4,-66.8},{65.4,-66},{76,-66},{76,-82},{91.6,-82}}, color={0,0,127}));
        connect(Tset.y, heat_Cool_Demand_OS.TSet[1])
          annotation (Line(points={{2,-99},{112,-99},{112,-86.2}}, color={0,0,127}));
        connect(heat_Cool_Demand_ON.heatPortCon[1], ON.gainCon) annotation (Line(
              points={{94,0},{78,0},{78,1.9},{62,1.9}}, color={191,0,0}));
        connect(heat_Cool_Demand_ON.heatPortRad[1], ON.gainRad) annotation (Line(
              points={{94,-4},{78,-4},{78,-3.2},{62,-3.2}}, color={191,0,0}));
        connect(Tset.y, heat_Cool_Demand_ON.TSet[1]) annotation (Line(points={{2,-99},
                {146,-99},{146,-12.2},{114,-12.2}}, color={0,0,127}));
        connect(ON.TSensor, heat_Cool_Demand_ON.TSensor[1]) annotation (Line(points={{
                63.4,10.4},{78.7,10.4},{78.7,-8},{93.6,-8}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},
                  {160,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-200,-120},{160,140}})),
          experiment(StopTime=31536000));
      end Building_Envelopes_Demand_S;
    end HC_demand_radconv;

    model Building_Envelopes1
      extends Building_Envelopes;
    end Building_Envelopes1;
    annotation ();
  end Building_Envelopes;

  package TABS_1 "This package is the first stage of the project."

    package TDC
      "Temperature setpoints, thermal comfort range and calculation TDC"
      model TDC "Calculation of the thermal discomfort"

        Modelica.Blocks.Continuous.Integrator TDCup(k=1/3600)
          annotation (Placement(transformation(extent={{36,18},{56,38}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-4,16},{16,38}})));
        replaceable IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDC.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{96,-10},{116,10}})));
        Modelica.Blocks.Math.Add add1(k2=-1)
          annotation (Placement(transformation(extent={{-2,-66},{18,-44}})));
        Modelica.Blocks.Continuous.Integrator TDCdown(k=-1/3600)
          annotation (Placement(transformation(extent={{42,-66},{62,-46}})));
        Modelica.Blocks.Math.MultiSum TDCtot(nu=2)
          annotation (Placement(transformation(extent={{74,-4},{86,8}})));
        Modelica.Blocks.Interfaces.RealInput a
          annotation (Placement(transformation(extent={{-160,-20},{-120,20}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-120,80},{-100,100}})));
        Modelica.Blocks.Sources.RealExpression Tset(y=if TRM.TRm < 273.15+10 then 22 elseif
              TRM.TRm > 273.15+15 then 24.5 else 22 + 2.5*((TRM.TRm-273.15) - 10)/5)
          annotation (Placement(transformation(extent={{-34,82},{-14,102}})));
        Modelica.Blocks.Sources.RealExpression TRMdown(y=10)
          annotation (Placement(transformation(extent={{-92,80},{-72,100}})));
        Modelica.Blocks.Sources.RealExpression TRMup(y=15)
          annotation (Placement(transformation(extent={{-64,80},{-44,100}})));
        Modelica.Blocks.Sources.RealExpression Tup(y=if TRM.TRm < 273.15 + 10
               then 22 + 2 elseif TRM.TRm > 273.15 + 15 then 24.5 + 1.5 else 22 + 2
               + 2.5*((TRM.TRm - 273.15) - 10)/5)
          annotation (Placement(transformation(extent={{-118,62},{-98,82}})));
        Modelica.Blocks.Sources.RealExpression Tlow(y=if TRM.TRm < 273.15 + 10
               then 22 - 2 elseif TRM.TRm > 273.15 + 15 then 24.5 - 1.5 else 22 - 2
               + 2.5*((TRM.TRm - 273.15) - 10)/5)
          annotation (Placement(transformation(extent={{-114,-48},{-94,-28}})));
        if_statement_greater if_up
          annotation (Placement(transformation(extent={{-42,42},{-22,62}})));
        if_statement_less if_down
          annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
        Modelica.Blocks.Math.Add Top(k2=-1)
          annotation (Placement(transformation(extent={{-86,-8},{-66,14}})));
        Modelica.Blocks.Sources.RealExpression Kelvin(y=273.15)
          annotation (Placement(transformation(extent={{-120,-28},{-100,-8}})));
      equation
        //connect(sim.Te, add.u1);
        connect(add.y, TDCup.u) annotation (Line(points={{17,27},{21.5,27},{21.5,
                28},{34,28}}, color={0,0,127}));

        /*if cosine.y > 22 then
       connect( cosine.y, add.u1);
  else
    connect(const1.y,add.u1);
  end if;*/
        connect(add1.y, TDCdown.u) annotation (Line(points={{19,-55},{34.5,-55},{
                34.5,-56},{40,-56}}, color={0,0,127}));
        connect(TDCup.y, TDCtot.u[1]) annotation (Line(points={{57,28},{66,28},{
                66,4.1},{74,4.1}}, color={0,0,127}));
        connect(TDCdown.y, TDCtot.u[2]) annotation (Line(points={{63,-56},{68,-56},
                {68,-0.1},{74,-0.1}}, color={0,0,127}));
        connect(TDCtot.y, TDC_Json.u[1]) annotation (Line(points={{87.02,2},{90,2},
                {90,0},{96,0}}, color={0,0,127}));
        connect(Tup.y, add.u2) annotation (Line(points={{-97,72},{-54,72},{-54,
                20.4},{-6,20.4}}, color={0,0,127}));
        connect(Tup.y, if_up.Tup) annotation (Line(points={{-97,72},{-76,72},{-76,
                58},{-44,58}}, color={0,0,127}));
        connect(if_up.y, add.u1) annotation (Line(points={{-21,52},{-14,52},{-14,
                33.6},{-6,33.6}}, color={0,0,127}));
        connect(Tlow.y, if_down.Tdown) annotation (Line(points={{-93,-38},{-78,
                -38},{-78,-14.2},{-42,-14.2}}, color={0,0,127}));
        connect(if_down.y, add1.u1) annotation (Line(points={{-19,-20},{-12,-20},
                {-12,-48.4},{-4,-48.4}}, color={0,0,127}));
        connect(Tlow.y, add1.u2) annotation (Line(points={{-93,-38},{-38,-38},{
                -38,-61.6},{-4,-61.6}}, color={0,0,127}));
        connect(a, Top.u1) annotation (Line(points={{-140,0},{-118,0},{-118,9.6},
                {-88,9.6}}, color={0,0,127}));
        connect(Kelvin.y, Top.u2) annotation (Line(points={{-99,-18},{-96,-18},{
                -96,-3.6},{-88,-3.6}}, color={0,0,127}));
        connect(Top.y, if_up.u) annotation (Line(points={{-65,3},{-65,27.5},{-44,
                27.5},{-44,52}}, color={0,0,127}));
        connect(Top.y, if_down.u) annotation (Line(points={{-65,3},{-65,-19.5},{
                -42,-19.5},{-42,-20}}, color={0,0,127}));
        annotation (experiment(StopTime=12, __Dymola_NumberOfIntervals=5000),
          Diagram(coordinateSystem(extent={{-120,-100},{120,100}})),
          Icon(coordinateSystem(extent={{-120,-100},{120,100}}), graphics={Rectangle(
                extent={{-120,98},{120,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-98,40},{96,-52}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="TDC
")}));
      end TDC;

      model if_statement_less
        "Let the signal pass if the if-statement is met"

        //  parameter Real Tdown( unit="K", displayUnit="degC") "Bottom limit for thermal comfort";

        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));

        Modelica.Blocks.Interfaces.RealInput Tdown
          annotation (Placement(transformation(extent={{-140,38},{-100,78}})));
      equation
        if u < Tdown then
          u=y;
        else
          y=Tdown;
        end if;

        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Text(
                extent={{-66,16},{64,-56}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="If <
"),     Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1)}),                                    Diagram(
              coordinateSystem(preserveAspectRatio=false)),
                    Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-68,50},{60,-58}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="If >")}),                                  Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end if_statement_less;

      model if_statement_greater
        "Let the signal pass if the if-statement is met"

        //parameter Real Tup( unit="K", displayUnit="degC") "Upper limit for thermal comfort";

        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));
        Modelica.Blocks.Interfaces.RealInput Tup
          annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
      equation
        if u > Tup then
          u=y;
        else
          y=Tup;
        end if;
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-68,50},{60,-58}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="If >")}),                                  Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end if_statement_greater;

      model Test_discomfort "Test the thermal discomfort model with a cosine"

        Modelica.Blocks.Sources.Constant const1(k=22)
          annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
        Modelica.Blocks.Continuous.Integrator integrator
          annotation (Placement(transformation(extent={{10,16},{30,36}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-40,12},{-20,34}})));
        replaceable IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="TDC.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{84,-10},{104,10}})));
        Modelica.Blocks.Sources.Cosine cosine(
          amplitude=2,
          freqHz=1/8,
          offset=21)
          annotation (Placement(transformation(extent={{-106,54},{-86,74}})));
        Modelica.Blocks.Sources.Constant const2(k=20)
          annotation (Placement(transformation(extent={{-108,-86},{-88,-66}})));
        Modelica.Blocks.Math.Add add1(k2=-1)
          annotation (Placement(transformation(extent={{-24,-68},{-4,-46}})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=-1)
          annotation (Placement(transformation(extent={{16,-68},{36,-48}})));
        Modelica.Blocks.Math.MultiSum multiSum(nu=2)
          annotation (Placement(transformation(extent={{48,-6},{60,6}})));
        if_statement_greater if_statement_greater1
          annotation (Placement(transformation(extent={{-68,42},{-48,62}})));
        if_statement_less if_statement_less1
          annotation (Placement(transformation(extent={{-66,-40},{-46,-20}})));
      equation
        //connect(sim.Te, add.u1);
        connect(const1.y, add.u2) annotation (Line(points={{-89,0},{-50,0},{-50,16.4},
                {-42,16.4}}, color={0,0,127}));
        connect(add.y, integrator.u) annotation (Line(points={{-19,23},{-4.5,23},{-4.5,
                26},{8,26}}, color={0,0,127}));

        /*if cosine.y > 22 then
       connect( cosine.y, add.u1);
  else
    connect(const1.y,add.u1);
  end if;*/
        connect(const2.y, add1.u2) annotation (Line(points={{-87,-76},{-56,-76},{-56,-63.6},
                {-26,-63.6}}, color={0,0,127}));
        connect(add1.y, integrator1.u) annotation (Line(points={{-3,-57},{6.5,-57},{6.5,
                -58},{14,-58}}, color={0,0,127}));
        connect(integrator.y, multiSum.u[1]) annotation (Line(points={{31,26},{40,26},
                {40,2.1},{48,2.1}}, color={0,0,127}));
        connect(integrator1.y, multiSum.u[2]) annotation (Line(points={{37,-58},{42,-58},
                {42,-2.1},{48,-2.1}}, color={0,0,127}));
        connect(multiSum.y, jsonWri.u[1])
          annotation (Line(points={{61.02,0},{84,0}}, color={0,0,127}));
        connect(const1.y, if_statement_greater1.u) annotation (Line(points={{-89,
                0},{-78,0},{-78,52},{-70,52}}, color={0,0,127}));
        connect(cosine.y, if_statement_greater1.Tup) annotation (Line(points={{
                -85,64},{-76,64},{-76,58},{-70,58}}, color={0,0,127}));
        connect(if_statement_greater1.y, add.u1) annotation (Line(points={{-47,52},
                {-44,52},{-44,29.6},{-42,29.6}}, color={0,0,127}));
        connect(const1.y, if_statement_less1.u) annotation (Line(points={{-89,0},
                {-78,0},{-78,-30},{-68,-30}}, color={0,0,127}));
        connect(cosine.y, if_statement_less1.Tdown) annotation (Line(points={{-85,
                64},{-76,64},{-76,-24.2},{-68,-24.2}}, color={0,0,127}));
        connect(if_statement_less1.y, add1.u1) annotation (Line(points={{-45,-30},
                {-34,-30},{-34,-50.4},{-26,-50.4}}, color={0,0,127}));
        annotation (experiment(StopTime=12, __Dymola_NumberOfIntervals=5000),
          Diagram(coordinateSystem(extent={{-120,-100},{120,100}})),
          Icon(coordinateSystem(extent={{-120,-100},{120,100}})));
      end Test_discomfort;
    end TDC;

    package Test
      model TABS_1_HCCC_Sourbron_radconvtest "Heatinc curve/cooling curve: Tsup directly written
  Heating: TRM<10 --> heating curve
  mid season: 10<TRM<15 --> no water circulation
  Cooling: TRM > 15 --> cooling curves
  Cooling curves retrieved from Sourbron"
        import Occupancy;
        import Case_O4;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-164,18})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-164,-12})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-164,-40})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-166,48})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-218,136},{-198,156}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-188,142},{-172,158}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-164,138},{-144,158}})));
        Modelica.Blocks.Sources.RealExpression HC_VN_0J(y=(-5/23)*(TRM.TRm - 273.15) +
              21 + 273.15) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-74,148})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol1(y=(-15/23)*(TRM.TRm - 273.15)
               + 33.7)
          annotation (Placement(transformation(extent={{-48,136},{-28,156}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.8544) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-98,-28})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-96,-58})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-96,-86})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-98,2})));
        Modelica.Blocks.Sources.RealExpression HC_VS(y=(-5/23)*(TRM.TRm - 273.15) + 21
               + 273.15) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-122,62})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{112,64},{140,98}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS1(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{114,-14},{142,18}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-20,66},{-48,94}})));
         Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-58,110})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-18,-2},{-46,26}})));
         Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-58,38})));
        TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-12,92},{12,112}})));
        TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-14,28},{10,48}})));
        BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-160,94})));
        Modelica.Blocks.Sources.RealExpression HC_VN_MS(y=-0.22*(TRM.TRm - 273.15)
               + 25.1 + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-140,126})));
        Modelica.Blocks.Sources.RealExpression T_N_VN(y=273.15 + 21) annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-159,120})));
        Modelica.Blocks.Sources.RealExpression CC_VN_MS(y=-0.16*(TRM.TRm - 273.15)
               + 24.1 + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-174,126})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-202,98})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.00655) annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-195,122})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0) annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-203,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.5*0.1305) annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-215,124})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_MS(y=HC_VN_MS.y -
              273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={72,124})));
        Modelica.Blocks.Sources.RealExpression pres_CC_VN_MS(y=CC_VN_MS.y -
              273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={70,106})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_0J(y=HC_VN_0J.y -
              273.15) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={72,146})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow VN_conv
          annotation (Placement(transformation(extent={{-92,74},{-72,94}})));
        Modelica.Blocks.Sources.RealExpression conv(y=TABSVN.QTot*0.7)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-118,84})));
        Modelica.Blocks.Sources.RealExpression rad(y=TABSVN.QTot*0.3) annotation (
           Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-104,72})));
        Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow VN_rad
          annotation (Placement(transformation(extent={{-82,62},{-62,82}})));
      equation
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-164,-22},{-164,-30}}, color={0,127,255}));
        connect(TABSVN.port_b, Tout_VN.port_a)
          annotation (Line(points={{-164,8},{-164,-2}}, color={0,127,255}));
        connect(m_VN.ports[1], TABSVN.port_a) annotation (Line(points={{-166,38},
                {-166,28},{-164,28}}, color={0,127,255}));
        connect(Tout_VS.port_b, bou_VS.ports[1])
          annotation (Line(points={{-96,-68},{-96,-76}}, color={0,127,255}));
        connect(TABSVS.port_b, Tout_VS.port_a) annotation (Line(points={{-98,-38},
                {-98,-42},{-96,-42},{-96,-48}}, color={0,127,255}));
        connect(HC_VS.y, m_VS.T_in)
          annotation (Line(points={{-122,51},{-122,14},{-94,14}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS.port_a)
          annotation (Line(points={{-98,-8},{-98,-18}}, color={0,127,255}));
        connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
            points={{126,70.8},{125.72,70.8},{125.72,91.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusCei, OS1.proBusFlo) annotation (Line(
            points={{127.72,11.6},{128,11.6},{128,-7.6}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusA, ON.proBusC) annotation (Line(
            points={{119.6,16.4},{119.6,46.5},{135.52,46.5},{135.52,64.34}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.uLig,light1. y)
          annotation (Line(points={{-50.8,89.8},{-58,89.8},{-58,99}},
                                                                   color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-33.72,88.4},{-33.72,86},{-34,86},{-34,71.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{-46.6,88.4},{-38.7,88.4},{-38.7,70.2},{-20.56,70.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-23.6,24.6},{-23.6,45.3},{-43.52,45.3},{-43.52,66.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-31.72,20.4},{-31.72,14},{-32,14},{-32,3.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-18.56,2.2},{-36.72,2.2},{-36.72,20.4},{-44.6,20.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light2.y,VS. uLig) annotation (Line(points={{-58,27},{-58,21.8},{-48.8,
                21.8}},        color={0,0,127}));
        connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{-88,
                -28},{-68,-28},{-68,-0.6},{-46,-0.6}}, color={191,0,0}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-49.4,82.8},{-49.4,101.4},
                {-14,101.4},{-14,102}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-47.4,14.8},{-52,14.8},
                {-52,38},{-16,38}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-143.4,148},{
                -104,148},{-104,94},{-148,94}}, color={0,0,127}));
        connect(switch_VN_T.y, m_VN.T_in) annotation (Line(points={{-160,83},{
                -162,83},{-162,60}}, color={0,0,127}));
        connect(HC_VN_MS.y, switch_VN_T.a) annotation (Line(points={{-140,115},{
                -146,115},{-146,106},{-152,106}}, color={0,0,127}));
        connect(T_N_VN.y, switch_VN_T.b) annotation (Line(points={{-159,114.5},{
                -159,110.25},{-160,110.25},{-160,106}}, color={0,0,127}));
        connect(CC_VN_MS.y, switch_VN_T.c) annotation (Line(points={{-174,115},{
                -170,115},{-170,106},{-168,106}}, color={0,0,127}));
        connect(switch_VN_m.y, m_VN.m_flow_in) annotation (Line(points={{-202,87},
                {-202,72},{-158,72},{-158,60}}, color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m.a) annotation (Line(points={{-195,116.5},{
                -195,114.25},{-194,114.25},{-194,110}}, color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m.b) annotation (Line(points={{-203,120.5},{
                -203,116.25},{-202,116.25},{-202,110}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m.c) annotation (Line(points={{-215,118.5},{
                -215,116.25},{-210,116.25},{-210,110}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_m.u) annotation (Line(points={{-148,94},
                {-168,94},{-168,98},{-190,98}}, color={0,0,127}));
        connect(conv.y, VN_conv.Q_flow)
          annotation (Line(points={{-107,84},{-92,84}}, color={0,0,127}));
        connect(VN_conv.port, VN.gainCon) annotation (Line(points={{-72,84},{-60,
                84},{-60,75.8},{-48,75.8}}, color={191,0,0}));
        connect(VN_rad.Q_flow, rad.y)
          annotation (Line(points={{-82,72},{-93,72}}, color={0,0,127}));
        connect(VN_rad.port, VN.gainRad) annotation (Line(points={{-62,72},{-56,
                72},{-56,71.6},{-48,71.6}}, color={191,0,0}));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{
                  160,160}})),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},
                  {160,160}})),
          experiment(StopTime=31536000));
      end TABS_1_HCCC_Sourbron_radconvtest;

      model TABS_1_onecurve "Heatinc curve/cooling curve: Tsup directly written
  only HCCCC curve and thermal comfort range: 21-23 throughout whole year"
        import Occupancy;
        import Case_O4;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-164,18})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-164,-12})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-164,-40})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-166,48})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-218,136},{-198,156}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-188,142},{-172,158}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-164,138},{-144,158}})));
        Modelica.Blocks.Sources.RealExpression HC_VN_0J(y=(-5/23)*(TRM.TRm - 273.15) +
              21 + 273.15) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-74,148})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol1(y=(-15/23)*(TRM.TRm - 273.15)
               + 33.7)
          annotation (Placement(transformation(extent={{-48,136},{-28,156}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.8544) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-98,-28})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-96,-58})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-96,-86})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-98,2})));
        Modelica.Blocks.Sources.RealExpression HC_VS(y=(-5/23)*(TRM.TRm - 273.15) + 21
               + 273.15) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-122,62})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{112,64},{140,98}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS1(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{114,-14},{142,18}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-20,66},{-48,94}})));
         Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-58,110})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Outer_wall conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=true) "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-18,-2},{-46,26}})));
         Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-58,38})));
        TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-12,92},{12,112}})));
        TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-14,28},{10,48}})));
        BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-160,94})));
        Modelica.Blocks.Sources.RealExpression HC_VN_MS(y=-0.22*(TRM.TRm - 273.15) + 23.5
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-140,126})));
        Modelica.Blocks.Sources.RealExpression T_N_VN(y=-0.16*(TRM.TRm - 273.15)
               + 23.5 + 273.15)                    annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-159,118})));
        Modelica.Blocks.Sources.RealExpression CC_VN_MS(y=-0.16*(TRM.TRm - 273.15)
               + 23.5 + 273.15)
                         annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-174,126})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-202,98})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.8506*0.0077)
                                                                 annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-195,122})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.0867*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-203,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.43355*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-215,124})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_MS(y=HC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={72,124})));
        Modelica.Blocks.Sources.RealExpression pres_CC_VN_MS(y=CC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={70,106})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_0J(y=HC_VN_0J.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={72,146})));
        Modelica.Blocks.Sources.RealExpression pres_N_VN_MS(y=T_N_VN.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={66,76})));
        Modelica.Blocks.Sources.RealExpression aup(y=23) annotation (Placement(
              transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={54,24})));
        Modelica.Blocks.Sources.RealExpression alow(y=21) annotation (Placement(
              transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={54,-2})));
      equation
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-164,-22},{-164,-30}}, color={0,127,255}));
        connect(TABSVN.port_b, Tout_VN.port_a)
          annotation (Line(points={{-164,8},{-164,-2}}, color={0,127,255}));
        connect(m_VN.ports[1], TABSVN.port_a) annotation (Line(points={{-166,38},{-166,
                28},{-164,28}}, color={0,127,255}));
        connect(Tout_VS.port_b, bou_VS.ports[1])
          annotation (Line(points={{-96,-68},{-96,-76}}, color={0,127,255}));
        connect(TABSVS.port_b, Tout_VS.port_a) annotation (Line(points={{-98,-38},{-98,
                -42},{-96,-42},{-96,-48}}, color={0,127,255}));
        connect(HC_VS.y, m_VS.T_in)
          annotation (Line(points={{-122,51},{-122,14},{-94,14}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS.port_a)
          annotation (Line(points={{-98,-8},{-98,-18}}, color={0,127,255}));
        connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
            points={{126,70.8},{125.72,70.8},{125.72,91.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusCei, OS1.proBusFlo) annotation (Line(
            points={{127.72,11.6},{128,11.6},{128,-7.6}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusA, ON.proBusC) annotation (Line(
            points={{119.6,16.4},{119.6,46.5},{135.52,46.5},{135.52,64.34}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.uLig,light1. y)
          annotation (Line(points={{-50.8,89.8},{-58,89.8},{-58,99}},
                                                                   color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-33.72,88.4},{-33.72,86},{-34,86},{-34,71.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{-46.6,88.4},{-38.7,88.4},{-38.7,70.2},{-20.56,70.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-23.6,24.6},{-23.6,45.3},{-43.52,45.3},{-43.52,66.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-31.72,20.4},{-31.72,14},{-32,14},{-32,3.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-18.56,2.2},{-36.72,2.2},{-36.72,20.4},{-44.6,20.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light2.y,VS. uLig) annotation (Line(points={{-58,27},{-58,21.8},{-48.8,
                21.8}},        color={0,0,127}));
        connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{-48,67.4},
                {-102,67.4},{-102,18},{-154,18}}, color={191,0,0}));
        connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{-88,-28},
                {-68,-28},{-68,-0.6},{-46,-0.6}}, color={191,0,0}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-49.4,82.8},{-49.4,101.4},
                {-14,101.4},{-14,102}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-47.4,14.8},{-52,14.8},
                {-52,38},{-16,38}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-143.4,148},{-104,148},
                {-104,94},{-148,94}}, color={0,0,127}));
        connect(switch_VN_T.y, m_VN.T_in)
          annotation (Line(points={{-160,83},{-162,83},{-162,60}}, color={0,0,127}));
        connect(HC_VN_MS.y, switch_VN_T.a) annotation (Line(points={{-140,115},{-146,115},
                {-146,106},{-152,106}}, color={0,0,127}));
        connect(T_N_VN.y, switch_VN_T.b) annotation (Line(points={{-159,112.5},{-159,110.25},
                {-160,110.25},{-160,106}}, color={0,0,127}));
        connect(CC_VN_MS.y, switch_VN_T.c) annotation (Line(points={{-174,115},{-170,115},
                {-170,106},{-168,106}}, color={0,0,127}));
        connect(switch_VN_m.y, m_VN.m_flow_in) annotation (Line(points={{-202,87},{-202,
                72},{-158,72},{-158,60}}, color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m.a) annotation (Line(points={{-195,116.5},{-195,114.25},
                {-194,114.25},{-194,110}}, color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m.b) annotation (Line(points={{-203,120.5},{-203,116.25},
                {-202,116.25},{-202,110}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m.c) annotation (Line(points={{-215,118.5},{-215,116.25},
                {-210,116.25},{-210,110}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_m.u) annotation (Line(points={{-148,94},{-168,
                94},{-168,98},{-190,98}}, color={0,0,127}));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,160}})),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,
                  160}})),
          experiment(StopTime=31536000));
      end TABS_1_onecurve;
    end Test;

    package BaseClasses

      block Switch_3 "Switch between three Real signals. a:H, b=N, c=C according to the TRM (EN15251)"
        extends Modelica.Blocks.Icons.PartialBooleanBlock;
        Modelica.Blocks.Interfaces.RealInput a "Connector of first Real input signal"
          annotation (Placement(transformation(extent={{-140,60},{-100,100}})));
        Modelica.Blocks.Interfaces.RealInput c
          "Connector of second Real input signal"
          annotation (Placement(transformation(extent={{-140,-100},{-100,-60}})));
        Modelica.Blocks.Interfaces.RealOutput y "Connector of Real output signal"
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));

        Modelica.Blocks.Interfaces.RealInput u "Connector of first Real input signal"
          annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={0,120})));
        Modelica.Blocks.Interfaces.RealInput b "Connector of first Real input signal"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
      equation
        if u < 273.15+10 then
           y=a;
        elseif 273.15+10 < u and u < 273.15+15 then
          y=b;
        else
           y=c;
        end if;
        annotation (
          defaultComponentName="switch1",
          Documentation(info="<html>
<p>The Logical.Switch switches, depending on the
logical connector u2 (the middle connector)
between the two possible input signals
u1 (upper connector) and u3 (lower connector).</p>
<p>If u2 is <strong>true</strong>, the output signal y is set equal to
u1, else it is set equal to u3.</p>
</html>"),Icon(coordinateSystem(
              preserveAspectRatio=true,
              extent={{-100,-100},{100,100}}), graphics={
              Line(points={{12,0},{100,0}},
                color={0,0,127}),
              Line(points={{-100,-80},{-40,-80},{-40,-80}},
                color={0,0,127}),
              Line(points={{-100,80},{-38,80}},
                color={0,0,127}),
              Line(points=DynamicSelect({{-38,80},{6,2}}, if u2 then {{-38,80},{6,2}} else {{-38,-80},{6,2}}),
                color={0,0,127},
                thickness=1),
              Ellipse(lineColor={0,0,255},
                pattern=LinePattern.None,
                fillPattern=FillPattern.Solid,
                extent={{2,-8},{18,8}}),
              Line(points={{-98,0},{-38,0},{-38,0}},
                color={0,0,127}),
              Line(points={{0,64},{0,98},{0,98}},
                color={0,0,127}),
              Line(points={{-18,64},{20,64},{20,64}},
                color={0,0,127})}));
      end Switch_3;

      model TABS_0_stst
        "Observe TABS steady state heat transfer. Useful information for the TABS design. windows are removed, solar gains are removed, cte outside temperature, internal gains removed"
        import Case_O4;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        extends Modelica.Icons.Example;
        replaceable package MediumA =
            Buildings.Media.Air;

      //-------------------------Step 2: Water as medium-------------------------//
        replaceable package MediumW =
            Buildings.Media.Water "Medium model";
      //-------------------------------------------------------------------------//

      //------------------------Step 4: Design conditions------------------------//
        parameter Modelica.SIunits.HeatFlowRate Q_flow_nominal = 300
          "Nominal heat flow rate of radiator";
        parameter Modelica.SIunits.Temperature TRadSup_nominal = 273.15+50
          "Radiator nominal supply water temperature";
        parameter Modelica.SIunits.Temperature TRadRet_nominal = 273.15+40
          "Radiator nominal return water temperature";
        parameter Modelica.SIunits.MassFlowRate mRad_flow_nominal=
          Q_flow_nominal/4200/(TRadSup_nominal-TRadRet_nominal)
          "Radiator nominal mass flow rate";
      //------------------------------------------------------------------------//

        Modelica.Thermal.HeatTransfer.Components.ThermalConductor theCon(G=19)
          "Thermal conductance with the ambient"
          annotation (Placement(transformation(extent={{214,78},{234,98}})));
        parameter Modelica.SIunits.Volume V=6*10*3 "Room volume";
        parameter Modelica.SIunits.MassFlowRate mA_flow_nominal = V*1.2*6/3600
          "Nominal mass flow rate";
        parameter Modelica.SIunits.HeatFlowRate QRooInt_flow = 4000
          "Internal heat gains of the room";
        Modelica.Thermal.HeatTransfer.Sources.FixedTemperature TOut(T=283.15)
          "Outside temperature"
          annotation (Placement(transformation(extent={{174,78},{194,98}})));

        IDEAS.Fluid.MixingVolumes.MixingVolume vol(
          redeclare package Medium = Medium,
          T_start=293.15,
          m_flow_nominal=0.1,
          V=4*4*2.7)
               annotation (Placement(transformation(extent={{256,22},{276,42}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABS5(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_Standard1
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=4*4,
          nParCir=2,
          m_flow_nominal=0.096) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={186,-56})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout5(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={188,-108})));
        IDEAS.Fluid.Sources.Boundary_pT bou5(nPorts=1, redeclare package Medium
            = IDEAS.Media.Water)
                      annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=270,
              origin={184,-144})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tin5(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={186,-22})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary5(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.096,
          use_T_in=true,
          T=323.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={186,20})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout1(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-280,-100})));
        IDEAS.Fluid.Sources.Boundary_pT bou1(nPorts=1, redeclare package Medium
            = IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-282,-138})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tin1(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-282,-16})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary1(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.096,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-282,14})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol1(y=25 + 273.15)
          annotation (Placement(transformation(extent={{-316,40},{-296,60}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle_stst0.txt"))
          annotation (Placement(transformation(extent={{-312,78},{-292,98}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-286,78},{-270,94}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251
          runningMeanTemperatureEN15251
          annotation (Placement(transformation(extent={{-258,74},{-238,94}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON_1(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{-208,-22},{-236,12}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum,
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=false,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{-196,64},{-168,96}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate ON_ext(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare Case_O4.Walls.inner_floor conTypFlo(locGain={1}),
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{166,-76},{138,-42}})));

        IDEAS.Buildings.Components.InternalWall TABS_ext(
          redeclare each IDEAS.Buildings.Data.Constructions.TABS constructionType,
          each inc=IDEAS.Types.Tilt.Floor,
          each azi=IDEAS.Types.Azimuth.S,
          each A=4*4) annotation (Placement(transformation(
              extent={{6,10},{-6,-10}},
              rotation=90,
              origin={106,-58})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABS4(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa_floorheating
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=4*4,
          nParCir=2,
          m_flow_nominal=0.096) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={70,-60})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout4(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={68,-106})));
        IDEAS.Fluid.Sources.Boundary_pT bou4(nPorts=1, redeclare package Medium
            = IDEAS.Media.Water)
                      annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={68,-144})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tin4(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={68,-22})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary4(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow=0.096,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={66,8})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol4(y=25 + 273.15)
          annotation (Placement(transformation(extent={{32,34},{52,54}})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol5(y=25 + 273.15)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={188,56})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABS1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_Standard1
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=4*4,
          nParCir=2,
          m_flow_nominal=0.096) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-282,-52})));
        Modelica.Blocks.Sources.Ramp ramp(
          height=0.3,
          duration=3600*1600,
          offset=0.001,
          startTime=100*3600)
          annotation (Placement(transformation(extent={{-124,68},{-104,88}})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout2(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-180,-108})));
        IDEAS.Fluid.Sources.Boundary_pT bou2(nPorts=1, redeclare package Medium
            = IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-182,-146})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tin2(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-182,-24})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary2(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.096,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-182,6})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol2(y=25 + 273.15)
          annotation (Placement(transformation(extent={{-216,32},{-196,52}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON_2(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{-108,-30},{-136,4}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABS2(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_Standard2
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=4*4,
          nParCir=2,
          m_flow_nominal=0.096) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-180,-66})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout3(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-80,-106})));
        IDEAS.Fluid.Sources.Boundary_pT bou3(nPorts=1, redeclare package Medium
            = IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-82,-144})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tin3(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-82,-22})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary3(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.0234,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-82,8})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol3(y=40 + 273.15)
          annotation (Placement(transformation(extent={{-116,34},{-96,54}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON_3(
          redeclare package Medium = Medium,
          n50=0.01,
          T_start=293.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{-8,-28},{-36,6}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABS3(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*3.35,
          nParCir=2,
          m_flow_nominal=0.3) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-80,-62})));
        Modelica.Blocks.Sources.RealExpression Res_extra(y=TABS3.G_max - TABS3.G_t)
          annotation (Placement(transformation(extent={{-48,78},{-28,98}})));
        Modelica.Blocks.Sources.RealExpression ResONH(y=0.165 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-48,60},{-28,80}})));
        Modelica.Blocks.Sources.RealExpression ResONC(y=0.047 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-46,40},{-26,60}})));
        Modelica.Blocks.Sources.RealExpression ResVNH(y=0.542 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-10,76},{10,96}})));
        Modelica.Blocks.Sources.RealExpression ResVNC(y=0.0554 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-12,58},{8,78}})));
        Modelica.Blocks.Sources.RealExpression ResVSH(y=0.542 - TABS3.R_t)
          annotation (Placement(transformation(extent={{18,78},{38,98}})));
        Modelica.Blocks.Sources.RealExpression ResVSC(y=0.039860303 - TABS3.R_t)
          annotation (Placement(transformation(extent={{18,58},{38,78}})));
        Modelica.Blocks.Sources.RealExpression ResOSH(y=0.177042782 - TABS3.R_t)
          annotation (Placement(transformation(extent={{58,72},{78,92}})));
        Modelica.Blocks.Sources.RealExpression ResOSC(y=0.050188206 - TABS3.R_t)
          annotation (Placement(transformation(extent={{54,54},{74,74}})));
        Modelica.Blocks.Sources.RealExpression BSResVNH(y=1.418849315 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-54,-98},{-34,-78}})));
        Modelica.Blocks.Sources.RealExpression BSResVNC(y=0.131692308 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-54,-116},{-34,-96}})));
        Modelica.Blocks.Sources.RealExpression BSResVSH(y=1.10187234 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-22,-98},{-2,-78}})));
        Modelica.Blocks.Sources.RealExpression BSResVSC(y=0.067863063 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-22,-118},{-2,-98}})));
        Modelica.Blocks.Sources.RealExpression BSResONH(y=0.283870968 - TABS3.R_t)
          annotation (Placement(transformation(extent={{12,-96},{32,-76}})));
        Modelica.Blocks.Sources.RealExpression BSResONC(y=0.07748184 - TABS3.R_t)
          annotation (Placement(transformation(extent={{14,-124},{34,-104}})));
        Modelica.Blocks.Sources.RealExpression BSResOSH(y=0.387665198 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-36,-138},{-16,-118}})));
        Modelica.Blocks.Sources.RealExpression BSResOSC(y=0.068230277 - TABS3.R_t)
          annotation (Placement(transformation(extent={{-16,-158},{4,-138}})));
           //parameter Modelica.SIunits.MassFlowRate mVNHmin;
        Modelica.Blocks.Sources.RealExpression m3(y=TABS3.m_flow)
          annotation (Placement(transformation(extent={{130,70},{150,90}})));
      equation

       //when BSResVNH.y > 0 then
         // mVNHmin = TABS3.m_flow; //
          //    end when;

        connect(theCon.port_b, vol.heatPort) annotation (Line(points={{234,88},{244,88},
                {244,32},{256,32}},   color={191,0,0}));
        connect(Tout5.port_b,bou5. ports[1]) annotation (Line(points={{188,-118},{184,
                -118},{184,-134}},
                                 color={0,127,255}));
        connect(Tin5.port_b,TABS5. port_a)
          annotation (Line(points={{186,-32},{186,-46}},
                                                       color={0,127,255}));
        connect(TABS5.port_b,Tout5. port_a) annotation (Line(points={{186,-66},{186,-98},
                {188,-98}},     color={0,127,255}));
        connect(boundary5.ports[1],Tin5. port_a) annotation (Line(points={{186,10},{182,
                10},{182,-12},{186,-12}},
                                       color={0,127,255}));
        connect(TABS5.heatPortEmb[1], vol.heatPort) annotation (Line(points={{196,-56},
                {244,-56},{244,32},{256,32}},      color={191,0,0}));
        connect(Tout1.port_b, bou1.ports[1]) annotation (Line(points={{-280,-110},{-282,
                -110},{-282,-128}}, color={0,127,255}));
        connect(boundary1.ports[1], Tin1.port_a)
          annotation (Line(points={{-282,4},{-282,-6}}, color={0,127,255}));
        connect(Expr_Tcontrol1.y, boundary1.T_in)
          annotation (Line(points={{-295,50},{-278,50},{-278,26}}, color={0,0,127}));
        connect(OS.proBusCei,OS. proBusFlo) annotation (Line(
            points={{-182.28,89.6},{-182,89.6},{-182,70.4}},
            color={255,204,51},
            thickness=0.5));
        connect(ON_1.proBusCei[1], ON_1.proBusFlo[1]) annotation (Line(
            points={{-221.72,5.2},{-221.72,-5.4},{-222,-5.4},{-222,-15.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Tout4.port_b,bou4. ports[1]) annotation (Line(points={{68,-116},{68,-134}},
                                   color={0,127,255}));
        connect(Tin4.port_b,TABS4. port_a)
          annotation (Line(points={{68,-32},{68,-50},{70,-50}},
                                                         color={0,127,255}));
        connect(TABS4.port_b,Tout4. port_a)
          annotation (Line(points={{70,-70},{70,-82},{68,-82},{68,-96}},
                                                         color={0,127,255}));
        connect(boundary4.ports[1],Tin4. port_a)
          annotation (Line(points={{66,-2},{66,-12},{68,-12}},
                                                      color={0,127,255}));
        connect(Expr_Tcontrol4.y,boundary4. T_in)
          annotation (Line(points={{53,44},{70,44},{70,20}},    color={0,0,127}));
        connect(TABS_ext.propsBus_b, ON_ext.proBusCei[1]) annotation (Line(
            points={{108,-53},{138,-53},{138,-48.8},{152.28,-48.8}},
            color={255,204,51},
            thickness=0.5));
        connect(TABS_ext.propsBus_a, ON_ext.proBusFlo[1]) annotation (Line(
            points={{108,-63},{130,-63},{130,-69.2},{152,-69.2}},
            color={255,204,51},
            thickness=0.5));
        connect(TABS_ext.port_emb[1],TABS4. heatPortEmb[1])
          annotation (Line(points={{96,-58},{88,-58},{88,-60},{80,-60}},
                                                       color={191,0,0}));
        connect(Expr_Tcontrol5.y,boundary5. T_in) annotation (Line(points={{188,45},{191.5,
                45},{191.5,32},{190,32}},      color={0,0,127}));
        connect(Tin1.port_b, TABS1.port_a)
          annotation (Line(points={{-282,-26},{-282,-42}}, color={0,127,255}));
        connect(TABS1.port_b, Tout1.port_a) annotation (Line(points={{-282,-62},{-282,
                -90},{-280,-90}}, color={0,127,255}));
        connect(TABS1.heatPortEmb[1], ON_1.gainEmb[1]) annotation (Line(points={{-272,
                -52},{-254,-52},{-254,-20.3},{-236,-20.3}}, color={191,0,0}));
        connect(TOut.port, theCon.port_a)
          annotation (Line(points={{194,88},{214,88}}, color={191,0,0}));
        connect(Tout2.port_b, bou2.ports[1]) annotation (Line(points={{-180,-118},{-180,
                -136},{-182,-136}}, color={0,127,255}));
        connect(boundary2.ports[1], Tin2.port_a)
          annotation (Line(points={{-182,-4},{-182,-14}}, color={0,127,255}));
        connect(Expr_Tcontrol2.y, boundary2.T_in)
          annotation (Line(points={{-195,42},{-178,42},{-178,18}}, color={0,0,127}));
        connect(ON_2.proBusCei[1], ON_2.proBusFlo[1]) annotation (Line(
            points={{-121.72,-2.8},{-121.72,-13.4},{-122,-13.4},{-122,-23.2}},
            color={255,204,51},
            thickness=0.5));
        connect(Tout3.port_b, bou3.ports[1]) annotation (Line(points={{-80,-116},{-80,
                -134},{-82,-134}}, color={0,127,255}));
        connect(boundary3.ports[1], Tin3.port_a)
          annotation (Line(points={{-82,-2},{-82,-12}}, color={0,127,255}));
        connect(Expr_Tcontrol3.y, boundary3.T_in)
          annotation (Line(points={{-95,44},{-78,44},{-78,20}}, color={0,0,127}));
        connect(ON_3.proBusCei[1], ON_3.proBusFlo[1]) annotation (Line(
            points={{-21.72,-0.8},{-21.72,-11.4},{-22,-11.4},{-22,-21.2}},
            color={255,204,51},
            thickness=0.5));
        connect(ramp.y, boundary3.m_flow_in) annotation (Line(points={{-103,78},{-64,78},
                {-64,20},{-74,20}}, color={0,0,127}));
        connect(Tin2.port_b, TABS2.port_a) annotation (Line(points={{-182,-34},{-182,-47},
                {-180,-47},{-180,-56}}, color={0,127,255}));
        connect(Tout2.port_a, TABS2.port_b)
          annotation (Line(points={{-180,-98},{-180,-76}}, color={0,127,255}));
        connect(Tin3.port_b, TABS3.port_a) annotation (Line(points={{-82,-32},{-82,-52},
                {-80,-52}}, color={0,127,255}));
        connect(TABS3.port_b, Tout3.port_a) annotation (Line(points={{-80,-72},{-80,-72},
                {-80,-96}}, color={0,127,255}));
        annotation (Documentation(info="<html>
<p>
This part of the system model adds a radiator with a prescribed mass flow
rate to the system that is implemented in
<a href=\"modelica://Buildings.Examples.Tutorial.Boiler.System1\">
Buildings.Examples.Tutorial.Boiler.System1</a>.
</p>
<h4>Implementation</h4>
<p>
This model was built as follows:
</p>
<ol>
<li>
<p>
First, we copied the model
<a href=\"modelica://Buildings.Examples.Tutorial.Boiler.System1\">
Buildings.Examples.Tutorial.Boiler.System1</a>
and called it
<code>Buildings.Examples.Tutorial.Boiler.System2</code>.
</p>
</li>
<li>
<p>
Since this model uses water as the medium, we declared the water medium model
at the top-level of the model by adding the lines
</p>
<pre>
  replaceable package MediumW =
      Buildings.Media.Water \"Medium model\";
</pre>
</li>
<li>
<p>
To model the pump, a temperature sensor which we will need later
for the control, and a flow sink, we made instances of the models
<a href=\"modelica://Buildings.Fluid.Movers.FlowControlled_m_flow\">
Buildings.Fluid.Movers.FlowControlled_m_flow</a>
(instance <code>pumRad</code> for the pump that serves the radiators),
<a href=\"modelica://Buildings.Fluid.Sensors.TemperatureTwoPort\">
Buildings.Fluid.Sensors.TemperatureTwoPort</a>
(instance <code>temSup</code>),
<a href=\"modelica://Buildings.Fluid.HeatExchangers.Radiators.RadiatorEN442_2\">
Buildings.Fluid.HeatExchangers.Radiators.RadiatorEN442_2</a>
(instance <code>rad</code>), and
<a href=\"modelica://Buildings.Fluid.Sources.Boundary_pT\">
Buildings.Fluid.Sources.Boundary_pT</a>
(instance <code>sou</code> and <code>sin</code> for the sink and source
reservoirs, which will later be replace by the boiler loop).
</p>
<p>
In all of these instances, we set the medium model to <code>MediumW</code>.
We also made an instance of the model
Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor
(instance <code>temRoo</code>) to measure the room temperature.
We connected the model as shown in the figure below.
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Examples/Tutorial/Boiler/System2Connections.png\" border=\"1\"/>
</p>
<p>
Note that there are two connections from the
radiator to the room volume:
One connection is for the convective heat flow rate, and the other is for the
radiative heat flow rate. For simplicity, we assumed that the air and radiative
temperature of the room are equal.
Furthermore, we simplified the model by using only one radiator instead of multiple
radiators, although this radiator will be quite large as it needs to provide a
heat flow rate of <i>20</i> kW.
</p>
</li>
<li>
<p>
Next, we computed the design mass flow rate for the radiator.
According to the schematic drawing, the radiator should have at
the design conditions a supply water temperature of
<i>50</i>&deg;C and a return water temperature of
<i>40</i>&deg;C.
Thus, we define the radiator mass flow rate as
</p>
<pre>
  parameter Modelica.SIunits.HeatFlowRate Q_flow_nominal = 20000
    \"Nominal heat flow rate of radiator\";
  parameter Modelica.SIunits.Temperature TRadSup_nominal = 273.15+50
    \"Radiator nominal supply water temperature\";
  parameter Modelica.SIunits.Temperature TRadRet_nominal = 273.15+40
    \"Radiator nominal return water temperature\";
  parameter Modelica.SIunits.MassFlowRate mRad_flow_nominal =
    Q_flow_nominal/4200/(TRadSup_nominal-TRadRet_nominal)
    \"Radiator nominal mass flow rate\";
</pre>
</li>
<li>
<p>
Now, we set the mass flow rate of <code>pumRad</code> and <code>temSup</code> to
<code>mRad_flow_nominal</code>.
We also set the temperature of the fluid that flows out of <code>sou</code>
to <code>TRadSup_nominal</code>.
We configured the parameters of the radiator model as
</p>
<pre>
  Buildings.Fluid.HeatExchangers.Radiators.RadiatorEN442_2 rad(
    redeclare package Medium = MediumW,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    Q_flow_nominal=Q_flow_nominal,
    T_a_nominal=TRadSup_nominal,
    T_b_nominal=TRadRet_nominal) \"Radiator\";
</pre>
<p>
We configured the parameters of the pump model as
</p>
<pre>
  Buildings.Fluid.Movers.FlowControlled_m_flow pumRad(
    redeclare package Medium = MediumW,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    m_flow_nominal=mRad_flow_nominal)
    \"Pump for radiator\";
</pre>
</li>
<li>
<p>
To enable the pump when the room temperature is below
<i>19</i>&deg;C and to switch it off when the room temperature
is below
<i>21</i>&deg;C,
we implemented the control blocks as shown in the figure below.
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Examples/Tutorial/Boiler/System2PumpControl.png\" border=\"1\"/>
</p>
<p>
In this control sequence, the first block is a hysteresis element,
which is modeled by
<a href=\"modelica://Modelica.Blocks.Logical.Hysteresis\">
Modelica.Blocks.Logical.Hysteresis</a>.
It is configured as
</p>
<pre>
  Modelica.Blocks.Logical.Hysteresis hysPum(
    uLow=273.15 + 19,
    uHigh=273.15 + 21)
    \"Pump hysteresis\";
</pre>
<p>
to output <code>false</code> when the input signal falls below <i>19</i>&deg;C, and
<code>true</code> when the input signal raises above <i>21</i>&deg;C.
Next, we send the output to the instance <code>not1</code>, which outputs
</p>
<pre>
  y= not u
</pre>
<p>
to negate the signal.
The output of this signal is a boolean value, but the pump
input signal is the required mass flow rate.
Thus, we used the block
<a href=\"modelica://Modelica.Blocks.Math.BooleanToReal\">
Modelica.Blocks.Math.BooleanToReal</a> to convert the signal.
We set the parameters of the boolean to real converter as
</p>
<pre>
  Modelica.Blocks.Math.BooleanToReal booToReaRad(
        realTrue=mRad_flow_nominal,
        realFalse=0) \"Radiator pump signal\";
</pre>
<p>
For numerical reasons, in particular in large system models, it is recommended to
continuously change the mass flow rate, as opposed to having a step change.
Therefore,
in the instance <code>pumRad</code>, we leave the parameter
<code>use_inputFilter</code> at its default value <code>true</code>.
This will approximate a continuous change in mass flow rate when the
pump is switched on or off.
Finally, we closed the control loop between the room temperature sensor and the
pump input signal.
</p>
</li>
</ol>
<!-- ============================== -->
<p>
This completes the initial version of the model. When simulating the model
for <i>2</i> days, or <i>172800</i> seconds, the
response shown below should be seen.
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Examples/Tutorial/Boiler/System2Temperatures.png\" border=\"1\"/>
</p>
<p>
The figure shows that the room temperature is maintained at
<i>20</i>&deg;C when the internal heat gain is zero, and controlled around
<i>19</i>&deg;C to <i>21</i>&deg;C when there is an internal heat gain.
The temperature is slightly outside this temperature range because of the
time lag that is caused by the thermal capacity of the radiator.
</p>
<!-- Notes -->
<h4>Notes</h4>
<p>
For a more realistic model of a room, the model
<a href=\"modelica://Buildings.ThermalZones.Detailed.MixedAir\">
Buildings.ThermalZones.Detailed.MixedAir</a>
could have been used.
For transient heat conduction, models from the
package
<a href=\"modelica://Buildings.HeatTransfer.Conduction\">
Buildings.HeatTransfer.Conduction</a>
could have been used.
</p>
</html>",       revisions="<html>
<ul>
<li>
March 6, 2017, by Michael Wetter:<br/>
Added missing density to computation of air mass flow rate.<br/>
This is for <a href=\"https://github.com/lbl-srg/modelica-buildings/issues/673\">#673</a>.
</li>
<li>
December 22, 2014 by Michael Wetter:<br/>
Removed <code>Modelica.Fluid.System</code>
to address issue
<a href=\"https://github.com/lbl-srg/modelica-buildings/issues/311\">#311</a>.
</li>
<li>
January 27, 2012, by Michael Wetter:<br/>
First implementation.
</li>
</ul>
</html>"),Diagram(coordinateSystem(preserveAspectRatio=true,
                  extent={{-320,-160},{280,100}}), graphics={Bitmap(extent={{-124,-320},
                    {44,-192}},       fileName=
                    "modelica://TABS/../../Pictures/TABS_stationairmodel.PNG")}),
          __Dymola_Commands(file=
           "modelica://Buildings/Resources/Scripts/Dymola/Examples/Tutorial/Boiler/System2.mos"
              "Simulate and plot"),
          experiment(StopTime=7200000, Tolerance=1e-06),
          Icon(coordinateSystem(extent={{-320,-160},{280,100}})));
      end TABS_0_stst;

      model mmin
        "Model to calculate the minimum mass flow required to keep R_t under R_max, which is calculated in excel"
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe_test TEST_TABS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=0.05,
          A_floor=3.52*5.35,
          nParCir=2) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-30,-14})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary3(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.05,
          use_T_in=false,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-38,34})));
        IDEAS.Fluid.Sources.Boundary_pT bou3(nPorts=1, redeclare package Medium
            = IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-34,-62})));
      equation
        connect(boundary3.ports[1], TEST_TABS.port_a) annotation (Line(points={{
                -38,24},{-38,9},{-30,9},{-30,-4}}, color={0,127,255}));
        connect(TEST_TABS.port_b, bou3.ports[1]) annotation (Line(points={{-30,
                -24},{-34,-24},{-34,-52},{-34,-52}}, color={0,127,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end mmin;
    end BaseClasses;

    package MS_mOJ
      "HCCC with original HCCC and original minimum mass flow from TABS_design_parameters_xls
  calculated with SOMMOS approach (overestimation of heat and cooling demand)"

      model TABS_1_HCCC_mOJ "Heatinc curve/cooling curve: Tsup directly written. 
  No AHU and rad yet.
  HCCC retrieved from MS but optimized experimentally.
  Original calculated minimum mass flows. Only neutral mass flow is optimized
  Heating: TRM<10 --> heating curve: -0.22Trm + 23.5, m=0.0077
  mid season: 10<TRM<15: W-->S: N=S, S-->W: W, m= 0.01305
  Cooling: TRM > 15 --> cooling curves: -0.16Trm +26.1, m=0.1505"
        import Occupancy;
        import Case_O4;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-164,18})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-164,-12})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-164,-40})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-166,48})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-218,136},{-198,156}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-188,142},{-172,158}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-164,138},{-144,158}})));
        Modelica.Blocks.Sources.RealExpression HC_VN_0J(y=(-5/23)*(TRM.TRm - 273.15) +
              21 + 273.15) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-74,148})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol1(y=(-15/23)*(TRM.TRm - 273.15)
               + 33.7)
          annotation (Placement(transformation(extent={{-48,136},{-28,156}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.8544) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-98,-28})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-96,-58})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-96,-86})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-98,2})));
        Modelica.Blocks.Sources.RealExpression HC_VS(y=(-5/23)*(TRM.TRm - 273.15) + 21
               + 273.15) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-122,62})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{112,64},{140,98}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS1(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{114,-14},{142,18}})));

        BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-160,94})));
        Modelica.Blocks.Sources.RealExpression HC_VN_MS(y=-0.22*(TRM.TRm - 273.15) + 23.5
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-140,126})));
        Modelica.Blocks.Sources.RealExpression T_N_VN(y=if calTim.month < 9 and
              calTim.month > 4 then -0.16*(TRM.TRm - 273.15) + 23.3 + 273.15 else -0.22
              *(TRM.TRm - 273.15) + 25.1 + 273.15) annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-159,118})));
        Modelica.Blocks.Sources.RealExpression CC_VN_MS(y=-0.16*(TRM.TRm - 273.15) + 26.1
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-174,126})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-202,98})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0077)  annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-195,122})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.0867*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-203,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.1505)     annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-213,124})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_MS(y=HC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={26,150})));
        Modelica.Blocks.Sources.RealExpression pres_CC_VN_MS(y=CC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={56,148})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_0J(y=HC_VN_0J.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-4,148})));
        Modelica.Blocks.Sources.RealExpression pres_N_VN_MS(y=T_N_VN.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={88,150})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-48,64},{-76,92}})));

         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6
               and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14
               and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour >
              17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-14,82},{-34,102}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-42,12},{-70,40}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6
               and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14
               and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour >
              17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-10,24},{-30,44}})));
        TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-22,98},{2,118}})));
        TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-24,48},{0,68}})));
      equation
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-164,-22},{-164,-30}}, color={0,127,255}));
        connect(TABSVN.port_b, Tout_VN.port_a)
          annotation (Line(points={{-164,8},{-164,-2}}, color={0,127,255}));
        connect(m_VN.ports[1], TABSVN.port_a) annotation (Line(points={{-166,38},{-166,
                28},{-164,28}}, color={0,127,255}));
        connect(Tout_VS.port_b, bou_VS.ports[1])
          annotation (Line(points={{-96,-68},{-96,-76}}, color={0,127,255}));
        connect(TABSVS.port_b, Tout_VS.port_a) annotation (Line(points={{-98,-38},{-98,
                -42},{-96,-42},{-96,-48}}, color={0,127,255}));
        connect(HC_VS.y, m_VS.T_in)
          annotation (Line(points={{-122,51},{-122,14},{-94,14}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS.port_a)
          annotation (Line(points={{-98,-8},{-98,-18}}, color={0,127,255}));
        connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
            points={{126,70.8},{125.72,70.8},{125.72,91.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusCei, OS1.proBusFlo) annotation (Line(
            points={{127.72,11.6},{128,11.6},{128,-7.6}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusA, ON.proBusC) annotation (Line(
            points={{119.6,16.4},{119.6,46.5},{135.52,46.5},{135.52,64.34}},
            color={255,204,51},
            thickness=0.5));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-143.4,148},{-104,148},
                {-104,94},{-148,94}}, color={0,0,127}));
        connect(switch_VN_T.y, m_VN.T_in)
          annotation (Line(points={{-160,83},{-162,83},{-162,60}}, color={0,0,127}));
        connect(HC_VN_MS.y, switch_VN_T.a) annotation (Line(points={{-140,115},{-146,115},
                {-146,106},{-152,106}}, color={0,0,127}));
        connect(T_N_VN.y, switch_VN_T.b) annotation (Line(points={{-159,112.5},{-159,110.25},
                {-160,110.25},{-160,106}}, color={0,0,127}));
        connect(CC_VN_MS.y, switch_VN_T.c) annotation (Line(points={{-174,115},{-170,115},
                {-170,106},{-168,106}}, color={0,0,127}));
        connect(switch_VN_m.y, m_VN.m_flow_in) annotation (Line(points={{-202,87},{-202,
                72},{-158,72},{-158,60}}, color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m.a) annotation (Line(points={{-195,116.5},{-195,114.25},
                {-194,114.25},{-194,110}}, color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m.b) annotation (Line(points={{-203,120.5},{-203,116.25},
                {-202,116.25},{-202,110}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m.c) annotation (Line(points={{-213,118.5},{-213,116.25},
                {-210,116.25},{-210,110}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_m.u) annotation (Line(points={{-148,94},{-168,
                94},{-168,98},{-190,98}}, color={0,0,127}));
        connect(VN.uLig,light41. y) annotation (Line(points={{-78.8,87.8},{-35,
                87.8},{-35,92}},
                           color={0,0,127}));
        connect(light56.y,VS. uLig) annotation (Line(points={{-31,34},{-32,34},{
                -32,35.8},{-72.8,35.8}},   color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-61.72,86.4},{-61.72,78.2},{-62,78.2},{-62,69.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{-74.6,86.4},{-52.7,86.4},{-52.7,68.2},{-48.56,68.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-47.6,38.6},{-47.6,51.3},{-71.52,51.3},{-71.52,64.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-42.56,16.2},{-52.72,16.2},{-52.72,34.4},{-68.6,34.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-55.72,34.4},{-55.72,26.2},{-56,26.2},{-56,17.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-77.4,80.8},{-29.3,
                80.8},{-29.3,108},{-24,108}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-71.4,28.8},{-71.4,
                42.4},{-26,42.4},{-26,58}}, color={0,0,127}));
        connect(VS.gainEmb[1], TABSVS.heatPortEmb[1]) annotation (Line(points={{
                -70,13.4},{-80,13.4},{-80,-28},{-88,-28}}, color={191,0,0}));
        connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{
                -76,65.4},{-116,65.4},{-116,18},{-154,18}}, color={191,0,0}));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,160}})),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,
                  160}})),
          experiment(StopTime=31536000));
      end TABS_1_HCCC_mOJ;
    end MS_mOJ;

    package MS_adapted
      "HCCC curves based on MS but then experimentally adapted. Constant mass flows are also experimentally adapted"

      model TABS_1_HCCC_mOpt "Heatinc curve/cooling curve: Tsup directly written
  No AHU and rad yet.
  HCCC retrieved from MS but optimized experimentally.
  Experimentally optimized constant mass flows
  Heating: TRM<10 --> heating curve: -0.22Trm + 23.5, m=0.00655
  mid season: 10<TRM<15: W-->S: N=S, S-->W: W, m= 0.01305
  Cooling: TRM > 15 --> cooling curves: -0.16Trm +26.1, m=0.06525
  Cooling curves retrieved from Sourbron"
        import Occupancy;
        import Case_O4;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-164,18})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-164,-12})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-164,-40})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-166,48})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-218,136},{-198,156}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-188,142},{-172,158}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-164,138},{-144,158}})));
        Modelica.Blocks.Sources.RealExpression HC_VN_0J(y=(-5/23)*(TRM.TRm - 273.15) +
              21 + 273.15) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-74,148})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol1(y=(-15/23)*(TRM.TRm - 273.15)
               + 33.7)
          annotation (Placement(transformation(extent={{-48,136},{-28,156}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.8544) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-98,-28})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-96,-58})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-96,-86})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-98,2})));
        Modelica.Blocks.Sources.RealExpression HC_VS(y=(-5/23)*(TRM.TRm - 273.15) + 21
               + 273.15) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-122,62})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{112,64},{140,98}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS1(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{114,-14},{142,18}})));

        BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-160,94})));
        Modelica.Blocks.Sources.RealExpression HC_VN_MS(y=-0.22*(TRM.TRm - 273.15) + 23.5
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-140,126})));
        Modelica.Blocks.Sources.RealExpression T_N_VN(y=if calTim.month < 9 and
              calTim.month > 4 then -0.16*(TRM.TRm - 273.15) + 23.3 + 273.15 else -0.22
              *(TRM.TRm - 273.15) + 25.1 + 273.15) annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-159,118})));
        Modelica.Blocks.Sources.RealExpression CC_VN_MS(y=-0.16*(TRM.TRm - 273.15) + 26.1
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-174,126})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-202,98})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.8506*0.0077)
                                                                 annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-195,122})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.0867*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-203,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.43355*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-213,124})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_MS(y=HC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={72,124})));
        Modelica.Blocks.Sources.RealExpression pres_CC_VN_MS(y=CC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={70,106})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_0J(y=HC_VN_0J.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={72,146})));
        Modelica.Blocks.Sources.RealExpression pres_N_VN_MS(y=T_N_VN.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={66,76})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-42,54},{-70,82}})));

         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6
               and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14
               and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour >
              17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-8,72},{-28,92}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-36,2},{-64,30}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6
               and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14
               and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour >
              17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-4,14},{-24,34}})));
        TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-16,88},{8,108}})));
        TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-18,38},{6,58}})));
      equation
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-164,-22},{-164,-30}}, color={0,127,255}));
        connect(Tout_VS.port_b, bou_VS.ports[1])
          annotation (Line(points={{-96,-68},{-96,-76}}, color={0,127,255}));
        connect(TABSVS.port_b, Tout_VS.port_a) annotation (Line(points={{-98,-38},{-98,
                -42},{-96,-42},{-96,-48}}, color={0,127,255}));
        connect(HC_VS.y, m_VS.T_in)
          annotation (Line(points={{-122,51},{-122,14},{-94,14}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS.port_a)
          annotation (Line(points={{-98,-8},{-98,-18}}, color={0,127,255}));
        connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
            points={{126,70.8},{125.72,70.8},{125.72,91.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusCei, OS1.proBusFlo) annotation (Line(
            points={{127.72,11.6},{128,11.6},{128,-7.6}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusA, ON.proBusC) annotation (Line(
            points={{119.6,16.4},{119.6,46.5},{135.52,46.5},{135.52,64.34}},
            color={255,204,51},
            thickness=0.5));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-143.4,148},{-104,148},
                {-104,94},{-148,94}}, color={0,0,127}));
        connect(switch_VN_T.y, m_VN.T_in)
          annotation (Line(points={{-160,83},{-162,83},{-162,60}}, color={0,0,127}));
        connect(HC_VN_MS.y, switch_VN_T.a) annotation (Line(points={{-140,115},{-146,115},
                {-146,106},{-152,106}}, color={0,0,127}));
        connect(T_N_VN.y, switch_VN_T.b) annotation (Line(points={{-159,112.5},{-159,110.25},
                {-160,110.25},{-160,106}}, color={0,0,127}));
        connect(CC_VN_MS.y, switch_VN_T.c) annotation (Line(points={{-174,115},{-170,115},
                {-170,106},{-168,106}}, color={0,0,127}));
        connect(switch_VN_m.y, m_VN.m_flow_in) annotation (Line(points={{-202,87},{-202,
                72},{-158,72},{-158,60}}, color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m.a) annotation (Line(points={{-195,116.5},{-195,114.25},
                {-194,114.25},{-194,110}}, color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m.b) annotation (Line(points={{-203,120.5},{-203,116.25},
                {-202,116.25},{-202,110}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m.c) annotation (Line(points={{-213,118.5},{-213,116.25},
                {-210,116.25},{-210,110}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_m.u) annotation (Line(points={{-148,94},{-168,
                94},{-168,98},{-190,98}}, color={0,0,127}));
        connect(m_VN.ports[1], TABSVN.port_a) annotation (Line(points={{-166,38},
                {-166,28},{-164,28}}, color={0,127,255}));
        connect(TABSVN.port_b, Tout_VN.port_a) annotation (Line(points={{-164,8},
                {-164,-2},{-164,-2}}, color={0,127,255}));
        connect(VN.uLig,light41. y) annotation (Line(points={{-72.8,77.8},{-29,
                77.8},{-29,82}},
                           color={0,0,127}));
        connect(light56.y,VS. uLig) annotation (Line(points={{-25,24},{-26,24},{
                -26,25.8},{-66.8,25.8}},   color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-55.72,76.4},{-55.72,68.2},{-56,68.2},{-56,59.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{-68.6,76.4},{-46.7,76.4},{-46.7,58.2},{-42.56,58.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-41.6,28.6},{-41.6,41.3},{-65.52,41.3},{-65.52,54.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-36.56,6.2},{-46.72,6.2},{-46.72,24.4},{-62.6,24.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-49.72,24.4},{-49.72,16.2},{-50,16.2},{-50,7.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-71.4,70.8},{-23.3,
                70.8},{-23.3,98},{-18,98}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-65.4,18.8},{-65.4,
                32.4},{-20,32.4},{-20,48}}, color={0,0,127}));
        connect(VS.gainEmb[1], TABSVS.heatPortEmb[1]) annotation (Line(points={{
                -64,3.4},{-76,3.4},{-76,-28},{-88,-28}}, color={191,0,0}));
        connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{
                -70,55.4},{-112,55.4},{-112,18},{-154,18}}, color={191,0,0}));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,160}})),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,
                  160}})),
          experiment(StopTime=31536000));
      end TABS_1_HCCC_mOpt;
    end MS_adapted;

    package MS_QHBS

      model TABS_1_HCCC_mBS "Heatinc curve/cooling curve: Tsup directly written
  No AHU and rad yet.
  HCCC retrieved from MS but optimized experimentally.
  miniumum mass flows calculated from building simulations heat and cooling demand
  Heating: TRM<10 --> heating curve: -0.22Trm + 23.5, m=0.00655
  mid season: 10<TRM<15: W-->S: N=S, S-->W: W, m= 0.01305
  Cooling: TRM > 15 --> cooling curves: -0.16Trm +26.1, m=0.06525"
        import Occupancy;
        import Case_O4;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-164,18})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-164,-12})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-164,-40})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-166,48})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-218,136},{-198,156}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-188,142},{-172,158}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-164,138},{-144,158}})));
        Modelica.Blocks.Sources.RealExpression HC_VN_0J(y=(-5/23)*(TRM.TRm - 273.15) +
              21 + 273.15) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-74,148})));
        Modelica.Blocks.Sources.RealExpression Expr_Tcontrol1(y=(-15/23)*(TRM.TRm - 273.15)
               + 33.7)
          annotation (Placement(transformation(extent={{-48,136},{-28,156}})));

        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.8544) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-98,-28})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-96,-58})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-96,-86})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=false,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-98,2})));
        Modelica.Blocks.Sources.RealExpression HC_VS(y=(-5/23)*(TRM.TRm - 273.15) + 21
               + 273.15) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-122,62})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=50,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA) "North parth of the zone"
          annotation (Placement(transformation(extent={{112,64},{140,98}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS1(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=false,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=5,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Case_O4.Walls.Mass_wall conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC) "South part of the zone"
          annotation (Placement(transformation(extent={{114,-14},{142,18}})));

        BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-160,94})));
        Modelica.Blocks.Sources.RealExpression HC_VN_MS(y=-0.22*(TRM.TRm - 273.15) + 23.5
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-140,126})));
        Modelica.Blocks.Sources.RealExpression T_N_VN(y=if calTim.month < 9 and
              calTim.month > 4 then -0.16*(TRM.TRm - 273.15) + 23.3 + 273.15 else -0.22
              *(TRM.TRm - 273.15) + 25.1 + 273.15) annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-159,118})));
        Modelica.Blocks.Sources.RealExpression CC_VN_MS(y=-0.16*(TRM.TRm - 273.15) + 26.1
               + 273.15) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={-174,126})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-202,98})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0031675)
                                                                 annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-195,122})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.089*0.5)  annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-203,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.089)      annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-213,124})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_MS(y=HC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={72,124})));
        Modelica.Blocks.Sources.RealExpression pres_CC_VN_MS(y=CC_VN_MS.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={70,106})));
        Modelica.Blocks.Sources.RealExpression pres_HC_VN_0J(y=HC_VN_0J.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={72,146})));
        Modelica.Blocks.Sources.RealExpression pres_N_VN_MS(y=T_N_VN.y - 273.15)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={66,76})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-46,46},{-74,74}})));

         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6
               and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14
               and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour >
              17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-12,64},{-32,84}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-44,-8},{-72,20}})));

         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6
               and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14
               and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour >
              17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-8,6},{-28,26}})));
        TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-20,80},{4,100}})));
        TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-22,30},{2,50}})));
      equation
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-164,-22},{-164,-30}}, color={0,127,255}));
        connect(TABSVN.port_b, Tout_VN.port_a)
          annotation (Line(points={{-164,8},{-164,-2}}, color={0,127,255}));
        connect(m_VN.ports[1], TABSVN.port_a) annotation (Line(points={{-166,38},{-166,
                28},{-164,28}}, color={0,127,255}));
        connect(Tout_VS.port_b, bou_VS.ports[1])
          annotation (Line(points={{-96,-68},{-96,-76}}, color={0,127,255}));
        connect(TABSVS.port_b, Tout_VS.port_a) annotation (Line(points={{-98,-38},{-98,
                -42},{-96,-42},{-96,-48}}, color={0,127,255}));
        connect(HC_VS.y, m_VS.T_in)
          annotation (Line(points={{-122,51},{-122,14},{-94,14}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS.port_a)
          annotation (Line(points={{-98,-8},{-98,-18}}, color={0,127,255}));
        connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
            points={{126,70.8},{125.72,70.8},{125.72,91.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusCei, OS1.proBusFlo) annotation (Line(
            points={{127.72,11.6},{128,11.6},{128,-7.6}},
            color={255,204,51},
            thickness=0.5));
        connect(OS1.proBusA, ON.proBusC) annotation (Line(
            points={{119.6,16.4},{119.6,46.5},{135.52,46.5},{135.52,64.34}},
            color={255,204,51},
            thickness=0.5));
        connect(TRM.TRm, switch_VN_T.u) annotation (Line(points={{-143.4,148},{-104,148},
                {-104,94},{-148,94}}, color={0,0,127}));
        connect(switch_VN_T.y, m_VN.T_in)
          annotation (Line(points={{-160,83},{-162,83},{-162,60}}, color={0,0,127}));
        connect(HC_VN_MS.y, switch_VN_T.a) annotation (Line(points={{-140,115},{-146,115},
                {-146,106},{-152,106}}, color={0,0,127}));
        connect(T_N_VN.y, switch_VN_T.b) annotation (Line(points={{-159,112.5},{-159,110.25},
                {-160,110.25},{-160,106}}, color={0,0,127}));
        connect(CC_VN_MS.y, switch_VN_T.c) annotation (Line(points={{-174,115},{-170,115},
                {-170,106},{-168,106}}, color={0,0,127}));
        connect(switch_VN_m.y, m_VN.m_flow_in) annotation (Line(points={{-202,87},{-202,
                72},{-158,72},{-158,60}}, color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m.a) annotation (Line(points={{-195,116.5},{-195,114.25},
                {-194,114.25},{-194,110}}, color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m.b) annotation (Line(points={{-203,120.5},{-203,116.25},
                {-202,116.25},{-202,110}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m.c) annotation (Line(points={{-213,118.5},{-213,116.25},
                {-210,116.25},{-210,110}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_m.u) annotation (Line(points={{-148,94},{-168,
                94},{-168,98},{-190,98}}, color={0,0,127}));
        connect(VN.uLig,light41. y) annotation (Line(points={{-76.8,69.8},{-33,
                69.8},{-33,74}},
                           color={0,0,127}));
        connect(light56.y,VS. uLig) annotation (Line(points={{-29,16},{-30,16},{
                -30,15.8},{-74.8,15.8}},   color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-59.72,68.4},{-59.72,60.2},{-60,60.2},{-60,51.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{-72.6,68.4},{-50.7,68.4},{-50.7,50.2},{-46.56,50.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-49.6,18.6},{-49.6,33.3},{-69.52,33.3},{-69.52,46.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-44.56,-3.8},{-50.72,-3.8},{-50.72,14.4},{-70.6,14.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-57.72,14.4},{-57.72,8.2},{-58,8.2},{-58,-2.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-75.4,62.8},{-27.3,
                62.8},{-27.3,90},{-22,90}}, color={0,0,127}));
        connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-73.4,8.8},{-73.4,
                24.4},{-24,24.4},{-24,40}}, color={0,0,127}));
        connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{
                -74,47.4},{-114,47.4},{-114,18},{-154,18}}, color={191,0,0}));
        connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{
                -88,-28},{-80,-28},{-80,-6.6},{-72,-6.6}}, color={191,0,0}));
        annotation (
          Icon(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,160}})),
          Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-220,-100},{160,
                  160}})),
          experiment(StopTime=31536000));
      end TABS_1_HCCC_mBS;
    end MS_QHBS;

    package HCCCth
      "Package where all theorically derived heating and cooling curves are tested"
      package mMOSSOM
        "Theoretical derived HCCC and minimum mass flow both derived from the MOSSOM approach"
        model V_optimized
          "Theoretical derived HCCC with MOSSOM approach is optimized untill Northern zones have TDC<100Kh for North and TDC<100 Kh for South"
          import Occupancy;
          import Vaartstraat;
          replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
          IDEAS.Buildings.Components.RectangularZoneTemplate VN(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=true,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            fracA=0.255,
            redeclare Vaartstraat.Walls.Outer_wall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
            hasEmb=true)
                        "Room north in Vaarstraat 0241"
            annotation (Placement(transformation(extent={{-22,12},{-50,40}})));

          inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
                Modelica.Utilities.Files.loadResource(
                "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
            annotation (Placement(transformation(extent={{-180,82},{-160,102}})));
           Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{8,30},{-12,50}})));
           IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
             annotation (Placement(transformation(extent={{-154,82},{-138,98}})));
          IDEAS.Buildings.Components.RectangularZoneTemplate VS(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=false,
            hasWinC=true,
            hasWinD=false,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            A_winC=3.158,
            A_winD=3.158,
            fracC=0.255,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Outer_wall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingC,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingD,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
            hasCavityC=false,
            hasEmb=true)     "Room south in Vaartstraat 0256"
            annotation (Placement(transformation(extent={{62,-94},{34,-66}})));

           Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{86,-78},{66,-58}})));
         /* IDEAS.Buildings.Components.RectangularZoneTemplate ON(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare Occupancy.OccSched_Office occNum(k=1),
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinA=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winA=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypA,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
    hasEmb=true)
               "North parth of the zone"
    annotation (Placement(transformation(extent={{24,8},{52,42}})));*/

        /*  IDEAS.Buildings.Components.RectangularZoneTemplate OS(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
    redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinC=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winC=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypC,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
    hasEmb=true)
               "South part of the zone"
    annotation (Placement(transformation(extent={{24,-68},{52,-36}})));*/

          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
            annotation (Placement(transformation(extent={{-132,84},{-118,100}})));
          TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVN.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-18,48},{6,68}})));

          TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVS.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{68,-52},{92,-32}})));

         /*TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCON.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{64,36},{88,56}})));

  TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCOS.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{70,-40},{94,-20}})));*/

          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.1505) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-94,-12})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-94,-42})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-94,-70})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.1305,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-96,16})));
          BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-86,54})));
          Modelica.Blocks.Sources.RealExpression HCVNthSOMMOS(y=3*(-0.073008085)*(TRM.TRm - 273.15)
                 + (23.60617788 - 1) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-72,84})));
          Modelica.Blocks.Sources.RealExpression NCVNthSOMMOS(y=-0.073008085*(TRM.TRm - 273.15) + (
                24.1445 - 1) + 273.15) annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-87,82})));
          Modelica.Blocks.Sources.RealExpression CCVNthSOMMOS(y=-0.007472382*(TRM.TRm - 273.15) + (
                24.68307335 - 1.25) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-100,86})));
          BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-148,46})));
          Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0077)  annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-131,70})));
          Modelica.Blocks.Sources.RealExpression m_VN_N(y=(m_VN_H.y + m_VN_C.y)/2)
                                                                      annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-147,74})));
          Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.1505)     annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-161,70})));
          Modelica.Blocks.Sources.RealExpression pres_HCVNthSOMMOS(y=HCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,-6},{-5,6}},
                rotation=180,
                origin={-167,8})));
          Modelica.Blocks.Sources.RealExpression pres_CCVNthSOMMOS(y=CCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,-8},{5,8}},
                rotation=0,
                origin={-165,-14})));
          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.9783) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=270,
                origin={0,-52})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={0,-24})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-2,4})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.8544,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={0,-88})));
          BaseClasses.Switch_3 switch_VS_m annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-92,-134})));
          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
            annotation (Placement(transformation(extent={{-174,-130},{-160,-114}})));
          Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)
                /2)*0.5)                                              annotation (
              Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-95,-172})));
          Modelica.Blocks.Sources.RealExpression m_VS_H(y=1.5*0.0077)
                                                                  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-113,-172})));
          Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.9783) annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-77,-174})));
          BaseClasses.Switch_3 switch_VS_T annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-40,-136})));
          Modelica.Blocks.Sources.RealExpression CCVSthSOMMOS(y=-0.005368822*(TRM.TRm - 273.15) + (
                24.63153614 - 1.5) + 273.15)
                           annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=90,
                origin={-12,-175})));
          Modelica.Blocks.Sources.RealExpression NCVSthSOMMOS(y=2*(-0.073008085)*(TRM.TRm - 273.15)
                 + (24.63 - 1) + 273.15)     annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-41,-178})));
          Modelica.Blocks.Sources.RealExpression HCVSthSOMMOS(y=3*(-0.073008085)*(TRM.TRm - 273.15)
                 + (23.60617788 - 1.5) + 273.15)
                           annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=90,
                origin={-56,-168})));
          Modelica.Blocks.Sources.RealExpression pres_NCVNthSOMMOS(y=NCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=0,
                origin={-167,0})));
          Modelica.Blocks.Sources.RealExpression pres_HCVSthSOMMOS(y=HCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=0,
                origin={-168,-148})));
          Modelica.Blocks.Sources.RealExpression pres_NCVSthSOMMOS(y=NCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=0,
                origin={-167,-160})));
          Modelica.Blocks.Sources.RealExpression pres_CCVSthSOMMOS(y=CCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=0,
                origin={-164,-173})));
           Modelica.Blocks.Sources.RealExpression Qsol_VN(y=VN.radDistr.iSolDir.Q_flow + VN.radDistr.iSolDif.Q_flow)
                                               "Number of occupants present"
            annotation (Placement(transformation(extent={{-176,14},{-156,34}})));
        equation
          connect(VN.uLig,light41. y) annotation (Line(points={{-52.8,35.8},{-13,35.8},{-13,40}},
                             color={0,0,127}));
          connect(light56.y,VS. uLig) annotation (Line(points={{65,-68},{60,-68},
                  {60,-70.2},{31.2,-70.2}},  color={0,0,127}));
          connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
              points={{-35.72,34.4},{-35.72,26.2},{-36,26.2},{-36,17.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
              points={{-48.6,34.4},{-30.7,34.4},{-30.7,16.2},{-22.56,16.2}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
              points={{56.4,-67.4},{56.4,-34.7},{-45.52,-34.7},{-45.52,12.28}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
              points={{61.44,-89.8},{39.28,-89.8},{39.28,-71.6},{35.4,-71.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
              points={{48.28,-71.6},{48.28,-78},{48,-78},{48,-88.4}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-51.4,28.8},{-7.3,28.8},{-7.3,58},
                  {-20,58}},                        color={0,0,127}));
          connect(VS.TSensor, tDCVS.a) annotation (Line(points={{32.6,-77.2},{
                  32.6,-39.6},{66,-39.6},{66,-42}},color={0,0,127}));
          connect(Tout_VN.port_b,bou_VN. ports[1])
            annotation (Line(points={{-94,-52},{-94,-60}},   color={0,127,255}));
          connect(m_VN.ports[1],TABSVN. port_a) annotation (Line(points={{-96,6},{-96,-2},{-94,-2}},
                                        color={0,127,255}));
          connect(TABSVN.port_b,Tout_VN. port_a) annotation (Line(points={{-94,-22},{-94,-32}},
                                        color={0,127,255}));
          connect(HCVNthSOMMOS.y, switch_VN_T.a)
            annotation (Line(points={{-72,73},{-78,73},{-78,66}}, color={0,0,127}));
          connect(NCVNthSOMMOS.y, switch_VN_T.b) annotation (Line(points={{-87,76.5},{-87,70.25},{-86,
                  70.25},{-86,66}}, color={0,0,127}));
          connect(CCVNthSOMMOS.y, switch_VN_T.c)
            annotation (Line(points={{-100,75},{-100,66},{-94,66}}, color={0,0,127}));
          connect(m_VN_H.y,switch_VN_m. a) annotation (Line(points={{-131,64.5},{-131,58.25},
                  {-140,58.25},{-140,58}},   color={0,0,127}));
          connect(m_VN_N.y,switch_VN_m. b) annotation (Line(points={{-147,68.5},{-147,66.25},{-148,
                  66.25},{-148,58}},         color={0,0,127}));
          connect(m_VN_C.y,switch_VN_m. c) annotation (Line(points={{-161,64.5},{
                  -161,66.25},{-156,66.25},{-156,58}},
                                             color={0,0,127}));
          connect(switch_VN_T.u,switch_VN_m. u) annotation (Line(points={{-74,54},{-100,54},{-100,46},
                  {-136,46}},               color={0,0,127}));
          connect(TRM.TRm, switch_VN_m.u) annotation (Line(points={{-117.58,92},{-114,92},{-114,46},
                  {-136,46}}, color={0,0,127}));
          connect(m_VN.m_flow_in, switch_VN_m.y) annotation (Line(points={{-88,28},{-76,28},{-76,36},
                  {-114,36},{-114,35},{-148,35}}, color={0,0,127}));
          connect(switch_VN_T.y, m_VN.T_in)
            annotation (Line(points={{-86,43},{-91,43},{-91,28},{-92,28}}, color={0,0,127}));
          connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{-50,
                  13.4},{-62,13.4},{-62,-12},{-84,-12}},
                                        color={191,0,0}));
          connect(m_VS.ports[1], TABSVS.port_a)
            annotation (Line(points={{0,-78},{0,-62}},     color={0,127,255}));
          connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{10,-52},
                  {24,-52},{24,-92.6},{34,-92.6}},
                                            color={191,0,0}));
          connect(TABSVS.port_b, Tout_VS.port_a)
            annotation (Line(points={{0,-42},{0,-34}},     color={0,127,255}));
          connect(Tout_VS.port_b, bou_VS.ports[1])
            annotation (Line(points={{0,-14},{-2,-14},{-2,-6}},      color={0,127,255}));
          connect(TRM1.TRm, switch_VS_m.u) annotation (Line(points={{-159.58,-122},
                  {-132,-122},{-132,-134},{-104,-134}}, color={0,0,127}));
          connect(m_VS_H.y, switch_VS_m.a) annotation (Line(points={{-113,-166.5},
                  {-113,-158.25},{-100,-158.25},{-100,-146}}, color={0,0,127}));
          connect(m_VS_C.y, switch_VS_m.c) annotation (Line(points={{-77,-168.5},
                  {-77,-156.25},{-84,-156.25},{-84,-146}}, color={0,0,127}));
          connect(m_VN_N1.y, switch_VS_m.b) annotation (Line(points={{-95,-166.5},
                  {-95,-156.25},{-92,-156.25},{-92,-146}}, color={0,0,127}));
          connect(m_VS.m_flow_in, switch_VS_m.y) annotation (Line(points={{8,-100},
                  {28,-100},{28,-123},{-92,-123}}, color={0,0,127}));
          connect(switch_VS_T.y, m_VS.T_in) annotation (Line(points={{-40,-125},{
                  -40,-100},{4,-100}}, color={0,0,127}));
          connect(switch_VS_T.u, switch_VS_m.u) annotation (Line(points={{-52,
                  -136},{-82,-136},{-82,-134},{-104,-134}}, color={0,0,127}));
          connect(HCVSthSOMMOS.y, switch_VS_T.a) annotation (Line(points={{-56,
                  -159.2},{-52,-159.2},{-52,-148},{-48,-148}}, color={0,0,127}));
          connect(NCVSthSOMMOS.y, switch_VS_T.b) annotation (Line(points={{-41,
                  -172.5},{-41,-161.25},{-40,-161.25},{-40,-148}}, color={0,0,127}));
          connect(CCVSthSOMMOS.y, switch_VS_T.c) annotation (Line(points={{-12,
                  -167.3},{-21,-167.3},{-21,-148},{-32,-148}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
                                                                         Diagram(
                coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
            experiment(StopTime=31536000));
        end V_optimized;

        model V_OJ "Original theoretical derived HCCC applied and original minimum mass flow applied (both with MOSSOM approach)
  In Neutral mode, the mass flow is the average between H and C mode. Tin=aTrm +b
  In Neutral mode, a= to the biggest a from H or C and b= (bH+bC)/2
  "
          import Occupancy;
          import Vaartstraat;
          replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
          IDEAS.Buildings.Components.RectangularZoneTemplate VN(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=true,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            fracA=0.255,
            redeclare Vaartstraat.Walls.Outer_wall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
            hasEmb=true)
                        "Room north in Vaarstraat 0241"
            annotation (Placement(transformation(extent={{-22,12},{-50,40}})));

          inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
                Modelica.Utilities.Files.loadResource(
                "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
            annotation (Placement(transformation(extent={{-180,82},{-160,102}})));
           Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{8,30},{-12,50}})));
           IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
             annotation (Placement(transformation(extent={{-154,82},{-138,98}})));
          IDEAS.Buildings.Components.RectangularZoneTemplate VS(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=false,
            hasWinC=true,
            hasWinD=false,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            A_winC=3.158,
            A_winD=3.158,
            fracC=0.255,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Outer_wall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingC,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingD,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
            hasCavityC=false,
            hasEmb=true)     "Room south in Vaartstraat 0256"
            annotation (Placement(transformation(extent={{-8,-64},{-36,-36}})));

           Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{16,-48},{-4,-28}})));
         /* IDEAS.Buildings.Components.RectangularZoneTemplate ON(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare Occupancy.OccSched_Office occNum(k=1),
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinA=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winA=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypA,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
    hasEmb=true)
               "North parth of the zone"
    annotation (Placement(transformation(extent={{24,8},{52,42}})));*/

        /*  IDEAS.Buildings.Components.RectangularZoneTemplate OS(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
    redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinC=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winC=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypC,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
    hasEmb=true)
               "South part of the zone"
    annotation (Placement(transformation(extent={{24,-68},{52,-36}})));*/

          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
            annotation (Placement(transformation(extent={{-132,84},{-118,100}})));
          TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVN.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-18,48},{6,68}})));

          TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVS.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-2,-22},{22,-2}})));

         /*TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCON.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{64,36},{88,56}})));

  TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCOS.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{70,-40},{94,-20}})));*/

          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.1505) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-94,-12})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-94,-42})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-94,-70})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.1305,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-96,16})));
          BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-86,54})));
          Modelica.Blocks.Sources.RealExpression HCVNthSOMMOS(y=(-0.073008085)*(TRM.TRm - 273.15)
                 + (23.60617788) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-72,84})));
          Modelica.Blocks.Sources.RealExpression NCVNthSOMMOS(y=-0.073008085*(TRM.TRm - 273.15) +
                (24.1445) + 273.15)    annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-87,82})));
          Modelica.Blocks.Sources.RealExpression CCVNthSOMMOS(y=-0.007472382*(TRM.TRm - 273.15) +
                (24.68307335) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-100,86})));
          BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-148,46})));
          Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0077)  annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-131,72})));
          Modelica.Blocks.Sources.RealExpression m_VN_N(y=(m_VN_H.y + m_VN_C.y)/2)
                                                                      annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-147,74})));
          Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.1505)     annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-159,70})));
          Modelica.Blocks.Sources.RealExpression pres_HCVNthSOMMOS(y=HCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,-6},{-5,6}},
                rotation=180,
                origin={-167,8})));
          Modelica.Blocks.Sources.RealExpression pres_CCVNthSOMMOS(y=CCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,-8},{5,8}},
                rotation=0,
                origin={-165,-14})));
          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.9783) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=270,
                origin={-62,-56})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-28})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-64,0})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.8544,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-92})));
          BaseClasses.Switch_3 switch_VN_m1
                                           annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-94,-130})));
          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
            annotation (Placement(transformation(extent={{-176,-126},{-162,-110}})));
          Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)
                /2))                                                  annotation (
              Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-97,-168})));
          Modelica.Blocks.Sources.RealExpression m_VS_H(y=0.0077) annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-115,-168})));
          Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.9783) annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-79,-170})));
          BaseClasses.Switch_3 switch_VN_T1
                                           annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-42,-132})));
          Modelica.Blocks.Sources.RealExpression CCVSthSOMMOS(y=-0.005368822*(TRM.TRm - 273.15) +
                (24.63153614) + 273.15)
                           annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=90,
                origin={-14,-171})));
          Modelica.Blocks.Sources.RealExpression NCVSthSOMMOS(y=(-0.073008085)*(TRM.TRm - 273.15)
                 + (24.63) + 273.15)         annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-43,-172})));
          Modelica.Blocks.Sources.RealExpression HCVSthSOMMOS(y=3*(-0.073008085)*(TRM.TRm - 273.15)
                 + (23.60617788 - 1.5) + 273.15)
                           annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=90,
                origin={-58,-164})));
          Modelica.Blocks.Sources.RealExpression pres_NCVNthSOMMOS(y=NCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=0,
                origin={-167,0})));
          Modelica.Blocks.Sources.RealExpression pres_HCVSthSOMMOS(y=HCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=0,
                origin={-170,-144})));
          Modelica.Blocks.Sources.RealExpression pres_NCVSthSOMMOS(y=NCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=0,
                origin={-169,-156})));
          Modelica.Blocks.Sources.RealExpression pres_CCVSthSOMMOS(y=CCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=0,
                origin={-166,-169})));
           Modelica.Blocks.Sources.RealExpression Qsol_VN(y=VN.radDistr.iSolDir.Q_flow + VN.radDistr.iSolDif.Q_flow)
                                               "Number of occupants present"
            annotation (Placement(transformation(extent={{-176,14},{-156,34}})));
        equation
          connect(VN.uLig,light41. y) annotation (Line(points={{-52.8,35.8},{-13,35.8},{-13,40}},
                             color={0,0,127}));
          connect(light56.y,VS. uLig) annotation (Line(points={{-5,-38},{-10,-38},{-10,-40.2},{-38.8,
                  -40.2}},                   color={0,0,127}));
          connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
              points={{-35.72,34.4},{-35.72,26.2},{-36,26.2},{-36,17.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
              points={{-48.6,34.4},{-30.7,34.4},{-30.7,16.2},{-22.56,16.2}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
              points={{-13.6,-37.4},{-13.6,-0.7},{-45.52,-0.7},{-45.52,12.28}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
              points={{-8.56,-59.8},{-30.72,-59.8},{-30.72,-41.6},{-34.6,-41.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
              points={{-21.72,-41.6},{-21.72,-25.8},{-22,-25.8},{-22,-58.4}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-51.4,28.8},{-7.3,28.8},{-7.3,58},
                  {-20,58}},                        color={0,0,127}));
          connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-37.4,-47.2},{-37.4,-9.6},{-4,-9.6},
                  {-4,-12}},                       color={0,0,127}));
          connect(Tout_VN.port_b,bou_VN. ports[1])
            annotation (Line(points={{-94,-52},{-94,-60}},   color={0,127,255}));
          connect(m_VN.ports[1],TABSVN. port_a) annotation (Line(points={{-96,6},{-96,-2},{-94,-2}},
                                        color={0,127,255}));
          connect(TABSVN.port_b,Tout_VN. port_a) annotation (Line(points={{-94,-22},{-94,-32}},
                                        color={0,127,255}));
          connect(HCVNthSOMMOS.y, switch_VN_T.a)
            annotation (Line(points={{-72,73},{-78,73},{-78,66}}, color={0,0,127}));
          connect(NCVNthSOMMOS.y, switch_VN_T.b) annotation (Line(points={{-87,76.5},{-87,70.25},{-86,
                  70.25},{-86,66}}, color={0,0,127}));
          connect(CCVNthSOMMOS.y, switch_VN_T.c)
            annotation (Line(points={{-100,75},{-100,66},{-94,66}}, color={0,0,127}));
          connect(m_VN_H.y,switch_VN_m. a) annotation (Line(points={{-131,66.5},{-131,58.25},{-140,
                  58.25},{-140,58}},         color={0,0,127}));
          connect(m_VN_N.y,switch_VN_m. b) annotation (Line(points={{-147,68.5},{-147,66.25},{-148,
                  66.25},{-148,58}},         color={0,0,127}));
          connect(m_VN_C.y,switch_VN_m. c) annotation (Line(points={{-159,64.5},{-159,66.25},{-156,
                  66.25},{-156,58}},         color={0,0,127}));
          connect(switch_VN_T.u,switch_VN_m. u) annotation (Line(points={{-74,54},{-100,54},{-100,46},
                  {-136,46}},               color={0,0,127}));
          connect(TRM.TRm, switch_VN_m.u) annotation (Line(points={{-117.58,92},{-114,92},{-114,46},
                  {-136,46}}, color={0,0,127}));
          connect(m_VN.m_flow_in, switch_VN_m.y) annotation (Line(points={{-88,28},{-76,28},{-76,36},
                  {-114,36},{-114,35},{-148,35}}, color={0,0,127}));
          connect(switch_VN_T.y, m_VN.T_in)
            annotation (Line(points={{-86,43},{-91,43},{-91,28},{-92,28}}, color={0,0,127}));
          connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{-50,13.4},{-78,13.4},
                  {-78,-12},{-84,-12}}, color={191,0,0}));
          connect(m_VS.ports[1], TABSVS.port_a)
            annotation (Line(points={{-62,-82},{-62,-66}}, color={0,127,255}));
          connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{-52,-56},{-44,-56},
                  {-44,-62.6},{-36,-62.6}}, color={191,0,0}));
          connect(TABSVS.port_b, Tout_VS.port_a)
            annotation (Line(points={{-62,-46},{-62,-38}}, color={0,127,255}));
          connect(Tout_VS.port_b, bou_VS.ports[1])
            annotation (Line(points={{-62,-18},{-64,-18},{-64,-10}}, color={0,127,255}));
          connect(TRM1.TRm, switch_VN_m1.u) annotation (Line(points={{-161.58,-118},{-134,-118},{-134,
                  -130},{-106,-130}}, color={0,0,127}));
          connect(m_VS_H.y, switch_VN_m1.a) annotation (Line(points={{-115,-162.5},{-115,-154.25},{
                  -102,-154.25},{-102,-142}}, color={0,0,127}));
          connect(m_VS_C.y, switch_VN_m1.c) annotation (Line(points={{-79,-164.5},{-79,-152.25},{-86,
                  -152.25},{-86,-142}}, color={0,0,127}));
          connect(m_VN_N1.y, switch_VN_m1.b) annotation (Line(points={{-97,-162.5},{-97,-152.25},{-94,
                  -152.25},{-94,-142}}, color={0,0,127}));
          connect(m_VS.m_flow_in, switch_VN_m1.y) annotation (Line(points={{-54,-104},{-46,-104},{-46,
                  -119},{-94,-119}}, color={0,0,127}));
          connect(switch_VN_T1.y, m_VS.T_in) annotation (Line(points={{-42,-121},{-60,-121},{-60,-104},
                  {-58,-104}}, color={0,0,127}));
          connect(switch_VN_T1.u, switch_VN_m1.u) annotation (Line(points={{-54,-132},{-84,-132},{-84,
                  -130},{-106,-130}}, color={0,0,127}));
          connect(HCVSthSOMMOS.y, switch_VN_T1.a) annotation (Line(points={{-58,-155.2},{-54,-155.2},
                  {-54,-144},{-50,-144}}, color={0,0,127}));
          connect(NCVSthSOMMOS.y, switch_VN_T1.b) annotation (Line(points={{-43,-166.5},{-43,-157.25},
                  {-42,-157.25},{-42,-144}}, color={0,0,127}));
          connect(CCVSthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{-14,-163.3},{-23,-163.3},
                  {-23,-144},{-34,-144}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
                                                                         Diagram(
                coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
            experiment(StopTime=31536000));
        end V_OJ;

        model O_OJ "Original theoretical derived HCCC applied and original minimum mass flow applied (both with MOSSOM approach)
  In Neutral mode, the mass flow is the average between H and C mode. Tin=aTrm +b
  In Neutral mode, a= to the biggest a from H or C and b= (bH+bC)/2"
          import Occupancy;
          import Vaartstraat;
          replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});

          inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
                Modelica.Utilities.Files.loadResource(
                "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
            annotation (Placement(transformation(extent={{-180,82},{-160,102}})));
           IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
             annotation (Placement(transformation(extent={{-154,82},{-138,98}})));

          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
            annotation (Placement(transformation(extent={{-132,84},{-118,100}})));

         /*TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCON.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{64,36},{88,56}})));

  TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCOS.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{70,-40},{94,-20}})));*/

          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSON(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=4*4,
            nParCir=2,
            m_flow_nominal=0.2386) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-94,-12})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_ON(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-94,-42})));
          IDEAS.Fluid.Sources.Boundary_pT bou_ON(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-94,-70})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_ON(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.1305,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-96,16})));
          BaseClasses.Switch_3 switch_ON_T annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-86,54})));
          Modelica.Blocks.Sources.RealExpression HCONthSOMMOS(y=(-0.192630385)*(
                TRM.TRm - 273.15) + (26.23786848) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-72,84})));
          Modelica.Blocks.Sources.RealExpression NCONthSOMMOS(y=(-0.192630385)*(
                TRM.TRm - 273.15) + (26.25573) + 273.15)
                                       annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-87,82})));
          Modelica.Blocks.Sources.RealExpression CCONthSOMMOS(y=-0.072395894*(TRM.TRm
                 - 273.15) + (26.2736994) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-98,86})));
          BaseClasses.Switch_3 switch_ON_m annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-148,46})));
          Modelica.Blocks.Sources.RealExpression m_ON_H(y=0.0234)  annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-131,72})));
          Modelica.Blocks.Sources.RealExpression m_ON_N(y=(m_ON_H.y +m_ON_C.y) /2)
                                                                      annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-147,74})));
          Modelica.Blocks.Sources.RealExpression m_ON_C(y=0.2386)     annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-159,70})));
          Modelica.Blocks.Sources.RealExpression pres_HCONthSOMMOS(y=HCONthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,-6},{-5,6}},
                rotation=180,
                origin={-167,8})));
          Modelica.Blocks.Sources.RealExpression pres_CCONthSOMMOS(y=CCONthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,-8},{5,8}},
                rotation=0,
                origin={-165,-14})));
          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSOS(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=4*4,
            nParCir=2,
            m_flow_nominal=0.181)  annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=270,
                origin={-62,-56})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_OS(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-28})));
          IDEAS.Fluid.Sources.Boundary_pT bou_OS(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-64,0})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_OS(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.8544,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-92})));
          BaseClasses.Switch_3 switch_OS_m annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-94,-130})));
          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
            annotation (Placement(transformation(extent={{-176,-126},{-162,-110}})));
          Modelica.Blocks.Sources.RealExpression m_OS_N(y=((m_OS_H.y + m_OS_C.y)/
                2)) annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-97,-168})));
          Modelica.Blocks.Sources.RealExpression m_OS_H(y=0.0213) annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-115,-168})));
          Modelica.Blocks.Sources.RealExpression m_OS_C(y=0.181)  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-79,-170})));
          BaseClasses.Switch_3 switch_OS_T annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-40,-132})));
          Modelica.Blocks.Sources.RealExpression CCOSthSOMMOS(y=(-0.058622961)*(
                TRM.TRm - 273.15) + (25.93626255) + 273.15)
                           annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=90,
                origin={-14,-173})));
          Modelica.Blocks.Sources.RealExpression NCOSthSOMMOS(y=(-0.206797035)*(
                TRM.TRm - 273.15) + (26.2425) + 273.15)
                                             annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-43,-172})));
          Modelica.Blocks.Sources.RealExpression HCOSthSOMMOS(y=(-0.206797035)*(
                TRM.TRm - 273.15) + (26.54953476) + 273.15)
                           annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=90,
                origin={-58,-164})));
          Modelica.Blocks.Sources.RealExpression pres_NCONthSOMMOS(y=NCONthSOMMOS.y
                 - 273.15) annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=0,
                origin={-167,0})));
          Modelica.Blocks.Sources.RealExpression pres_HCOSthSOMMOS(y=HCOSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=0,
                origin={-170,-144})));
          Modelica.Blocks.Sources.RealExpression pres_NCOSthSOMMOS(y=NCOSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=0,
                origin={-169,-156})));
          Modelica.Blocks.Sources.RealExpression pres_CCOSthSOMMOS(y=CCOSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=0,
                origin={-166,-169})));
           Modelica.Blocks.Sources.RealExpression Qsol_VN(y=ON.radDistr.iSolDir.Q_flow
                 + ON.radDistr.iSolDif.Q_flow) "Number of occupants present"
            annotation (Placement(transformation(extent={{-176,14},{-156,34}})));
          IDEAS.Buildings.Components.RectangularZoneTemplate ON(
            redeclare package Medium = Medium,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Office occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
              ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=true,
            hasInt=true,
            aziA=IDEAS.Types.Azimuth.N,
            l=4,
            w=4,
            lInt=1,
            h=2.7,
            A_winA=1*1,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypA,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypB,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypC,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypD,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
            redeclare
              IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
              shaTypA,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
            hasEmb=true)
                       "North parth of the zone"
            annotation (Placement(transformation(extent={{8,0},{-20,34}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate OS(
            redeclare package Medium = Medium,
            n50=0.5,
            T_start=295.15,
            redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
            redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
            redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
              ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinC=true,
            hasInt=true,
            aziA=IDEAS.Types.Azimuth.N,
            l=4,
            w=4,
            lInt=1,
            h=2.7,
            A_winC=1*1,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypA,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypB,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypC,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
              conTypD,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
            redeclare
              IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
              shaTypC,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
            hasEmb=true)
                       "South part of the zone"
            annotation (Placement(transformation(extent={{8,-76},{-20,-44}})));

          TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter
              TDC_Json(
              fileName="TDCON.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1)) annotation (Placement(transformation(extent={{20,28},{44,48}})));

          TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter
              TDC_Json(
              fileName="TDCOS.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{26,-48},{50,-28}})));

        equation
          connect(Tout_ON.port_b,bou_ON. ports[1])
            annotation (Line(points={{-94,-52},{-94,-60}},   color={0,127,255}));
          connect(m_ON.ports[1],TABSON. port_a) annotation (Line(points={{-96,6},{-96,-2},{-94,-2}},
                                        color={0,127,255}));
          connect(TABSON.port_b,Tout_ON. port_a) annotation (Line(points={{-94,-22},{-94,-32}},
                                        color={0,127,255}));
          connect(HCONthSOMMOS.y,switch_ON_T. a)
            annotation (Line(points={{-72,73},{-78,73},{-78,66}}, color={0,0,127}));
          connect(NCONthSOMMOS.y,switch_ON_T. b) annotation (Line(points={{-87,76.5},{-87,70.25},{-86,
                  70.25},{-86,66}}, color={0,0,127}));
          connect(CCONthSOMMOS.y,switch_ON_T. c)
            annotation (Line(points={{-98,75},{-98,66},{-94,66}},   color={0,0,127}));
          connect(m_ON_H.y,switch_ON_m. a) annotation (Line(points={{-131,66.5},{-131,58.25},{-140,
                  58.25},{-140,58}},         color={0,0,127}));
          connect(m_ON_N.y,switch_ON_m. b) annotation (Line(points={{-147,68.5},{-147,66.25},{-148,
                  66.25},{-148,58}},         color={0,0,127}));
          connect(m_ON_C.y,switch_ON_m. c) annotation (Line(points={{-159,64.5},{-159,66.25},{-156,
                  66.25},{-156,58}},         color={0,0,127}));
          connect(switch_ON_T.u,switch_ON_m. u) annotation (Line(points={{-74,54},{-100,54},{-100,46},
                  {-136,46}},               color={0,0,127}));
          connect(TRM.TRm,switch_ON_m. u) annotation (Line(points={{-117.58,92},{-114,92},{-114,46},
                  {-136,46}}, color={0,0,127}));
          connect(m_ON.m_flow_in,switch_ON_m. y) annotation (Line(points={{-88,28},{-76,28},{-76,36},
                  {-114,36},{-114,35},{-148,35}}, color={0,0,127}));
          connect(switch_ON_T.y,m_ON. T_in)
            annotation (Line(points={{-86,43},{-91,43},{-91,28},{-92,28}}, color={0,0,127}));
          connect(m_OS.ports[1],TABSOS. port_a)
            annotation (Line(points={{-62,-82},{-62,-66}}, color={0,127,255}));
          connect(TABSOS.port_b,Tout_OS. port_a)
            annotation (Line(points={{-62,-46},{-62,-38}}, color={0,127,255}));
          connect(Tout_OS.port_b,bou_OS. ports[1])
            annotation (Line(points={{-62,-18},{-64,-18},{-64,-10}}, color={0,127,255}));
          connect(TRM1.TRm, switch_OS_m.u) annotation (Line(points={{-161.58,-118},
                  {-134,-118},{-134,-130},{-106,-130}}, color={0,0,127}));
          connect(m_OS_H.y, switch_OS_m.a) annotation (Line(points={{-115,-162.5},
                  {-115,-154.25},{-102,-154.25},{-102,-142}}, color={0,0,127}));
          connect(m_OS_C.y, switch_OS_m.c) annotation (Line(points={{-79,-164.5},
                  {-79,-152.25},{-86,-152.25},{-86,-142}}, color={0,0,127}));
          connect(m_OS_N.y, switch_OS_m.b) annotation (Line(points={{-97,-162.5},
                  {-97,-152.25},{-94,-152.25},{-94,-142}}, color={0,0,127}));
          connect(m_OS.m_flow_in, switch_OS_m.y) annotation (Line(points={{-54,-104},
                  {-46,-104},{-46,-119},{-94,-119}}, color={0,0,127}));
          connect(switch_OS_T.y, m_OS.T_in) annotation (Line(points={{-40,-121},{
                  -60,-121},{-60,-104},{-58,-104}}, color={0,0,127}));
          connect(switch_OS_T.u, switch_OS_m.u) annotation (Line(points={{-52,
                  -132},{-84,-132},{-84,-130},{-106,-130}}, color={0,0,127}));
          connect(HCOSthSOMMOS.y, switch_OS_T.a) annotation (Line(points={{-58,
                  -155.2},{-54,-155.2},{-54,-144},{-48,-144}}, color={0,0,127}));
          connect(NCOSthSOMMOS.y, switch_OS_T.b) annotation (Line(points={{-43,
                  -166.5},{-43,-157.25},{-40,-157.25},{-40,-144}}, color={0,0,127}));
          connect(CCOSthSOMMOS.y, switch_OS_T.c) annotation (Line(points={{-14,
                  -165.3},{-23,-165.3},{-23,-144},{-32,-144}}, color={0,0,127}));
          connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
              points={{-6,6.8},{-5.72,6.8},{-5.72,27.2}},
              color={255,204,51},
              thickness=0.5));
          connect(OS.proBusA,ON. proBusC) annotation (Line(
              points={{2.4,-45.6},{2.4,-17.5},{-15.52,-17.5},{-15.52,0.34}},
              color={255,204,51},
              thickness=0.5));
          connect(OS.proBusCei,OS. proBusFlo) annotation (Line(
              points={{-5.72,-50.4},{-6,-50.4},{-6,-69.6}},
              color={255,204,51},
              thickness=0.5));
          connect(ON.TSensor,tDCON. a) annotation (Line(points={{-21.4,20.4},{
                  -21.4,30.2},{18,30.2},{18,38}},
                                            color={0,0,127}));
          connect(OS.TSensor,tDCOS. a) annotation (Line(points={{-21.4,-56.8},{
                  -21.4,-47.4},{24,-47.4},{24,-38}},
                                               color={0,0,127}));
          connect(ON.gainEmb[1], TABSON.heatPortEmb[1]) annotation (Line(points={
                  {-20,1.7},{-28,1.7},{-28,2},{-36,2},{-36,-10},{-84,-10},{-84,
                  -12}}, color={191,0,0}));
          connect(OS.gainEmb[1], TABSOS.heatPortEmb[1]) annotation (Line(points={
                  {-20,-74.4},{-35,-74.4},{-35,-56},{-52,-56}}, color={191,0,0}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
                                                                         Diagram(
                coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
            experiment(StopTime=31536000));
        end O_OJ;

        model O_optimized "Theoretical derived HCCC with MOSSOM approach is optimized untill Northern zones have TDC<100Kh for North and TDC<100 Kh for South"
          import Occupancy;
          import Vaartstraat;
          replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});

          inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
                Modelica.Utilities.Files.loadResource(
                "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
            annotation (Placement(transformation(extent={{-180,82},{-160,102}})));
           IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
             annotation (Placement(transformation(extent={{-154,82},{-138,98}})));

          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
            annotation (Placement(transformation(extent={{-132,84},{-118,100}})));

         /*TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCON.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{64,36},{88,56}})));

  TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCOS.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{70,-40},{94,-20}})));*/

          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSON(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=4*4,
            nParCir=2,
            m_flow_nominal=0.2386) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-94,-12})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_ON(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-94,-42})));
          IDEAS.Fluid.Sources.Boundary_pT bou_ON(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-94,-70})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_ON(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.1305,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-96,16})));
          BaseClasses.Switch_3 switch_ON_T annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-86,54})));
          Modelica.Blocks.Sources.RealExpression HCONthSOMMOS(y=(-0.192630385)*(TRM.TRm -
                273.15) + (26.23786848 + 2.5) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-72,84})));
          Modelica.Blocks.Sources.RealExpression NCONthSOMMOS(y=(-0.192630385)*(TRM.TRm -
                273.15) + (26.25573) + 273.15)
                                       annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-87,82})));
          Modelica.Blocks.Sources.RealExpression CCONthSOMMOS(y=-0.072395894*(TRM.TRm -
                273.15) + (26.2736994) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-98,86})));
          BaseClasses.Switch_3 switch_ON_m annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-148,46})));
          Modelica.Blocks.Sources.RealExpression m_ON_H(y=0.0234)  annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-131,72})));
          Modelica.Blocks.Sources.RealExpression m_ON_N(y=(m_ON_H.y +m_ON_C.y) /2)
                                                                      annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-147,74})));
          Modelica.Blocks.Sources.RealExpression m_ON_C(y=0.2386)     annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-159,70})));
          Modelica.Blocks.Sources.RealExpression pres_HCONthSOMMOS(y=HCONthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,-6},{-5,6}},
                rotation=180,
                origin={-167,8})));
          Modelica.Blocks.Sources.RealExpression pres_CCONthSOMMOS(y=CCONthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,-8},{5,8}},
                rotation=0,
                origin={-165,-14})));
          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSOS(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=4*4,
            nParCir=2,
            m_flow_nominal=0.181)  annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=270,
                origin={-62,-56})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_OS(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-28})));
          IDEAS.Fluid.Sources.Boundary_pT bou_OS(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-64,0})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_OS(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.8544,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-92})));
          BaseClasses.Switch_3 switch_OS_m annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-94,-130})));
          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
            annotation (Placement(transformation(extent={{-176,-126},{-162,-110}})));
          Modelica.Blocks.Sources.RealExpression m_OS_N(y=((m_OS_H.y + m_OS_C.y)/2))
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-97,-168})));
          Modelica.Blocks.Sources.RealExpression m_OS_H(y=0.0213) annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-109,-166})));
          Modelica.Blocks.Sources.RealExpression m_OS_C(y=0.181)  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-79,-170})));
          BaseClasses.Switch_3 switch_OS_T annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-40,-132})));
          Modelica.Blocks.Sources.RealExpression CCOSthSOMMOS(y=(-0.058622961)*(TRM.TRm -
                273.15) + (25.93626255 - 1.5) + 273.15)
                           annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=90,
                origin={-14,-173})));
          Modelica.Blocks.Sources.RealExpression NCOSthSOMMOS(y=0.9*(-0.206797035)*(TRM.TRm
                 - 273.15) + (26.2425 - 0.75) + 273.15)
                                             annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-43,-172})));
          Modelica.Blocks.Sources.RealExpression HCOSthSOMMOS(y=0.95*(-0.206797035)*(
                TRM.TRm - 273.15) + (26.54953476) + 273.15)
                           annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=90,
                origin={-58,-168})));
          Modelica.Blocks.Sources.RealExpression pres_NCONthSOMMOS(y=NCONthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=0,
                origin={-167,0})));
          Modelica.Blocks.Sources.RealExpression pres_HCOSthSOMMOS(y=HCOSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=0,
                origin={-170,-144})));
          Modelica.Blocks.Sources.RealExpression pres_NCOSthSOMMOS(y=NCOSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=0,
                origin={-169,-156})));
          Modelica.Blocks.Sources.RealExpression pres_CCOSthSOMMOS(y=CCOSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=0,
                origin={-166,-169})));
           Modelica.Blocks.Sources.RealExpression Qsol_VN(y=ON.radDistr.iSolDir.Q_flow +
                ON.radDistr.iSolDif.Q_flow)    "Number of occupants present"
            annotation (Placement(transformation(extent={{-176,14},{-156,34}})));
          IDEAS.Buildings.Components.RectangularZoneTemplate ON(
            redeclare package Medium = Medium,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Office occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=true,
            hasInt=true,
            aziA=IDEAS.Types.Azimuth.N,
            l=4,
            w=4,
            lInt=1,
            h=2.7,
            A_winA=1*1,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
            redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
              shaTypA,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
            hasEmb=true)
                       "North parth of the zone"
            annotation (Placement(transformation(extent={{8,0},{-20,34}})));

          IDEAS.Buildings.Components.RectangularZoneTemplate OS(
            redeclare package Medium = Medium,
            n50=0.5,
            T_start=295.15,
            redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
            redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
            redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinC=true,
            hasInt=true,
            aziA=IDEAS.Types.Azimuth.N,
            l=4,
            w=4,
            lInt=1,
            h=2.7,
            A_winC=1*1,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
            redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
            redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
              shaTypC,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
            hasEmb=true)
                       "South part of the zone"
            annotation (Placement(transformation(extent={{8,-76},{-20,-44}})));

          TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCON.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1)) annotation (Placement(transformation(extent={{20,28},{44,48}})));
          TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCOS.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{26,-48},{50,-28}})));
        equation
          connect(Tout_ON.port_b,bou_ON. ports[1])
            annotation (Line(points={{-94,-52},{-94,-60}},   color={0,127,255}));
          connect(m_ON.ports[1],TABSON. port_a) annotation (Line(points={{-96,6},{-96,-2},{-94,-2}},
                                        color={0,127,255}));
          connect(TABSON.port_b,Tout_ON. port_a) annotation (Line(points={{-94,-22},{-94,-32}},
                                        color={0,127,255}));
          connect(HCONthSOMMOS.y,switch_ON_T. a)
            annotation (Line(points={{-72,73},{-78,73},{-78,66}}, color={0,0,127}));
          connect(NCONthSOMMOS.y,switch_ON_T. b) annotation (Line(points={{-87,76.5},{-87,70.25},{-86,
                  70.25},{-86,66}}, color={0,0,127}));
          connect(CCONthSOMMOS.y,switch_ON_T. c)
            annotation (Line(points={{-98,75},{-98,66},{-94,66}},   color={0,0,127}));
          connect(m_ON_H.y,switch_ON_m. a) annotation (Line(points={{-131,66.5},{-131,58.25},{-140,
                  58.25},{-140,58}},         color={0,0,127}));
          connect(m_ON_N.y,switch_ON_m. b) annotation (Line(points={{-147,68.5},{-147,66.25},{-148,
                  66.25},{-148,58}},         color={0,0,127}));
          connect(m_ON_C.y,switch_ON_m. c) annotation (Line(points={{-159,64.5},{-159,66.25},{-156,
                  66.25},{-156,58}},         color={0,0,127}));
          connect(switch_ON_T.u,switch_ON_m. u) annotation (Line(points={{-74,54},{-100,54},{-100,46},
                  {-136,46}},               color={0,0,127}));
          connect(TRM.TRm,switch_ON_m. u) annotation (Line(points={{-117.58,92},{-114,92},{-114,46},
                  {-136,46}}, color={0,0,127}));
          connect(m_ON.m_flow_in,switch_ON_m. y) annotation (Line(points={{-88,28},{-76,28},{-76,36},
                  {-114,36},{-114,35},{-148,35}}, color={0,0,127}));
          connect(switch_ON_T.y,m_ON. T_in)
            annotation (Line(points={{-86,43},{-91,43},{-91,28},{-92,28}}, color={0,0,127}));
          connect(m_OS.ports[1],TABSOS. port_a)
            annotation (Line(points={{-62,-82},{-62,-66}}, color={0,127,255}));
          connect(TABSOS.port_b,Tout_OS. port_a)
            annotation (Line(points={{-62,-46},{-62,-38}}, color={0,127,255}));
          connect(Tout_OS.port_b,bou_OS. ports[1])
            annotation (Line(points={{-62,-18},{-64,-18},{-64,-10}}, color={0,127,255}));
          connect(TRM1.TRm, switch_OS_m.u) annotation (Line(points={{-161.58,-118},{-134,
                  -118},{-134,-130},{-106,-130}}, color={0,0,127}));
          connect(m_OS_H.y, switch_OS_m.a) annotation (Line(points={{-109,-160.5},
                  {-109,-152.25},{-102,-152.25},{-102,-142}},
                                                        color={0,0,127}));
          connect(m_OS_C.y, switch_OS_m.c) annotation (Line(points={{-79,-164.5},{-79,-152.25},
                  {-86,-152.25},{-86,-142}}, color={0,0,127}));
          connect(m_OS_N.y, switch_OS_m.b) annotation (Line(points={{-97,-162.5},{-97,-152.25},
                  {-94,-152.25},{-94,-142}}, color={0,0,127}));
          connect(m_OS.m_flow_in, switch_OS_m.y) annotation (Line(points={{-54,-104},{-46,
                  -104},{-46,-119},{-94,-119}}, color={0,0,127}));
          connect(switch_OS_T.y, m_OS.T_in) annotation (Line(points={{-40,-121},{-60,-121},
                  {-60,-104},{-58,-104}}, color={0,0,127}));
          connect(switch_OS_T.u, switch_OS_m.u) annotation (Line(points={{-52,-132},{-84,
                  -132},{-84,-130},{-106,-130}}, color={0,0,127}));
          connect(HCOSthSOMMOS.y, switch_OS_T.a) annotation (Line(points={{-58,
                  -159.2},{-56,-159.2},{-56,-144},{-48,-144}},
                                                      color={0,0,127}));
          connect(NCOSthSOMMOS.y, switch_OS_T.b) annotation (Line(points={{-43,-166.5},{
                  -43,-157.25},{-40,-157.25},{-40,-144}}, color={0,0,127}));
          connect(CCOSthSOMMOS.y, switch_OS_T.c) annotation (Line(points={{-14,-165.3},{
                  -23,-165.3},{-23,-144},{-32,-144}}, color={0,0,127}));
          connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
              points={{-6,6.8},{-5.72,6.8},{-5.72,27.2}},
              color={255,204,51},
              thickness=0.5));
          connect(OS.proBusA,ON. proBusC) annotation (Line(
              points={{2.4,-45.6},{2.4,-17.5},{-15.52,-17.5},{-15.52,0.34}},
              color={255,204,51},
              thickness=0.5));
          connect(OS.proBusCei,OS. proBusFlo) annotation (Line(
              points={{-5.72,-50.4},{-6,-50.4},{-6,-69.6}},
              color={255,204,51},
              thickness=0.5));
          connect(ON.TSensor,tDCON. a) annotation (Line(points={{-21.4,20.4},{-21.4,30.2},
                  {18,30.2},{18,38}},       color={0,0,127}));
          connect(OS.TSensor,tDCOS. a) annotation (Line(points={{-21.4,-56.8},{-21.4,-47.4},
                  {24,-47.4},{24,-38}},        color={0,0,127}));
          connect(ON.gainEmb[1], TABSON.heatPortEmb[1]) annotation (Line(points={{-20,1.7},
                  {-28,1.7},{-28,2},{-36,2},{-36,-10},{-84,-10},{-84,-12}}, color={191,0,
                  0}));
          connect(OS.gainEmb[1], TABSOS.heatPortEmb[1]) annotation (Line(points={{-20,-74.4},
                  {-35,-74.4},{-35,-56},{-52,-56}}, color={191,0,0}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
                                                                         Diagram(
                coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
            experiment(StopTime=31536000));
        end O_optimized;
      end mMOSSOM;

      package mBS
        "Theoretical derived HCCC and minimum mass flow both derived from building simulations approach"
        model V_OJ_BS "Original theoretical derived HCCC applied and original minimum mass flow applied (both with building simulations approach)
  In Neutral mode, the mass flow is the average between H and C mode. Tin=aTrm +b
  In Neutral mode, a= to the biggest a from H or C and b= (bH+bC)/2"
          import Occupancy;
          import Vaartstraat;
          replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
          IDEAS.Buildings.Components.RectangularZoneTemplate VN(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=true,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            fracA=0.255,
            redeclare Vaartstraat.Walls.Outer_wall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
            hasEmb=true)
                        "Room north in Vaarstraat 0241"
            annotation (Placement(transformation(extent={{-22,12},{-50,40}})));

          inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
                Modelica.Utilities.Files.loadResource(
                "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
            annotation (Placement(transformation(extent={{-180,82},{-160,102}})));
           Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{8,30},{-12,50}})));
           IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
             annotation (Placement(transformation(extent={{-154,82},{-138,98}})));
          IDEAS.Buildings.Components.RectangularZoneTemplate VS(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=false,
            hasWinC=true,
            hasWinD=false,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            A_winC=3.158,
            A_winD=3.158,
            fracC=0.255,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Outer_wall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingC,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingD,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
            hasCavityC=false,
            hasEmb=true)     "Room south in Vaartstraat 0256"
            annotation (Placement(transformation(extent={{-8,-64},{-36,-36}})));

           Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{16,-48},{-4,-28}})));
         /* IDEAS.Buildings.Components.RectangularZoneTemplate ON(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare Occupancy.OccSched_Office occNum(k=1),
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinA=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winA=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypA,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
    hasEmb=true)
               "North parth of the zone"
    annotation (Placement(transformation(extent={{24,8},{52,42}})));*/

        /*  IDEAS.Buildings.Components.RectangularZoneTemplate OS(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
    redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinC=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winC=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypC,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
    hasEmb=true)
               "South part of the zone"
    annotation (Placement(transformation(extent={{24,-68},{52,-36}})));*/

          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
            annotation (Placement(transformation(extent={{-132,84},{-118,100}})));
          TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVN.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-18,48},{6,68}})));

          TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVS.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-2,-22},{22,-2}})));

         /*TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCON.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{64,36},{88,56}})));

  TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCOS.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{70,-40},{94,-20}})));*/

          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.1505) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-94,-12})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-94,-42})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-94,-70})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.1305,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-96,16})));
          BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-86,54})));
          Modelica.Blocks.Sources.RealExpression HCVNthSOMMOS(y=-0.191106164*(TRM.TRm
                 - 273.15) + (26.20433562) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-72,84})));
          Modelica.Blocks.Sources.RealExpression NCVNthSOMMOS(y=-0.191106164*(TRM.TRm
                 - 273.15) + (24.1445) + 273.15)
                                       annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-87,82})));
          Modelica.Blocks.Sources.RealExpression CCVNthSOMMOS(y=-0.017737762*(TRM.TRm
                 - 273.15) + (25.5694) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-100,86})));
          BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-148,46})));
          Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0019)  annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-131,72})));
          Modelica.Blocks.Sources.RealExpression m_VN_N(y=(m_VN_H.y + m_VN_C.y)/2)
                                                                      annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-147,74})));
          Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.0234)     annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-159,70})));
          Modelica.Blocks.Sources.RealExpression pres_HCVNthSOMMOS(y=HCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,-6},{-5,6}},
                rotation=180,
                origin={-167,8})));
          Modelica.Blocks.Sources.RealExpression pres_CCVNthSOMMOS(y=CCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,-8},{5,8}},
                rotation=0,
                origin={-165,-14})));
          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.9783) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=270,
                origin={-62,-56})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-28})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-64,0})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.8544,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-92})));
          BaseClasses.Switch_3 switch_VN_m1
                                           annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-94,-130})));
          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
            annotation (Placement(transformation(extent={{-176,-126},{-162,-110}})));
          Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)
                /2))                                                  annotation (
              Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-97,-168})));
          Modelica.Blocks.Sources.RealExpression m_VS_H(y=0.00246)
                                                                  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-115,-168})));
          Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.10345)
                                                                  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-79,-170})));
          BaseClasses.Switch_3 switch_VN_T1
                                           annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-42,-132})));
          Modelica.Blocks.Sources.RealExpression CCVSthSOMMOS(y=-0.009140541*(TRM.TRm
                 - 273.15) + (24.72394324) + 273.15)
                           annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=90,
                origin={-14,-171})));
          Modelica.Blocks.Sources.RealExpression NCVSthSOMMOS(y=-0.148412234*(TRM.TRm
                 - 273.15) + (24.99445) + 273.15)
                                             annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-41,-174})));
          Modelica.Blocks.Sources.RealExpression HCVSthSOMMOS(y=-0.148412234*(TRM.TRm
                 - 273.15) + (25.26506915) + 273.15)
                           annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=90,
                origin={-58,-164})));
          Modelica.Blocks.Sources.RealExpression pres_NCVNthSOMMOS(y=NCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=0,
                origin={-167,0})));
          Modelica.Blocks.Sources.RealExpression pres_HCVSthSOMMOS(y=HCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=0,
                origin={-170,-144})));
          Modelica.Blocks.Sources.RealExpression pres_NCVSthSOMMOS(y=NCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=0,
                origin={-169,-156})));
          Modelica.Blocks.Sources.RealExpression pres_CCVSthSOMMOS(y=CCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=0,
                origin={-166,-169})));
           Modelica.Blocks.Sources.RealExpression Qsol_VN(y=VN.radDistr.iSolDir.Q_flow + VN.radDistr.iSolDif.Q_flow)
                                               "Number of occupants present"
            annotation (Placement(transformation(extent={{-176,14},{-156,34}})));
        equation
          connect(VN.uLig,light41. y) annotation (Line(points={{-52.8,35.8},{-13,35.8},{-13,40}},
                             color={0,0,127}));
          connect(light56.y,VS. uLig) annotation (Line(points={{-5,-38},{-10,-38},{-10,-40.2},{-38.8,
                  -40.2}},                   color={0,0,127}));
          connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
              points={{-35.72,34.4},{-35.72,26.2},{-36,26.2},{-36,17.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
              points={{-48.6,34.4},{-30.7,34.4},{-30.7,16.2},{-22.56,16.2}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
              points={{-13.6,-37.4},{-13.6,-0.7},{-45.52,-0.7},{-45.52,12.28}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
              points={{-8.56,-59.8},{-30.72,-59.8},{-30.72,-41.6},{-34.6,-41.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
              points={{-21.72,-41.6},{-21.72,-50},{-20,-50},{-20,-54},{-22,-54},{
                  -22,-58.4}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-51.4,28.8},{-7.3,28.8},{-7.3,58},
                  {-20,58}},                        color={0,0,127}));
          connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-37.4,-47.2},{-37.4,-9.6},{-4,-9.6},
                  {-4,-12}},                       color={0,0,127}));
          connect(Tout_VN.port_b,bou_VN. ports[1])
            annotation (Line(points={{-94,-52},{-94,-60}},   color={0,127,255}));
          connect(m_VN.ports[1],TABSVN. port_a) annotation (Line(points={{-96,6},{-96,-2},{-94,-2}},
                                        color={0,127,255}));
          connect(TABSVN.port_b,Tout_VN. port_a) annotation (Line(points={{-94,-22},{-94,-32}},
                                        color={0,127,255}));
          connect(HCVNthSOMMOS.y, switch_VN_T.a)
            annotation (Line(points={{-72,73},{-78,73},{-78,66}}, color={0,0,127}));
          connect(NCVNthSOMMOS.y, switch_VN_T.b) annotation (Line(points={{-87,76.5},{-87,70.25},{-86,
                  70.25},{-86,66}}, color={0,0,127}));
          connect(CCVNthSOMMOS.y, switch_VN_T.c)
            annotation (Line(points={{-100,75},{-100,66},{-94,66}}, color={0,0,127}));
          connect(m_VN_H.y,switch_VN_m. a) annotation (Line(points={{-131,66.5},{-131,58.25},{-140,
                  58.25},{-140,58}},         color={0,0,127}));
          connect(m_VN_N.y,switch_VN_m. b) annotation (Line(points={{-147,68.5},{-147,66.25},{-148,
                  66.25},{-148,58}},         color={0,0,127}));
          connect(m_VN_C.y,switch_VN_m. c) annotation (Line(points={{-159,64.5},{-159,66.25},{-156,
                  66.25},{-156,58}},         color={0,0,127}));
          connect(switch_VN_T.u,switch_VN_m. u) annotation (Line(points={{-74,54},{-100,54},{-100,46},
                  {-136,46}},               color={0,0,127}));
          connect(TRM.TRm, switch_VN_m.u) annotation (Line(points={{-117.58,92},{-114,92},{-114,46},
                  {-136,46}}, color={0,0,127}));
          connect(m_VN.m_flow_in, switch_VN_m.y) annotation (Line(points={{-88,28},{-76,28},{-76,36},
                  {-114,36},{-114,35},{-148,35}}, color={0,0,127}));
          connect(switch_VN_T.y, m_VN.T_in)
            annotation (Line(points={{-86,43},{-91,43},{-91,28},{-92,28}}, color={0,0,127}));
          connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{-50,13.4},{-78,13.4},
                  {-78,-12},{-84,-12}}, color={191,0,0}));
          connect(m_VS.ports[1], TABSVS.port_a)
            annotation (Line(points={{-62,-82},{-62,-66}}, color={0,127,255}));
          connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{-52,-56},{-44,-56},
                  {-44,-62.6},{-36,-62.6}}, color={191,0,0}));
          connect(TABSVS.port_b, Tout_VS.port_a)
            annotation (Line(points={{-62,-46},{-62,-38}}, color={0,127,255}));
          connect(Tout_VS.port_b, bou_VS.ports[1])
            annotation (Line(points={{-62,-18},{-64,-18},{-64,-10}}, color={0,127,255}));
          connect(TRM1.TRm, switch_VN_m1.u) annotation (Line(points={{-161.58,-118},{-134,-118},{-134,
                  -130},{-106,-130}}, color={0,0,127}));
          connect(m_VS_H.y, switch_VN_m1.a) annotation (Line(points={{-115,-162.5},{-115,-154.25},{
                  -102,-154.25},{-102,-142}}, color={0,0,127}));
          connect(m_VS_C.y, switch_VN_m1.c) annotation (Line(points={{-79,-164.5},{-79,-152.25},{-86,
                  -152.25},{-86,-142}}, color={0,0,127}));
          connect(m_VN_N1.y, switch_VN_m1.b) annotation (Line(points={{-97,-162.5},{-97,-152.25},{-94,
                  -152.25},{-94,-142}}, color={0,0,127}));
          connect(m_VS.m_flow_in, switch_VN_m1.y) annotation (Line(points={{-54,-104},{-46,-104},{-46,
                  -119},{-94,-119}}, color={0,0,127}));
          connect(switch_VN_T1.y, m_VS.T_in) annotation (Line(points={{-42,-121},{-60,-121},{-60,-104},
                  {-58,-104}}, color={0,0,127}));
          connect(switch_VN_T1.u, switch_VN_m1.u) annotation (Line(points={{-54,-132},{-84,-132},{-84,
                  -130},{-106,-130}}, color={0,0,127}));
          connect(HCVSthSOMMOS.y, switch_VN_T1.a) annotation (Line(points={{-58,-155.2},{-54,-155.2},
                  {-54,-144},{-50,-144}}, color={0,0,127}));
          connect(NCVSthSOMMOS.y, switch_VN_T1.b) annotation (Line(points={{-41,
                  -168.5},{-41,-157.25},{-42,-157.25},{-42,-144}},
                                             color={0,0,127}));
          connect(CCVSthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{-14,-163.3},{-23,-163.3},
                  {-23,-144},{-34,-144}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
                                                                         Diagram(
                coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
            experiment(StopTime=31536000));
        end V_OJ_BS;

        model V_optimized_BS "Optimized theoretical derived HCCC applied and original minimum mass flow applied (both with building simulations approach)
  In Neutral mode, the mass flow is the average between H and C mode. Tin=aTrm +b
  In Neutral mode, a= to the biggest a from H or C and b= (bH+bC)/2"
          import Occupancy;
          import Vaartstraat;
          replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
          IDEAS.Buildings.Components.RectangularZoneTemplate VN(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=true,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            fracA=0.255,
            redeclare Vaartstraat.Walls.Outer_wall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
            hasEmb=true)
                        "Room north in Vaarstraat 0241"
            annotation (Placement(transformation(extent={{-22,12},{-50,40}})));

          inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
                Modelica.Utilities.Files.loadResource(
                "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
            annotation (Placement(transformation(extent={{-180,82},{-160,102}})));
           Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{8,30},{-12,50}})));
           IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
             annotation (Placement(transformation(extent={{-154,82},{-138,98}})));
          IDEAS.Buildings.Components.RectangularZoneTemplate VS(
            redeclare package Medium = Medium,
            useLigCtrInput=true,
            n50=0.5,
            T_start=295.15,
            redeclare Occupancy.OccSched_Residence occNum(k=1),
            redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
            redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
            redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
            bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
            bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
            bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
            hasWinA=false,
            hasWinC=true,
            hasWinD=false,
            hasInt=true,
            aziA=-2.8099800957109,
            l=3.52,
            w=5.35,
            lInt=3,
            h=3.52,
            A_winA=3.158,
            A_winC=3.158,
            A_winD=3.158,
            fracC=0.255,
            redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
            redeclare Vaartstraat.Walls.Outer_wall conTypC,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
            redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
            redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
            redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingA,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingC,
            redeclare
              Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
              glazingD,
            redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
            hasCavityC=false,
            hasEmb=true)     "Room south in Vaartstraat 0256"
            annotation (Placement(transformation(extent={{-8,-64},{-36,-36}})));

           Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay <
                6 and ((calTim.hour > 6 and calTim.hour < 10) or (calTim.hour >
                14 and calTim.hour < 23))) or (calTim.weekDay == 7 and calTim.hour
                 > 17) then 1 else 0)
            "Number of occupants present"
            annotation (Placement(transformation(extent={{16,-48},{-4,-28}})));
         /* IDEAS.Buildings.Components.RectangularZoneTemplate ON(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare Occupancy.OccSched_Office occNum(k=1),
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinA=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winA=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypA,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
    hasEmb=true)
               "North parth of the zone"
    annotation (Placement(transformation(extent={{24,8},{52,42}})));*/

        /*  IDEAS.Buildings.Components.RectangularZoneTemplate OS(
    redeclare package Medium = Medium,
    n50=0.5,
    T_start=295.15,
    redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
    redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
    redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
    redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
    redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
      ligCtr,
    bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
    bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
    bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
    hasWinC=true,
    hasInt=true,
    aziA=IDEAS.Types.Azimuth.N,
    l=4,
    w=4,
    lInt=1,
    h=2.7,
    A_winC=1*1,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypA,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypB,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypC,
    redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
      conTypD,
    redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
    redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
    redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
    redeclare 
      IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
      shaTypC,
    redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
    hasEmb=true)
               "South part of the zone"
    annotation (Placement(transformation(extent={{24,-68},{52,-36}})));*/

          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
            annotation (Placement(transformation(extent={{-132,84},{-118,100}})));
          TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVN.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-18,48},{6,68}})));

          TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
              fileName="TDCVS.json",
              varKeys={"Thermal_Discomfort[Ks]"},
              outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
              nin=1))
            annotation (Placement(transformation(extent={{-2,-22},{22,-2}})));

         /*TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCON.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{64,36},{88,56}})));

  TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
      fileName="TDCOS.json",
      varKeys={"Thermal_Discomfort[Ks]"},
      outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
      nin=1))
    annotation (Placement(transformation(extent={{70,-40},{94,-20}})));*/

          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.1505) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-94,-12})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-94,-42})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-94,-70})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.1305,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-96,16})));
          BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-86,54})));
          Modelica.Blocks.Sources.RealExpression HCVNthSOMMOS(y=1.5*(-0.191106164)
                *(TRM.TRm - 273.15) + (26.20433562 - 3.25) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-72,84})));
          Modelica.Blocks.Sources.RealExpression NCVNthSOMMOS(y=if calTim.month
                 > 4 and calTim.month < 9 then 1.5*(-0.191106164)*(TRM.TRm -
                273.15) + (24.1445 - 2.5) + 273.15 else 0.5*(-0.191106164)*(TRM.TRm
                 - 273.15) + (24.1445 - 1) + 273.15)
                                       annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-87,82})));
          Modelica.Blocks.Sources.RealExpression CCVNthSOMMOS(y=-0.017737762*(TRM.TRm
                 - 273.15) + (25.5694 - 2.25) + 273.15)
                           annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=90,
                origin={-100,86})));
          BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=270,
                origin={-148,46})));
          Modelica.Blocks.Sources.RealExpression m_VN_H(y=3*0.0019)
                                                                   annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-131,72})));
          Modelica.Blocks.Sources.RealExpression m_VN_N(y=if calTim.month > 8
                 then 1.5*((m_VN_H.y + m_VN_C.y)/2) else 0.8*((m_VN_H.y + m_VN_C.y)
                /2))                                                  annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-147,74})));
          Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.0234)     annotation (
              Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=90,
                origin={-159,70})));
          Modelica.Blocks.Sources.RealExpression pres_HCVNthSOMMOS(y=HCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,-6},{-5,6}},
                rotation=180,
                origin={-167,8})));
          Modelica.Blocks.Sources.RealExpression pres_CCVNthSOMMOS(y=CCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,-8},{5,8}},
                rotation=0,
                origin={-165,-14})));
          IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
            redeclare package Medium = IDEAS.Media.Water,
            redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
              RadSlaCha,
            computeFlowResistance=true,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
            nDiscr=1,
            A_floor=3.52*5.35,
            nParCir=2,
            m_flow_nominal=0.9783) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=270,
                origin={-62,-56})));
          IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
            redeclare package Medium = IDEAS.Media.Water,
            m_flow_nominal=1,
            initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
                transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-64,-28})));
          IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
              Medium =
                IDEAS.Media.Water) annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=-90,
                origin={-66,0})));
          IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
            redeclare package Medium = IDEAS.Media.Water,
            use_m_flow_in=true,
            m_flow=0.8544,
            use_T_in=true,
            T=293.15,
            nPorts=1) annotation (Placement(transformation(
                extent={{10,-10},{-10,10}},
                rotation=-90,
                origin={-62,-92})));
          BaseClasses.Switch_3 switch_VN_m1
                                           annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-94,-130})));
          IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
            annotation (Placement(transformation(extent={{-176,-126},{-162,-110}})));
          Modelica.Blocks.Sources.RealExpression m_VN_N1(y=0.6*((m_VS_H.y +
                m_VS_C.y)/2))                                         annotation (
              Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-95,-168})));
          Modelica.Blocks.Sources.RealExpression m_VS_H(y=1.25*0.00246)
                                                                  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-117,-168})));
          Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.10345)
                                                                  annotation (Placement(
                transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-79,-170})));
          BaseClasses.Switch_3 switch_VN_T1
                                           annotation (Placement(transformation(
                extent={{10,10},{-10,-10}},
                rotation=270,
                origin={-42,-132})));
          Modelica.Blocks.Sources.RealExpression CCVSthSOMMOS(y=-0.009140541*(TRM.TRm
                 - 273.15) + (24.72394324 - 2) + 273.15)
                           annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=90,
                origin={-14,-171})));
          Modelica.Blocks.Sources.RealExpression NCVSthSOMMOS(y=if calTim.month
                 > 8 then 0.6*(-0.148412234)*(TRM.TRm - 273.15) + (24.99445 -
                1.75) + 273.15 else -0.148412234*(TRM.TRm - 273.15) + (24.99445
                 - 1.75) + 273.15)           annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=90,
                origin={-41,-174})));
          Modelica.Blocks.Sources.RealExpression HCVSthSOMMOS(y=if calTim.month
                 == 12 then (-0.148412234)*(TRM.TRm - 273.15) + (25.26506915) +
                273.15 elseif calTim.month == 11 then 3*(-0.148412234)*(TRM.TRm
                 - 273.15) + (25.26506915 - 3) + 273.15 else 6*(-0.148412234)*(
                TRM.TRm - 273.15) + (25.26506915 - 3) + 273.15)
                           annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=90,
                origin={-56,-164})));
          Modelica.Blocks.Sources.RealExpression pres_NCVNthSOMMOS(y=NCVNthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{5,8},{-5,-8}},
                rotation=0,
                origin={-167,0})));
          Modelica.Blocks.Sources.RealExpression pres_HCVSthSOMMOS(y=HCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-8,-8},{8,8}},
                rotation=0,
                origin={-170,-144})));
          Modelica.Blocks.Sources.RealExpression pres_NCVSthSOMMOS(y=NCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-5,8},{5,-8}},
                rotation=0,
                origin={-169,-156})));
          Modelica.Blocks.Sources.RealExpression pres_CCVSthSOMMOS(y=CCVSthSOMMOS.y - 273.15)
            annotation (Placement(transformation(
                extent={{-7,-8},{7,8}},
                rotation=0,
                origin={-166,-169})));
           Modelica.Blocks.Sources.RealExpression Qsol_VN(y=VN.radDistr.iSolDir.Q_flow + VN.radDistr.iSolDif.Q_flow)
                                               "Number of occupants present"
            annotation (Placement(transformation(extent={{-176,14},{-156,34}})));
        equation
          connect(VN.uLig,light41. y) annotation (Line(points={{-52.8,35.8},{-13,35.8},{-13,40}},
                             color={0,0,127}));
          connect(light56.y,VS. uLig) annotation (Line(points={{-5,-38},{-10,-38},{-10,-40.2},{-38.8,
                  -40.2}},                   color={0,0,127}));
          connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
              points={{-35.72,34.4},{-35.72,26.2},{-36,26.2},{-36,17.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
              points={{-48.6,34.4},{-30.7,34.4},{-30.7,16.2},{-22.56,16.2}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
              points={{-13.6,-37.4},{-13.6,-0.7},{-45.52,-0.7},{-45.52,12.28}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
              points={{-8.56,-59.8},{-30.72,-59.8},{-30.72,-41.6},{-34.6,-41.6}},
              color={255,204,51},
              thickness=0.5));
          connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
              points={{-21.72,-41.6},{-21.72,-50},{-20,-50},{-20,-54},{-22,-54},{-22,-58.4}},
              color={255,204,51},
              thickness=0.5));
          connect(VN.TSensor, tDCVN.a) annotation (Line(points={{-51.4,28.8},{-7.3,28.8},{-7.3,58},
                  {-20,58}},                        color={0,0,127}));
          connect(VS.TSensor, tDCVS.a) annotation (Line(points={{-37.4,-47.2},{-37.4,-9.6},{-4,-9.6},
                  {-4,-12}},                       color={0,0,127}));
          connect(Tout_VN.port_b,bou_VN. ports[1])
            annotation (Line(points={{-94,-52},{-94,-60}},   color={0,127,255}));
          connect(m_VN.ports[1],TABSVN. port_a) annotation (Line(points={{-96,6},{-96,-2},{-94,-2}},
                                        color={0,127,255}));
          connect(TABSVN.port_b,Tout_VN. port_a) annotation (Line(points={{-94,-22},{-94,-32}},
                                        color={0,127,255}));
          connect(HCVNthSOMMOS.y, switch_VN_T.a)
            annotation (Line(points={{-72,73},{-78,73},{-78,66}}, color={0,0,127}));
          connect(NCVNthSOMMOS.y, switch_VN_T.b) annotation (Line(points={{-87,
                  76.5},{-87,70.25},{-86,70.25},{-86,66}},
                                    color={0,0,127}));
          connect(CCVNthSOMMOS.y, switch_VN_T.c)
            annotation (Line(points={{-100,75},{-100,66},{-94,66}}, color={0,0,127}));
          connect(m_VN_H.y,switch_VN_m. a) annotation (Line(points={{-131,66.5},{-131,58.25},{-140,
                  58.25},{-140,58}},         color={0,0,127}));
          connect(m_VN_N.y,switch_VN_m. b) annotation (Line(points={{-147,68.5},{-147,66.25},{-148,
                  66.25},{-148,58}},         color={0,0,127}));
          connect(m_VN_C.y,switch_VN_m. c) annotation (Line(points={{-159,64.5},{-159,66.25},{-156,
                  66.25},{-156,58}},         color={0,0,127}));
          connect(switch_VN_T.u,switch_VN_m. u) annotation (Line(points={{-74,54},{-100,54},{-100,46},
                  {-136,46}},               color={0,0,127}));
          connect(TRM.TRm, switch_VN_m.u) annotation (Line(points={{-117.58,92},{-114,92},{-114,46},
                  {-136,46}}, color={0,0,127}));
          connect(m_VN.m_flow_in, switch_VN_m.y) annotation (Line(points={{-88,28},{-76,28},{-76,36},
                  {-114,36},{-114,35},{-148,35}}, color={0,0,127}));
          connect(switch_VN_T.y, m_VN.T_in)
            annotation (Line(points={{-86,43},{-91,43},{-91,28},{-92,28}}, color={0,0,127}));
          connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{-50,13.4},{-78,13.4},
                  {-78,-12},{-84,-12}}, color={191,0,0}));
          connect(m_VS.ports[1], TABSVS.port_a)
            annotation (Line(points={{-62,-82},{-62,-78},{-60,-78},{-60,-74},{-62,
                  -74},{-62,-66}},                         color={0,127,255}));
          connect(TABSVS.heatPortEmb[1], VS.gainEmb[1]) annotation (Line(points={{-52,-56},{-44,-56},
                  {-44,-62.6},{-36,-62.6}}, color={191,0,0}));
          connect(TABSVS.port_b, Tout_VS.port_a)
            annotation (Line(points={{-62,-46},{-62,-42},{-64,-42},{-64,-38}},
                                                           color={0,127,255}));
          connect(Tout_VS.port_b, bou_VS.ports[1])
            annotation (Line(points={{-64,-18},{-66,-18},{-66,-10}}, color={0,127,255}));
          connect(TRM1.TRm, switch_VN_m1.u) annotation (Line(points={{-161.58,-118},{-134,-118},{-134,
                  -130},{-106,-130}}, color={0,0,127}));
          connect(m_VS_H.y, switch_VN_m1.a) annotation (Line(points={{-117,-162.5},
                  {-117,-154.25},{-102,-154.25},{-102,-142}},
                                              color={0,0,127}));
          connect(m_VS_C.y, switch_VN_m1.c) annotation (Line(points={{-79,-164.5},{-79,-152.25},{-86,
                  -152.25},{-86,-142}}, color={0,0,127}));
          connect(m_VN_N1.y, switch_VN_m1.b) annotation (Line(points={{-95,-162.5},
                  {-95,-152.25},{-94,-152.25},{-94,-142}},
                                        color={0,0,127}));
          connect(m_VS.m_flow_in, switch_VN_m1.y) annotation (Line(points={{-54,-104},{-46,-104},{-46,
                  -119},{-94,-119}}, color={0,0,127}));
          connect(switch_VN_T1.y, m_VS.T_in) annotation (Line(points={{-42,-121},{-60,-121},{-60,-104},
                  {-58,-104}}, color={0,0,127}));
          connect(switch_VN_T1.u, switch_VN_m1.u) annotation (Line(points={{-54,-132},{-84,-132},{-84,
                  -130},{-106,-130}}, color={0,0,127}));
          connect(HCVSthSOMMOS.y, switch_VN_T1.a) annotation (Line(points={{-56,
                  -155.2},{-54,-155.2},{-54,-144},{-50,-144}},
                                          color={0,0,127}));
          connect(NCVSthSOMMOS.y, switch_VN_T1.b) annotation (Line(points={{-41,-168.5},{-41,-157.25},
                  {-42,-157.25},{-42,-144}}, color={0,0,127}));
          connect(CCVSthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{-14,-163.3},{-23,-163.3},
                  {-23,-144},{-34,-144}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
                                                                         Diagram(
                coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{100,100}})),
            experiment(StopTime=31536000));
        end V_optimized_BS;
      end mBS;
    end HCCCth;

    package Tfloor_control "PID controller controls the temperature of TABS"
      model Tfl_cte "Keep Tfloor constant Winter: Tfl=TsetWi
  summer Tfl=TsetSu-1"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-198,92},{-178,112}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-172,96},{-156,112}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-150,94},{-130,114}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1505) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-44,12})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-46,-18})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(          redeclare package
            Medium =
              IDEAS.Media.Water, nPorts=1)
                                 annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-46,-50})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-48,40})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-6,68})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0077)  annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={11,94})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=(m_VN_H.y + m_VN_C.y)/2)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-5,96})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.1505)     annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-17,92})));
        Modelica.Blocks.Sources.RealExpression TfloorVN(y=TABSVN.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-118,32},{-98,52}})));
        IDEAS.Controls.Continuous.LimPID PIDVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false) annotation (Placement(transformation(extent={{-84,58},{-64,78}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 23.5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-188,42})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-190,80})));
        BaseClasses.Switch_3      switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-146,60})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15) -
              10)/5)                    annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-196,60})));
        Modelica.Blocks.Sources.RealExpression pres_VN_us(y=PIDVN.u_s - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-110,110})));
        Modelica.Blocks.Sources.RealExpression pres_VN_um(y=PIDVN.u_m - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-82,112})));
        Modelica.Blocks.Sources.RealExpression pres_VN_y(y=PIDVN.y - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-54,112})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-4,34})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-4,0})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.9783) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=270,
              origin={-4,-36})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-20,-80})));
        IDEAS.Controls.Continuous.LimPID PIDVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-118,-50},{-98,-30}})));
        Modelica.Blocks.Sources.RealExpression TfloorVS(y=TABSVS.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-158,-70},{-138,-50}})));
        BaseClasses.Switch_3 switch_VS_m annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-96,-88})));
        Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)/2)*0.5)
                                                                    annotation (
            Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=0,
              origin={-147,-82})));
        Modelica.Blocks.Sources.RealExpression m_VS_H(y=1.5*0.0077)
                                                                annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=0,
              origin={-125,-70})));
        Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.9783) annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=0,
              origin={-135,-96})));
        Modelica.Blocks.Sources.RealExpression pres_VS_us(y=PIDVS.u_s - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-184,-52})));
        Modelica.Blocks.Sources.RealExpression pres_VS_um(y=PIDVS.u_m - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,-72})));
        Modelica.Blocks.Sources.RealExpression pres_VS_Y(y=PIDVS.y - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,-92})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{46,-4},{18,24}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{80,14},{60,34}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{52,-56},{24,-28}})));
         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{84,-44},{64,-24}})));
        TABS.TDC.TDC
                tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{72,30},{96,50}})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{68,-20},{92,0}})));
        BaseClasses.Switch_3      switch_VN_T1
                                              annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-148,-8})));
         Modelica.Blocks.Sources.RealExpression TSetW2(y=273.15 + 22)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,18})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 23.5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-188,-26})));
         Modelica.Blocks.Sources.RealExpression TSetW3(y=273.15 + (22 - 0.5) + 2.5*((
              TRM.TRm - 273.15) - 10)/5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-186,-6})));
      equation
        connect(m_VN.ports[1],TABSVN. port_a) annotation (Line(points={{-48,30},{
                -48,22},{-44,22}},    color={0,127,255}));
        connect(TABSVN.port_b,Tout_VN. port_a) annotation (Line(points={{-44,2},{
                -44,-4},{-46,-4},{-46,-8}},
                                      color={0,127,255}));
        connect(m_VN_H.y,switch_VN_m. a) annotation (Line(points={{11,88.5},{11,80.25},{2,80.25},
                {2,80}},                   color={0,0,127}));
        connect(m_VN_N.y,switch_VN_m. b) annotation (Line(points={{-5,90.5},{-5,88.25},{-6,88.25},
                {-6,80}},                  color={0,0,127}));
        connect(m_VN_C.y,switch_VN_m. c) annotation (Line(points={{-17,86.5},{-17,88.25},{-14,88.25},
                {-14,80}},                 color={0,0,127}));
        connect(TRM.TRm, switch_VN_m.u)
          annotation (Line(points={{-129.4,104},{34,104},{34,68},{6,68}}, color={0,0,127}));
        connect(m_VN.m_flow_in, switch_VN_m.y)
          annotation (Line(points={{-40,52},{-18,52},{-18,57},{-6,57}},color={0,0,127}));
        connect(TfloorVN.y, PIDVN.u_m)
          annotation (Line(points={{-97,42},{-74,42},{-74,56}}, color={0,0,127}));
        connect(PIDVN.y, m_VN.T_in)
          annotation (Line(points={{-63,68},{-44,68},{-44,52}}, color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{-179,80},{-158,80},{-158,68}},
                                color={0,0,127}));
        connect(TsetS.y,switch_VN_T. c) annotation (Line(points={{-177,42},{-162,42},{-162,52},{-158,
                52}},           color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{-185,60},{-158,60}},
                                                     color={0,0,127}));
        connect(switch_VN_T.u, TRM.TRm)
          annotation (Line(points={{-146,72},{-146,104},{-129.4,104}}, color={0,0,127}));
        connect(switch_VN_T.y, PIDVN.u_s) annotation (Line(points={{-135,60},{-110,60},{-110,68},
                {-86,68}}, color={0,0,127}));
        connect(Tout_VS.port_b,bou_VS. ports[1])
          annotation (Line(points={{-4,10},{-4,24}},               color={0,127,255}));
        connect(TABSVS.port_b,Tout_VS. port_a)
          annotation (Line(points={{-4,-26},{-4,-10}},   color={0,127,255}));
        connect(m_VS.ports[1],TABSVS. port_a)
          annotation (Line(points={{-10,-80},{-10,-46},{-4,-46}},
                                                         color={0,127,255}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-46,-28},{-46,-40}}, color={0,127,255}));
        connect(TfloorVS.y, PIDVS.u_m) annotation (Line(points={{-137,-60},{-120,-60},{-120,-52},
                {-108,-52}}, color={0,0,127}));
        connect(PIDVS.y, m_VS.T_in) annotation (Line(points={{-97,-40},{-66,-40},{-66,-84},{-32,-84}},
              color={0,0,127}));
        connect(m_VS_C.y, switch_VS_m.c) annotation (Line(points={{-129.5,-96},{-129.5,-96.25},{-108,
                -96.25},{-108,-96}}, color={0,0,127}));
        connect(m_VN_N1.y, switch_VS_m.b) annotation (Line(points={{-141.5,-82},{-141.5,-88.25},{
                -108,-88.25},{-108,-88}}, color={0,0,127}));
        connect(switch_VS_m.y, m_VS.m_flow_in)
          annotation (Line(points={{-85,-88},{-32,-88}}, color={0,0,127}));
        connect(m_VS_H.y, switch_VS_m.a) annotation (Line(points={{-119.5,-70},{-112,-70},{-112,-80},
                {-108,-80}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VS_m.u) annotation (Line(points={{-146,72},{-92,72},{-92,-76},
                {-96,-76}}, color={0,0,127}));
        connect(VN.uLig,light41. y) annotation (Line(points={{15.2,19.8},{59,19.8},{59,
                24}},      color={0,0,127}));
        connect(light56.y,VS. uLig) annotation (Line(points={{63,-34},{62,-34},{62,-32.2},
                {21.2,-32.2}},             color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{32.28,18.4},{32.28,10.2},{32,10.2},{32,1.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{19.4,18.4},{41.3,18.4},{41.3,0.2},{45.44,0.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{46.4,-29.4},{46.4,-16.7},{22.48,-16.7},{22.48,-3.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{51.44,-51.8},{41.28,-51.8},{41.28,-33.6},{25.4,-33.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{38.28,-33.6},{38.28,-41.8},{38,-41.8},{38,-50.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.TSensor,tDCVN. a) annotation (Line(points={{16.6,12.8},{64.7,12.8},
                {64.7,40},{70,40}},         color={0,0,127}));
        connect(VS.TSensor,tDCVS. a) annotation (Line(points={{22.6,-39.2},{22.6,-25.6},
                {66,-25.6},{66,-10}},      color={0,0,127}));
        connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{18,-2.6},
                {-10,-2.6},{-10,12},{-34,12}}, color={191,0,0}));
        connect(VS.gainEmb[1], TABSVS.heatPortEmb[1]) annotation (Line(points={{24,-54.6},
                {14,-54.6},{14,-36},{6,-36}}, color={191,0,0}));
        connect(switch_VN_T1.y, PIDVS.u_s) annotation (Line(points={{-137,-8},{-128,-8},
                {-128,-40},{-120,-40}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_T1.u)
          annotation (Line(points={{-146,72},{-148,72},{-148,4}}, color={0,0,127}));
        connect(TSetW2.y, switch_VN_T1.a) annotation (Line(points={{-171,18},{-171,9},
                {-160,9},{-160,0}}, color={0,0,127}));
        connect(TsetS1.y, switch_VN_T1.c) annotation (Line(points={{-177,-26},{-168.5,
                -26},{-168.5,-16},{-160,-16}}, color={0,0,127}));
        connect(TSetW3.y, switch_VN_T1.b) annotation (Line(points={{-175,-6},{-166,-6},
                {-166,-8},{-160,-8}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,120}})),
                                                                       Diagram(coordinateSystem(
                preserveAspectRatio=false, extent={{-200,-100},{100,120}})));
      end Tfl_cte;

      model Tfl_ideal
        "Control the ideal Tfloor like the ideal controller that calculates the heat and cooling demand"
        import Building_Envelopes;
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-274,122},{-258,138}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-246,120},{-230,136}})));

        Building_Envelopes.Ideal_HC_demand_TABS.BaseClasses.Heat_Cool_Demand_scalar
          heat_Cool_Demand_scalar_VN(
          t=1800,
          QNom=1100,
          VZones=66.29)
          annotation (Placement(transformation(extent={{56,76},{96,96}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=-90,
              origin={25,-116})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 24.5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={78,-120})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={48,-132})));
        TABS.BaseClasses.Switch_3 switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={64,-84})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)
          "Number of occupants present" annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={64,-130})));
        TABS.TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVNideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{52,114},{76,134}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-26,92},{2,120}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,112},{12,132}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-34,38},{-6,66}})));
         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{32,52},{12,72}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS1(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{-122,16},{-94,44}})));
         Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,42},{-82,62}})));
         Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
              calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
              23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-62,102},{-82,122}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN1(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{-92,82},{-120,110}})));
        TABS.TDC.TDC
                tDCVN1(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN1ideal.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-118,122},{-94,142}})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.8506*0.0077)
                                                                 annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-193,124})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.43355*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-211,126})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=0.0867*0.1505)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-201,134})));
        TABS.BaseClasses.Switch_3 switch_VN_m_flow annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-200,92})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM1
                                                                        annotation (
            Placement(transformation(
              extent={{5,-6},{-5,6}},
              rotation=0,
              origin={-169,92})));
        IDEAS.Fluid.Sources.MassFlowSource_T boundary(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          use_T_in=true,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-200,30})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-194,-38})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-194,-76})));
        Modelica.Blocks.Sources.RealExpression Tfloor_VN(y=TABSVN1.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-270,26},{-250,46}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare
            IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1305) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-194,-8})));
        IDEAS.Controls.Continuous.LimPID PIDVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-242,58},{-222,78}})));
        Modelica.Blocks.Sources.RealExpression Qideal_VN(y=heat_Cool_Demand_scalar_VN.heatPort.T)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-258,94})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{-82,26},{-66,40}})));
        Building_Envelopes.Ideal_HC_demand_TABS.BaseClasses.Heat_Cool_Demand_scalar
          heat_Cool_Demand_scalar_VS(
          t=1200,
          QNom=1100,
          VZones=66.29)
          annotation (Placement(transformation(extent={{22,10},{62,30}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS1(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.9783) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={-42,-22})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-44,6})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-46,34})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-46,-58})));
        TABS.BaseClasses.Switch_3 switch_VS_m annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={-20,-112})));
        Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)/2)*0.5)
                                                                    annotation (
            Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=90,
              origin={-23,-150})));
        Modelica.Blocks.Sources.RealExpression m_VS_H(y=1.5*0.0077)
                                                                annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=90,
              origin={-41,-150})));
        Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.9783) annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=90,
              origin={-5,-152})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM2
                                                                        annotation (
            Placement(transformation(
              extent={{-5,-6},{5,6}},
              rotation=0,
              origin={-57,-112})));
        IDEAS.Controls.Continuous.LimPID PIDVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-102,-96},{-82,-76}})));
        Modelica.Blocks.Sources.RealExpression Tfloor_VS(y=TABSVS1.heatPortEmb[1].T)
          annotation (Placement(transformation(extent={{-126,-138},{-106,-118}})));
        Modelica.Blocks.Sources.RealExpression Qideal_VS(y=heat_Cool_Demand_scalar_VS.heatPort.T)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-126,-54})));
      equation
        connect(TRM.TRm,switch_VN_T. u) annotation (Line(points={{25,-110.7},{25,-85.35},{52,-85.35},
                {52,-84}},            color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{48,-121},{52,-121},{52,-96},{56,
                -96}},          color={0,0,127}));
        connect(TsetS1.y, switch_VN_T.c) annotation (Line(points={{78,-109},{76,-109},{76,-96},{72,
                -96}},              color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{64,-119},{64,-96}},
                                                     color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VN.TSet)
          annotation (Line(points={{64,-73},{76,-73},{76,75.8}}, color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{-12.28,114.4},{-12.28,108.2},{-12,108.2},{-12,97.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{0.6,114.4},{-6.7,114.4},{-6.7,96.2},{-25.44,96.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.uLig,light41. y) annotation (Line(points={{4.8,115.8},{11,115.8},{11,
                122}},     color={0,0,127}));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{-28.4,64.6},{-28.4,79.3},{-2.48,79.3},{-2.48,92.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{-20.28,60.4},{-20.28,54.2},{-20,54.2},{-20,43.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{-33.44,42.2},{-24.72,42.2},{-24.72,60.4},{-7.4,60.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light56.y,VS. uLig) annotation (Line(points={{11,62},{-10,62},{-10,61.8},
                {-3.2,61.8}},              color={0,0,127}));
        connect(VN.TSensor, tDCVN.a) annotation (Line(points={{3.4,108.8},{27.7,108.8},
                {27.7,124},{50,124}}, color={0,0,127}));
        connect(VN.TSensor, heat_Cool_Demand_scalar_VN.TSensor) annotation (Line(points={{3.4,108.8},
                {30.7,108.8},{30.7,80},{55.6,80}}, color={0,0,127}));
        connect(VS1.proBusCei[1], VS1.proBusFlo[1]) annotation (Line(
            points={{-108.28,38.4},{-108.28,44.2},{-108,44.2},{-108,21.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS1.proBusD[1], VS1.proBusB[1]) annotation (Line(
            points={{-121.44,20.2},{-118.72,20.2},{-118.72,38.4},{-95.4,38.4}},
            color={255,204,51},
            thickness=0.5));
        connect(light1.y, VS1.uLig) annotation (Line(points={{-83,52},{-104,52},{-104,39.8},{-91.2,
                39.8}},              color={0,0,127}));
        connect(VS1.proBusA[1], VN1.proBusC[1]) annotation (Line(
            points={{-116.4,42.6},{-116.4,69.3},{-115.52,69.3},{-115.52,82.28}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusCei[1], VN1.proBusFlo[1]) annotation (Line(
            points={{-105.72,104.4},{-105.72,98.2},{-106,98.2},{-106,87.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.proBusB[1], VN1.proBusD[1]) annotation (Line(
            points={{-118.6,104.4},{-100.7,104.4},{-100.7,86.2},{-92.56,86.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VN1.uLig, light2.y) annotation (Line(points={{-122.8,105.8},{-83,105.8},
                {-83,112}}, color={0,0,127}));
        connect(VN1.TSensor, tDCVN1.a) annotation (Line(points={{-121.4,98.8},{-121.4,
                111.4},{-120,111.4},{-120,132}}, color={0,0,127}));
        connect(m_VN_C.y, switch_VN_m_flow.c) annotation (Line(points={{-211,120.5},{-211,111.25},
                {-208,111.25},{-208,104}},      color={0,0,127}));
        connect(m_VN_N.y, switch_VN_m_flow.b) annotation (Line(points={{-201,128.5},{-201,116.25},
                {-200,116.25},{-200,104}},      color={0,0,127}));
        connect(m_VN_H.y, switch_VN_m_flow.a) annotation (Line(points={{-193,118.5},{-193,111.25},
                {-192,111.25},{-192,104}},      color={0,0,127}));
        connect(switch_VN_m_flow.u, TRM1.TRm)
          annotation (Line(points={{-188,92},{-174.3,92}}, color={0,0,127}));
        connect(switch_VN_m_flow.y, boundary.m_flow_in)
          annotation (Line(points={{-200,81},{-192,81},{-192,42}}, color={0,0,127}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-194,-48},{-194,-66}},   color={0,127,255}));
        connect(TABSVN1.port_a, boundary.ports[1]) annotation (Line(points={{-194,2},{-200,2},{-200,
                20}},                            color={0,127,255}));
        connect(TABSVN1.port_b, Tout_VN.port_a) annotation (Line(points={{-194,-18},{-194,-28}},
                                             color={0,127,255}));
        connect(VN1.gainEmb[1], TABSVN1.heatPortEmb[1]) annotation (Line(points={{-120,83.4},{-145,
                83.4},{-145,-8},{-184,-8}},               color={191,0,0}));
        connect(Tfloor_VN.y, PIDVN.u_m) annotation (Line(points={{-249,36},{-248,36},{-248,56},{-232,
                56}}, color={0,0,127}));
        connect(boundary.T_in, PIDVN.y)
          annotation (Line(points={{-196,42},{-221,42},{-221,68}}, color={0,0,127}));
        connect(Qideal_VN.y, PIDVN.u_s) annotation (Line(points={{-258,83},{-262,83},{-262,68},{-244,
                68}}, color={0,0,127}));
        connect(VN.gainEmb[1], heat_Cool_Demand_scalar_VN.heatPort)
          annotation (Line(points={{2,93.4},{30,93.4},{30,84},{56,84}}, color={191,0,0}));
        connect(VS1.TSensor, tDCVS.a) annotation (Line(points={{-92.6,32.8},{
                -81.3,32.8},{-81.3,33},{-83.3333,33}},
                                color={0,0,127}));
        connect(switch_VN_T.y, heat_Cool_Demand_scalar_VS.TSet)
          annotation (Line(points={{64,-73},{38,-73},{38,9.8},{42,9.8}}, color={0,0,127}));
        connect(m_VS.ports[1], TABSVS1.port_a)
          annotation (Line(points={{-46,-48},{-46,-32},{-42,-32}}, color={0,127,255}));
        connect(TABSVS1.port_b, Tout_VS.port_a) annotation (Line(points={{-42,-12},{-42,-8},{-44,
                -8},{-44,-4}}, color={0,127,255}));
        connect(Tout_VS.port_b,bou_VS. ports[1])
          annotation (Line(points={{-44,16},{-46,16},{-46,24}},    color={0,127,255}));
        connect(heat_Cool_Demand_scalar_VS.heatPort, VS.gainEmb[1])
          annotation (Line(points={{22,18},{8,18},{8,39.4},{-6,39.4}}, color={191,0,0}));
        connect(VS.TSensor, heat_Cool_Demand_scalar_VS.TSensor) annotation (Line(points={{-4.6,54.8},
                {-4.6,56.4},{21.6,56.4},{21.6,14}}, color={0,0,127}));
        connect(TABSVS1.heatPortEmb[1], VS1.gainEmb[1]) annotation (Line(points={{-52,-22},{-52,-21},
                {-94,-21},{-94,17.4}}, color={191,0,0}));
        connect(m_VS_H.y, switch_VS_m.a) annotation (Line(points={{-41,-144.5},{-41,-136.25},{-28,
                -136.25},{-28,-124}}, color={0,0,127}));
        connect(m_VS_C.y, switch_VS_m.c) annotation (Line(points={{-5,-146.5},{-5,-134.25},{-12,-134.25},
                {-12,-124}}, color={0,0,127}));
        connect(m_VN_N1.y, switch_VS_m.b) annotation (Line(points={{-23,-144.5},{-23,-134.25},{-20,
                -134.25},{-20,-124}}, color={0,0,127}));
        connect(switch_VS_m.y, m_VS.m_flow_in)
          annotation (Line(points={{-20,-101},{-20,-70},{-38,-70}}, color={0,0,127}));
        connect(TRM2.TRm, switch_VS_m.u)
          annotation (Line(points={{-51.7,-112},{-32,-112}}, color={0,0,127}));
        connect(PIDVS.y, m_VS.T_in) annotation (Line(points={{-81,-86},{-62,-86},{-62,-70},{-42,-70}},
              color={0,0,127}));
        connect(Tfloor_VS.y, PIDVS.u_m)
          annotation (Line(points={{-105,-128},{-92,-128},{-92,-98}}, color={0,0,127}));
        connect(Qideal_VS.y, PIDVS.u_s)
          annotation (Line(points={{-126,-65},{-126,-86},{-104,-86}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},
                  {100,140}})),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-280,-160},{100,140}})),
          experiment(StopTime=31536000));
      end Tfl_ideal;

      model Tfl_idealq
        extends Tfl_ideal(PIDVN(Ti=2000));
      end Tfl_idealq;

      model TRet_cte_V "Keep Tret constant Winter: Tfl=TsetWi
  summer Tfl=TsetSu-1"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-198,92},{-178,112}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-172,96},{-156,112}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-150,94},{-130,114}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.1505) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-44,12})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=-90,
              origin={-46,-18})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(          redeclare package
            Medium =
              IDEAS.Media.Water, nPorts=1)
                                 annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-46,-50})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-48,40})));
        BaseClasses.Switch_3 switch_VN_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-6,68})));
        Modelica.Blocks.Sources.RealExpression m_VN_H(y=0.0077)  annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={11,94})));
        Modelica.Blocks.Sources.RealExpression m_VN_N(y=(m_VN_H.y + m_VN_C.y)/2)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-5,96})));
        Modelica.Blocks.Sources.RealExpression m_VN_C(y=0.1505)     annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-17,92})));
        IDEAS.Controls.Continuous.LimPID PIDVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false) annotation (Placement(transformation(extent={{-84,58},{-64,78}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 23.5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-188,42})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-190,80})));
        BaseClasses.Switch_3      switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-146,60})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15) -
              10)/5)                    annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-196,60})));
        Modelica.Blocks.Sources.RealExpression pres_VN_us(y=PIDVN.u_s - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-110,110})));
        Modelica.Blocks.Sources.RealExpression pres_VN_um(y=PIDVN.u_m - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-82,112})));
        Modelica.Blocks.Sources.RealExpression pres_VN_y(y=PIDVN.y - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-54,112})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-4,34})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{10,10},{-10,-10}},
              rotation=-90,
              origin={-4,0})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=3.52*5.35,
          nParCir=2,
          m_flow_nominal=0.9783) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=270,
              origin={-4,-36})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-20,-80})));
        IDEAS.Controls.Continuous.LimPID PIDVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 25,
          yMin=273.15 + 15,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-118,-50},{-98,-30}})));
        BaseClasses.Switch_3 switch_VS_m annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-96,-88})));
        Modelica.Blocks.Sources.RealExpression m_VN_N1(y=((m_VS_H.y + m_VS_C.y)/2)*0.5)
                                                                    annotation (
            Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=0,
              origin={-147,-82})));
        Modelica.Blocks.Sources.RealExpression m_VS_H(y=1.5*0.0077)
                                                                annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=0,
              origin={-125,-70})));
        Modelica.Blocks.Sources.RealExpression m_VS_C(y=0.9783) annotation (Placement(
              transformation(
              extent={{-5,8},{5,-8}},
              rotation=0,
              origin={-135,-96})));
        Modelica.Blocks.Sources.RealExpression pres_VS_us(y=PIDVS.u_s - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-184,-52})));
        Modelica.Blocks.Sources.RealExpression pres_VS_um(y=PIDVS.u_m - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,-72})));
        Modelica.Blocks.Sources.RealExpression pres_VS_Y(y=PIDVS.y - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,-92})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VN(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          fracA=0.255,
          redeclare Vaartstraat.Walls.Outer_wall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                      "Room north in Vaarstraat 0241"
          annotation (Placement(transformation(extent={{46,-4},{18,24}})));
         Modelica.Blocks.Sources.RealExpression light41(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{80,14},{60,34}})));
        IDEAS.Buildings.Components.RectangularZoneTemplate VS(
          redeclare package Medium = Medium,
          useLigCtrInput=true,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Residence occNum(k=1),
          redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=false,
          hasWinC=true,
          hasWinD=false,
          hasInt=true,
          aziA=-2.8099800957109,
          l=3.52,
          w=5.35,
          lInt=3,
          h=3.52,
          A_winA=3.158,
          A_winC=3.158,
          A_winD=3.158,
          fracC=0.255,
          redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
          redeclare Vaartstraat.Walls.Outer_wall conTypC,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
          redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingA,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingC,
          redeclare
            Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
            glazingD,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasCavityC=false,
          hasEmb=true)     "Room south in Vaartstraat 0256"
          annotation (Placement(transformation(extent={{52,-56},{24,-28}})));
         Modelica.Blocks.Sources.RealExpression light56(y=if (calTim.weekDay < 6 and (
              (calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour
               < 23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{84,-44},{64,-24}})));
        TABS.TDC.TDC
                tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVN.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{72,30},{96,50}})));
        TABS.TDC.TDC
                tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCVS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{68,-20},{92,0}})));
        BaseClasses.Switch_3      switch_VN_T1
                                              annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-148,-8})));
         Modelica.Blocks.Sources.RealExpression TSetW2(y=273.15 + 22)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,18})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 23)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-188,-26})));
         Modelica.Blocks.Sources.RealExpression TSetW3(y=273.15 + (22 - 0.5) + 2.5*((
              TRM.TRm - 273.15) - 10)/5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-186,-6})));
      equation
        connect(m_VN.ports[1],TABSVN. port_a) annotation (Line(points={{-48,30},{
                -48,22},{-44,22}},    color={0,127,255}));
        connect(TABSVN.port_b,Tout_VN. port_a) annotation (Line(points={{-44,2},{
                -44,-4},{-46,-4},{-46,-8}},
                                      color={0,127,255}));
        connect(m_VN_H.y,switch_VN_m. a) annotation (Line(points={{11,88.5},{11,80.25},{2,80.25},
                {2,80}},                   color={0,0,127}));
        connect(m_VN_N.y,switch_VN_m. b) annotation (Line(points={{-5,90.5},{-5,88.25},{-6,88.25},
                {-6,80}},                  color={0,0,127}));
        connect(m_VN_C.y,switch_VN_m. c) annotation (Line(points={{-17,86.5},{-17,88.25},{-14,88.25},
                {-14,80}},                 color={0,0,127}));
        connect(TRM.TRm, switch_VN_m.u)
          annotation (Line(points={{-129.4,104},{34,104},{34,68},{6,68}}, color={0,0,127}));
        connect(m_VN.m_flow_in, switch_VN_m.y)
          annotation (Line(points={{-40,52},{-18,52},{-18,57},{-6,57}},color={0,0,127}));
        connect(PIDVN.y, m_VN.T_in)
          annotation (Line(points={{-63,68},{-44,68},{-44,52}}, color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{-179,80},{-158,80},{-158,68}},
                                color={0,0,127}));
        connect(TsetS.y,switch_VN_T. c) annotation (Line(points={{-177,42},{-162,42},{-162,52},{-158,
                52}},           color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{-185,60},{-158,60}},
                                                     color={0,0,127}));
        connect(switch_VN_T.u, TRM.TRm)
          annotation (Line(points={{-146,72},{-146,104},{-129.4,104}}, color={0,0,127}));
        connect(switch_VN_T.y, PIDVN.u_s) annotation (Line(points={{-135,60},{-110,60},{-110,68},
                {-86,68}}, color={0,0,127}));
        connect(Tout_VS.port_b,bou_VS. ports[1])
          annotation (Line(points={{-4,10},{-4,24}},               color={0,127,255}));
        connect(TABSVS.port_b,Tout_VS. port_a)
          annotation (Line(points={{-4,-26},{-4,-10}},   color={0,127,255}));
        connect(m_VS.ports[1],TABSVS. port_a)
          annotation (Line(points={{-10,-80},{-10,-46},{-4,-46}},
                                                         color={0,127,255}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-46,-28},{-46,-40}}, color={0,127,255}));
        connect(PIDVS.y, m_VS.T_in) annotation (Line(points={{-97,-40},{-66,-40},{-66,-84},{-32,-84}},
              color={0,0,127}));
        connect(m_VS_C.y, switch_VS_m.c) annotation (Line(points={{-129.5,-96},{-129.5,-96.25},{-108,
                -96.25},{-108,-96}}, color={0,0,127}));
        connect(m_VN_N1.y, switch_VS_m.b) annotation (Line(points={{-141.5,-82},{-141.5,-88.25},{
                -108,-88.25},{-108,-88}}, color={0,0,127}));
        connect(switch_VS_m.y, m_VS.m_flow_in)
          annotation (Line(points={{-85,-88},{-32,-88}}, color={0,0,127}));
        connect(m_VS_H.y, switch_VS_m.a) annotation (Line(points={{-119.5,-70},{-112,-70},{-112,-80},
                {-108,-80}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VS_m.u) annotation (Line(points={{-146,72},{-92,72},{-92,-76},
                {-96,-76}}, color={0,0,127}));
        connect(VN.uLig,light41. y) annotation (Line(points={{15.2,19.8},{59,19.8},{59,
                24}},      color={0,0,127}));
        connect(light56.y,VS. uLig) annotation (Line(points={{63,-34},{62,-34},{62,-32.2},
                {21.2,-32.2}},             color={0,0,127}));
        connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
            points={{32.28,18.4},{32.28,10.2},{32,10.2},{32,1.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
            points={{19.4,18.4},{41.3,18.4},{41.3,0.2},{45.44,0.2}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
            points={{46.4,-29.4},{46.4,-16.7},{22.48,-16.7},{22.48,-3.72}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
            points={{51.44,-51.8},{41.28,-51.8},{41.28,-33.6},{25.4,-33.6}},
            color={255,204,51},
            thickness=0.5));
        connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
            points={{38.28,-33.6},{38.28,-41.8},{38,-41.8},{38,-50.4}},
            color={255,204,51},
            thickness=0.5));
        connect(VN.TSensor,tDCVN. a) annotation (Line(points={{16.6,12.8},{64.7,12.8},
                {64.7,40},{70,40}},         color={0,0,127}));
        connect(VS.TSensor,tDCVS. a) annotation (Line(points={{22.6,-39.2},{22.6,-25.6},
                {66,-25.6},{66,-10}},      color={0,0,127}));
        connect(VN.gainEmb[1], TABSVN.heatPortEmb[1]) annotation (Line(points={{18,-2.6},
                {-10,-2.6},{-10,12},{-34,12}}, color={191,0,0}));
        connect(VS.gainEmb[1], TABSVS.heatPortEmb[1]) annotation (Line(points={{24,-54.6},
                {14,-54.6},{14,-36},{6,-36}}, color={191,0,0}));
        connect(switch_VN_T1.y, PIDVS.u_s) annotation (Line(points={{-137,-8},{-128,-8},
                {-128,-40},{-120,-40}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_T1.u)
          annotation (Line(points={{-146,72},{-148,72},{-148,4}}, color={0,0,127}));
        connect(TSetW2.y, switch_VN_T1.a) annotation (Line(points={{-171,18},{-171,9},
                {-160,9},{-160,0}}, color={0,0,127}));
        connect(TsetS1.y, switch_VN_T1.c) annotation (Line(points={{-177,-26},{-168.5,
                -26},{-168.5,-16},{-160,-16}}, color={0,0,127}));
        connect(TSetW3.y, switch_VN_T1.b) annotation (Line(points={{-175,-6},{-166,-6},
                {-166,-8},{-160,-8}}, color={0,0,127}));
        connect(PIDVN.u_m, Tout_VN.T)
          annotation (Line(points={{-74,56},{-74,-18},{-57,-18}}, color={0,0,127}));
        connect(PIDVS.u_m, Tout_VS.T) annotation (Line(points={{-108,-52},{-79,-52},{-79,
                1.9984e-15},{-15,1.9984e-15}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,120}})),
                                                                       Diagram(coordinateSystem(
                preserveAspectRatio=false, extent={{-200,-100},{100,120}})));
      end TRet_cte_V;

      model TRet_cte_O "Keep Tret constant Winter: Tfl=TsetWi
  summer Tfl=TsetSu-1"
        import Occupancy;
        import Vaartstraat;
        replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-198,92},{-178,112}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-172,96},{-156,112}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-150,94},{-130,114}})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSON(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=4*4,
          nParCir=2,
          m_flow_nominal=0.2386) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-44,12})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=-90,
              origin={-46,-18})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VN(          redeclare package
            Medium =
              IDEAS.Media.Water, nPorts=1)
                                 annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-46,-50})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VN(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.1305,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-48,40})));
        BaseClasses.Switch_3 switch_ON_m annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-6,68})));
        IDEAS.Controls.Continuous.LimPID PIDVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 33,
          yMin=273.15 + 17,
          reverseAction=false) annotation (Placement(transformation(extent={{-84,58},{-64,78}})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 24.5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-188,42})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 24)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-190,80})));
        BaseClasses.Switch_3      switch_VN_T annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-146,60})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm - 273.15) -
              10)/5)                    annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-196,60})));
        Modelica.Blocks.Sources.RealExpression pres_VN_us(y=PIDVN.u_s - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-110,110})));
        Modelica.Blocks.Sources.RealExpression pres_VN_um(y=PIDVN.u_m - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-82,112})));
        Modelica.Blocks.Sources.RealExpression pres_VN_y(y=PIDVN.y - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-54,112})));
        IDEAS.Fluid.Sources.Boundary_pT bou_VS(nPorts=1, redeclare package
            Medium =
              IDEAS.Media.Water) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-4,34})));
        IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
          redeclare package Medium = IDEAS.Media.Water,
          m_flow_nominal=1,
          initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
              transformation(
              extent={{10,10},{-10,-10}},
              rotation=-90,
              origin={-4,0})));
        IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSOS(
          redeclare package Medium = IDEAS.Media.Water,
          redeclare IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
            RadSlaCha,
          computeFlowResistance=true,
          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
          nDiscr=1,
          A_floor=4*4,
          nParCir=2,
          m_flow_nominal=0.181)  annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=270,
              origin={-4,-34})));
        IDEAS.Fluid.Sources.MassFlowSource_T m_VS(
          redeclare package Medium = IDEAS.Media.Water,
          use_m_flow_in=true,
          m_flow=0.8544,
          use_T_in=true,
          T=293.15,
          nPorts=1) annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-20,-80})));
        IDEAS.Controls.Continuous.LimPID PIDVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1,
          Ti=3600,
          yMax=273.15 + 33,
          yMin=273.15 + 17,
          reverseAction=false)
          annotation (Placement(transformation(extent={{-118,-50},{-98,-30}})));
        BaseClasses.Switch_3 switch_VS_m annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-96,-88})));
        Modelica.Blocks.Sources.RealExpression pres_VS_us(y=PIDVS.u_s - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-184,-52})));
        Modelica.Blocks.Sources.RealExpression pres_VS_um(y=PIDVS.u_m - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,-72})));
        Modelica.Blocks.Sources.RealExpression pres_VS_Y(y=PIDVS.y - 273.15) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,-92})));
        BaseClasses.Switch_3      switch_VN_T1
                                              annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-148,-8})));
         Modelica.Blocks.Sources.RealExpression TSetW2(y=273.15 + 23)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-182,18})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 23)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-188,-26})));
         Modelica.Blocks.Sources.RealExpression TSetW3(y=273.15 + (22 - 0.5) + 2.5*((
              TRM.TRm - 273.15) - 10)/5)
                                        annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=180,
              origin={-186,-6})));
        IDEAS.Buildings.Components.RectangularZoneTemplate ON(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare Occupancy.OccSched_Office occNum(k=2),
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinA=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winA=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
          redeclare
            IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypA,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
          hasEmb=true)
                     "North parth of the zone"
          annotation (Placement(transformation(extent={{58,10},{30,44}})));

        IDEAS.Buildings.Components.RectangularZoneTemplate OS(
          redeclare package Medium = Medium,
          n50=0.5,
          T_start=295.15,
          redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
          redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
          redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
          redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
          redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
            ligCtr,
          bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
          bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
          bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
          hasWinC=true,
          hasInt=true,
          aziA=IDEAS.Types.Azimuth.N,
          l=4,
          w=4,
          lInt=1,
          h=2.7,
          A_winC=1*1,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypA,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypB,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypC,
          redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
            conTypD,
          redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
          redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
          redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
          redeclare
            IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
            shaTypC,
          redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
          hasEmb=true)
                     "South part of the zone"
          annotation (Placement(transformation(extent={{58,-66},{30,-34}})));

        TABS.TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCON.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1)) annotation (Placement(transformation(extent={{70,38},{94,58}})));
        TABS.TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
            fileName="TDCOS.json",
            varKeys={"Thermal_Discomfort[Ks]"},
            outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
            nin=1))
          annotation (Placement(transformation(extent={{76,-38},{100,-18}})));
        Modelica.Blocks.Sources.RealExpression m_ON_C(y=0.2386)     annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-17,92})));
        Modelica.Blocks.Sources.RealExpression m_ON_N(y=(m_ON_H.y + m_ON_C.y)/2)
                                                                    annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={-5,96})));
        Modelica.Blocks.Sources.RealExpression m_ON_H(y=0.0234)  annotation (
            Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=90,
              origin={11,94})));
        Modelica.Blocks.Sources.RealExpression m_OS_H(y=0.0213) annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=180,
              origin={-133,-74})));
        Modelica.Blocks.Sources.RealExpression m_OS_N(y=((m_OS_H.y + m_OS_C.y)/2))
          annotation (Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=180,
              origin={-141,-84})));
        Modelica.Blocks.Sources.RealExpression m_OS_C(y=0.181)  annotation (Placement(
              transformation(
              extent={{5,8},{-5,-8}},
              rotation=180,
              origin={-141,-98})));
      equation
        connect(m_VN.ports[1],TABSON. port_a) annotation (Line(points={{-48,30},{
                -48,22},{-44,22}},    color={0,127,255}));
        connect(TABSON.port_b,Tout_VN. port_a) annotation (Line(points={{-44,2},{
                -44,-4},{-46,-4},{-46,-8}},
                                      color={0,127,255}));
        connect(TRM.TRm,switch_ON_m. u)
          annotation (Line(points={{-129.4,104},{34,104},{34,68},{6,68}}, color={0,0,127}));
        connect(m_VN.m_flow_in,switch_ON_m. y)
          annotation (Line(points={{-40,52},{-18,52},{-18,57},{-6,57}},color={0,0,127}));
        connect(PIDVN.y, m_VN.T_in)
          annotation (Line(points={{-63,68},{-44,68},{-44,52}}, color={0,0,127}));
        connect(TSetW.y,switch_VN_T. a) annotation (Line(points={{-179,80},{-158,80},{-158,68}},
                                color={0,0,127}));
        connect(TsetS.y,switch_VN_T. c) annotation (Line(points={{-177,42},{-162,42},{-162,52},{-158,
                52}},           color={0,0,127}));
        connect(TSetW1.y,switch_VN_T. b)
          annotation (Line(points={{-185,60},{-158,60}},
                                                     color={0,0,127}));
        connect(switch_VN_T.u, TRM.TRm)
          annotation (Line(points={{-146,72},{-146,104},{-129.4,104}}, color={0,0,127}));
        connect(switch_VN_T.y, PIDVN.u_s) annotation (Line(points={{-135,60},{-110,60},{-110,68},
                {-86,68}}, color={0,0,127}));
        connect(Tout_VS.port_b,bou_VS. ports[1])
          annotation (Line(points={{-4,10},{-4,24}},               color={0,127,255}));
        connect(TABSOS.port_b,Tout_VS. port_a)
          annotation (Line(points={{-4,-24},{-4,-10}},   color={0,127,255}));
        connect(m_VS.ports[1],TABSOS. port_a)
          annotation (Line(points={{-10,-80},{-10,-44},{-4,-44}},
                                                         color={0,127,255}));
        connect(Tout_VN.port_b, bou_VN.ports[1])
          annotation (Line(points={{-46,-28},{-46,-40}}, color={0,127,255}));
        connect(PIDVS.y, m_VS.T_in) annotation (Line(points={{-97,-40},{-66,-40},{-66,-84},{-32,-84}},
              color={0,0,127}));
        connect(switch_VS_m.y, m_VS.m_flow_in)
          annotation (Line(points={{-85,-88},{-32,-88}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VS_m.u) annotation (Line(points={{-146,72},{-92,72},{-92,-76},
                {-96,-76}}, color={0,0,127}));
        connect(switch_VN_T1.y, PIDVS.u_s) annotation (Line(points={{-137,-8},{-128,-8},
                {-128,-40},{-120,-40}}, color={0,0,127}));
        connect(switch_VN_T.u, switch_VN_T1.u)
          annotation (Line(points={{-146,72},{-148,72},{-148,4}}, color={0,0,127}));
        connect(TSetW2.y, switch_VN_T1.a) annotation (Line(points={{-171,18},{-171,9},
                {-160,9},{-160,0}}, color={0,0,127}));
        connect(TsetS1.y, switch_VN_T1.c) annotation (Line(points={{-177,-26},{-168.5,
                -26},{-168.5,-16},{-160,-16}}, color={0,0,127}));
        connect(TSetW3.y, switch_VN_T1.b) annotation (Line(points={{-175,-6},{-166,-6},
                {-166,-8},{-160,-8}}, color={0,0,127}));
        connect(PIDVN.u_m, Tout_VN.T)
          annotation (Line(points={{-74,56},{-74,-18},{-57,-18}}, color={0,0,127}));
        connect(PIDVS.u_m, Tout_VS.T) annotation (Line(points={{-108,-52},{-79,-52},{-79,
                1.9984e-15},{-15,1.9984e-15}}, color={0,0,127}));
        connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
            points={{44,16.8},{44.28,16.8},{44.28,37.2}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusA,ON. proBusC) annotation (Line(
            points={{52.4,-35.6},{52.4,-7.5},{34.48,-7.5},{34.48,10.34}},
            color={255,204,51},
            thickness=0.5));
        connect(OS.proBusCei,OS. proBusFlo) annotation (Line(
            points={{44.28,-40.4},{44,-40.4},{44,-59.6}},
            color={255,204,51},
            thickness=0.5));
        connect(ON.TSensor,tDCON. a) annotation (Line(points={{28.6,30.4},{28.6,
                40.2},{68,40.2},{68,48}}, color={0,0,127}));
        connect(OS.TSensor,tDCOS. a) annotation (Line(points={{28.6,-46.8},{28.6,
                -37.4},{74,-37.4},{74,-28}}, color={0,0,127}));
        connect(TABSON.heatPortEmb[1], ON.gainEmb[1]) annotation (Line(points={{
                -34,12},{-2,12},{-2,11.7},{30,11.7}}, color={191,0,0}));
        connect(OS.gainEmb[1], TABSOS.heatPortEmb[1]) annotation (Line(points={{
                30,-64.4},{18,-64.4},{18,-34},{6,-34}}, color={191,0,0}));
        connect(switch_ON_m.c, m_ON_C.y) annotation (Line(points={{-14,80},{-14,
                86.5},{-17,86.5}}, color={0,0,127}));
        connect(switch_ON_m.b, m_ON_N.y) annotation (Line(points={{-6,80},{-6,
                90.5},{-5,90.5}}, color={0,0,127}));
        connect(switch_ON_m.a, m_ON_H.y) annotation (Line(points={{2,80},{8,80},{
                8,88.5},{11,88.5}}, color={0,0,127}));
        connect(m_OS_H.y, switch_VS_m.a) annotation (Line(points={{-127.5,-74},{
                -116,-74},{-116,-80},{-108,-80}}, color={0,0,127}));
        connect(m_OS_N.y, switch_VS_m.b) annotation (Line(points={{-135.5,-84},{
                -122,-84},{-122,-88},{-108,-88}}, color={0,0,127}));
        connect(m_OS_C.y, switch_VS_m.c) annotation (Line(points={{-135.5,-98},{
                -120,-98},{-120,-96},{-108,-96}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},{100,120}})),
                                                                       Diagram(coordinateSystem(
                preserveAspectRatio=false, extent={{-200,-100},{100,120}})));
      end TRet_cte_O;
    end Tfloor_control;
    annotation ();
  end TABS_1;

  package Controllers
    "Package with all controller models to make the GEOTABS system models more compact"

    model Vaartstraat "Two Vaartstraat building envelopes"
      import Occupancy;
      replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
      import Vaartstraat;
      IDEAS.Buildings.Components.RectangularZoneTemplate VN(
        redeclare package Medium = Medium,
        useLigCtrInput=true,
        n50=0.5,
        T_start=295.15,
        redeclare Occupancy.OccSched_Residence occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.Comfort.Fanger comfort,
        redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=true,
        hasInt=true,
        aziA=-2.8099800957109,
        l=3.52,
        w=5.35,
        lInt=3,
        h=3.52,
        A_winA=3.158,
        fracA=0.255,
        redeclare Vaartstraat.Walls.Outer_wall conTypA,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
        redeclare Vaartstraat.Walls.Inner_wall_hall conTypC,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
        redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingA,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
        hasEmb=true)
                    "Room north in Vaarstraat 0241"
        annotation (Placement(transformation(extent={{0,-12},{-28,16}})));
       Modelica.Blocks.Sources.RealExpression light1(y=if (calTim.weekDay < 6 and ((
            calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
            23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
        "Number of occupants present"
        annotation (Placement(transformation(extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-34,34})));
      IDEAS.Buildings.Components.RectangularZoneTemplate VS(
        redeclare package Medium = Medium,
        useLigCtrInput=true,
        n50=0.5,
        T_start=295.15,
        redeclare Occupancy.OccSched_Residence occNum(k=1),
        redeclare IDEAS.Buildings.Components.RoomType.Generic rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.Input ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=false,
        hasWinC=true,
        hasWinD=false,
        hasInt=true,
        aziA=-2.8099800957109,
        l=3.52,
        w=5.35,
        lInt=3,
        h=3.52,
        A_winA=3.158,
        A_winC=3.158,
        A_winD=3.158,
        fracC=0.255,
        redeclare Vaartstraat.Walls.Inner_wall_hall conTypA,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypB,
        redeclare Vaartstraat.Walls.Outer_wall conTypC,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypD,
        redeclare Vaartstraat.Walls.Inner_ceiling conTypCei,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingA,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingC,
        redeclare
          Vaartstraat.Walls.Vaartstraat_SaintGobainCLIMATOPSOLARKR4_10_4_10_4_13006
          glazingD,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
        hasCavityC=false,
        hasEmb=true)     "Room south in Vaartstraat 0256"
        annotation (Placement(transformation(extent={{-32,-80},{-4,-52}})));
       Modelica.Blocks.Sources.RealExpression light2(y=if (calTim.weekDay < 6 and ((
            calTim.hour > 6 and calTim.hour < 10) or (calTim.hour > 14 and calTim.hour <
            23))) or (calTim.weekDay == 7 and calTim.hour > 17) then 1 else 0)
        "Number of occupants present"
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=-90,
            origin={14,-30})));
      TDC.TDC tDCVN(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCVN.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{-54,30},{-78,50}})));
      TDC.TDC tDCVS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCVS.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{30,-36},{54,-16}})));
      inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
            Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
        annotation (Placement(transformation(extent={{-100,74},{-80,94}})));
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-76,56},{-60,72}})));
      IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
        annotation (Placement(transformation(extent={{-50,50},{-30,70}})));
      Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b gainemb_VN
        annotation (Placement(transformation(extent={{-120,-88},{-94,-62}})));
      Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b gainemb_VS
        annotation (Placement(transformation(extent={{92,-90},{118,-64}})));
      Modelica.Blocks.Interfaces.RealOutput TSensor_VN
        annotation (Placement(transformation(extent={{-102,58},{-132,88}})));
      Modelica.Blocks.Interfaces.RealOutput TSensor_VS
        annotation (Placement(transformation(extent={{100,70},{128,98}})));
      Modelica.Blocks.Interfaces.RealOutput ppmSensor_VN
        annotation (Placement(transformation(extent={{-100,-16},{-130,14}})));
      Modelica.Blocks.Interfaces.RealOutput ppmSensor_VS
        annotation (Placement(transformation(extent={{100,-16},{130,14}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_VNin(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{-78,94},{-58,114}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_VNout(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{-54,94},{-34,114}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_VSin1(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{18,94},{38,114}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_VSout(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{48,94},{68,114}})));
      TDC.TDCppm tDCppmVN(TDC_Json(fileName="TDCairVN.json", varKeys={
              "air discomfort VS [ppmh]"}))
        annotation (Placement(transformation(extent={{-54,-26},{-78,-6}})));
      TDC.TDCppm tDCppmVN1(TDC_Json(fileName="TDCairVS.json", varKeys={
              "air discomfort VS [ppmh]"}))
        annotation (Placement(transformation(extent={{18,-100},{42,-80}})));
    equation
      connect(VN.uLig,light1. y)
        annotation (Line(points={{-30.8,11.8},{-34,11.8},{-34,23}}, color={0,0,127}));
      connect(light2.y,VS. uLig) annotation (Line(points={{14,-41},{12,-41},{12,
              -56.2},{-1.2,-56.2}},
            color={0,0,127}));
      connect(VN.proBusCei[1],VN. proBusFlo[1]) annotation (Line(
          points={{-13.72,10.4},{-13.72,10.2},{-14,10.2},{-14,-6.4}},
          color={255,204,51},
          thickness=0.5));
      connect(VN.proBusB[1],VN. proBusD[1]) annotation (Line(
          points={{-26.6,10.4},{-10.7,10.4},{-10.7,-7.8},{-0.56,-7.8}},
          color={255,204,51},
          thickness=0.5));
      connect(VS.proBusA[1],VN. proBusC[1]) annotation (Line(
          points={{-26.4,-53.4},{-26.4,-46.7},{-23.52,-46.7},{-23.52,-11.72}},
          color={255,204,51},
          thickness=0.5));
      connect(VS.proBusD[1],VS. proBusB[1]) annotation (Line(
          points={{-31.44,-75.8},{-12.72,-75.8},{-12.72,-57.6},{-5.4,-57.6}},
          color={255,204,51},
          thickness=0.5));
      connect(VS.proBusCei[1],VS. proBusFlo[1]) annotation (Line(
          points={{-18.28,-57.6},{-18.28,-49.8},{-18,-49.8},{-18,-74.4}},
          color={255,204,51},
          thickness=0.5));
      connect(VN.TSensor,tDCVN. a) annotation (Line(points={{-29.4,4.8},{-39.3,
              4.8},{-39.3,40},{-52,40}},  color={0,0,127}));
      connect(VS.TSensor,tDCVS. a) annotation (Line(points={{-2.6,-63.2},{-2.6,
              -59.6},{28,-59.6},{28,-26}},
                                         color={0,0,127}));
      connect(VN.TSensor, TSensor_VN) annotation (Line(points={{-29.4,4.8},{-92.7,
              4.8},{-92.7,73},{-117,73}},
                                     color={0,0,127}));
      connect(TSensor_VS, VS.TSensor) annotation (Line(points={{114,84},{60,84},{
              60,-63.2},{-2.6,-63.2}},
                                    color={0,0,127}));
      connect(VN.ppm, ppmSensor_VN) annotation (Line(points={{-29.4,2},{-62,2},{
              -62,-1},{-115,-1}},
                              color={0,0,127}));
      connect(VS.ppm, ppmSensor_VS) annotation (Line(points={{-2.6,-66},{72,-66},
              {72,-1},{115,-1}},
                             color={0,0,127}));
      connect(VS.gainEmb[1], gainemb_VS) annotation (Line(points={{-4,-78.6},{52,
              -78.6},{52,-77},{105,-77}},
                                   color={191,0,0}));
      connect(VN.gainEmb[1], gainemb_VN) annotation (Line(points={{-28,-10.6},{
              -28,-48.3},{-107,-48.3},{-107,-75}},
                                        color={191,0,0}));
      connect(VN.port_a, port_VNin) annotation (Line(points={{-16.8,16},{-20,16},
              {-20,66},{-22,66},{-22,84},{-68,84},{-68,104}}, color={0,127,255}));
      connect(port_VNout, VN.port_b) annotation (Line(points={{-44,104},{-44,88},
              {-10,88},{-10,16},{-11.2,16}},color={0,127,255}));
      connect(VS.port_a, port_VSin1) annotation (Line(points={{-15.2,-52},{-15.2,
              26},{28,26},{28,104}}, color={0,127,255}));
      connect(VS.port_b, port_VSout) annotation (Line(points={{-20.8,-52},{58,-52},
              {58,104}}, color={0,127,255}));
      connect(VN.ppm, tDCppmVN.a) annotation (Line(points={{-29.4,2},{-40,2},{-40,
              -16},{-52,-16}}, color={0,0,127}));
      connect(VS.ppm, tDCppmVN1.a) annotation (Line(points={{-2.6,-66},{6,-66},{6,
              -90},{16,-90}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
              Rectangle(
              extent={{-100,100},{100,-100}},
              lineColor={162,29,33},
              lineThickness=1), Text(
              extent={{-40,42},{54,-50}},
              lineColor={162,29,33},
              lineThickness=1,
              textString="VN_VS
")}),                                                                Diagram(
            coordinateSystem(preserveAspectRatio=false)),
        experiment(
          StartTime=21286800,
          StopTime=31536000,
          __Dymola_NumberOfIntervals=5000,
          __Dymola_Algorithm="Dassl"));
    end Vaartstraat;

    package TDC
      "Temperature setpoints, thermal comfort range and calculation TDC"
      model TDC "Calculation of the thermal discomfort"

        Modelica.Blocks.Continuous.Integrator TDCup(k=1/3600)
          annotation (Placement(transformation(extent={{36,18},{56,38}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-4,16},{16,38}})));
        replaceable IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDC.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{96,-10},{116,10}})));
        Modelica.Blocks.Math.Add add1(k2=-1)
          annotation (Placement(transformation(extent={{-2,-66},{18,-44}})));
        Modelica.Blocks.Continuous.Integrator TDCdown(k=-1/3600)
          annotation (Placement(transformation(extent={{42,-66},{62,-46}})));
        Modelica.Blocks.Math.MultiSum TDCtot(nu=2)
          annotation (Placement(transformation(extent={{74,-4},{86,8}})));
        Modelica.Blocks.Interfaces.RealInput a
          annotation (Placement(transformation(extent={{-160,-20},{-120,20}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-120,80},{-100,100}})));
        Modelica.Blocks.Sources.RealExpression Tset(y=if TRM.TRm < 273.15+10 then 22 elseif
              TRM.TRm > 273.15+15 then 24.5 else 22 + 2.5*((TRM.TRm-273.15) - 10)/5)
          annotation (Placement(transformation(extent={{-34,82},{-14,102}})));
        Modelica.Blocks.Sources.RealExpression TRMdown(y=10)
          annotation (Placement(transformation(extent={{-92,80},{-72,100}})));
        Modelica.Blocks.Sources.RealExpression TRMup(y=15)
          annotation (Placement(transformation(extent={{-64,80},{-44,100}})));
        Modelica.Blocks.Sources.RealExpression Tup(y=if TRM.TRm < 273.15 + 10
               then 22 + 2 elseif TRM.TRm > 273.15 + 15 then 24.5 + 1.5 else 22 + 2
               + 2.5*((TRM.TRm - 273.15) - 10)/5)
          annotation (Placement(transformation(extent={{-118,62},{-98,82}})));
        Modelica.Blocks.Sources.RealExpression Tlow(y=if TRM.TRm < 273.15 + 10
               then 22 - 2 elseif TRM.TRm > 273.15 + 15 then 24.5 - 1.5 else 22 - 2
               + 2.5*((TRM.TRm - 273.15) - 10)/5)
          annotation (Placement(transformation(extent={{-114,-48},{-94,-28}})));
        if_statement_greater if_up
          annotation (Placement(transformation(extent={{-42,42},{-22,62}})));
        if_statement_less if_down
          annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
        Modelica.Blocks.Math.Add Top(k2=-1)
          annotation (Placement(transformation(extent={{-86,-8},{-66,14}})));
        Modelica.Blocks.Sources.RealExpression Kelvin(y=273.15)
          annotation (Placement(transformation(extent={{-120,-28},{-100,-8}})));
      equation
        //connect(sim.Te, add.u1);
        connect(add.y, TDCup.u) annotation (Line(points={{17,27},{21.5,27},{21.5,
                28},{34,28}}, color={0,0,127}));

        /*if cosine.y > 22 then
       connect( cosine.y, add.u1);
  else
    connect(const1.y,add.u1);
  end if;*/
        connect(add1.y, TDCdown.u) annotation (Line(points={{19,-55},{34.5,-55},{
                34.5,-56},{40,-56}}, color={0,0,127}));
        connect(TDCup.y, TDCtot.u[1]) annotation (Line(points={{57,28},{66,28},{
                66,4.1},{74,4.1}}, color={0,0,127}));
        connect(TDCdown.y, TDCtot.u[2]) annotation (Line(points={{63,-56},{68,-56},
                {68,-0.1},{74,-0.1}}, color={0,0,127}));
        connect(TDCtot.y, TDC_Json.u[1]) annotation (Line(points={{87.02,2},{90,2},
                {90,0},{96,0}}, color={0,0,127}));
        connect(Tup.y, add.u2) annotation (Line(points={{-97,72},{-54,72},{-54,
                20.4},{-6,20.4}}, color={0,0,127}));
        connect(Tup.y, if_up.Tup) annotation (Line(points={{-97,72},{-76,72},{-76,
                58},{-44,58}}, color={0,0,127}));
        connect(if_up.y, add.u1) annotation (Line(points={{-21,52},{-14,52},{-14,
                33.6},{-6,33.6}}, color={0,0,127}));
        connect(Tlow.y, if_down.Tdown) annotation (Line(points={{-93,-38},{-78,
                -38},{-78,-14.2},{-42,-14.2}}, color={0,0,127}));
        connect(if_down.y, add1.u1) annotation (Line(points={{-19,-20},{-12,-20},
                {-12,-48.4},{-4,-48.4}}, color={0,0,127}));
        connect(Tlow.y, add1.u2) annotation (Line(points={{-93,-38},{-38,-38},{
                -38,-61.6},{-4,-61.6}}, color={0,0,127}));
        connect(a, Top.u1) annotation (Line(points={{-140,0},{-118,0},{-118,9.6},
                {-88,9.6}}, color={0,0,127}));
        connect(Kelvin.y, Top.u2) annotation (Line(points={{-99,-18},{-96,-18},{
                -96,-3.6},{-88,-3.6}}, color={0,0,127}));
        connect(Top.y, if_up.u) annotation (Line(points={{-65,3},{-65,27.5},{-44,
                27.5},{-44,52}}, color={0,0,127}));
        connect(Top.y, if_down.u) annotation (Line(points={{-65,3},{-65,-19.5},{
                -42,-19.5},{-42,-20}}, color={0,0,127}));
        annotation (experiment(StopTime=12, __Dymola_NumberOfIntervals=5000),
          Diagram(coordinateSystem(extent={{-120,-100},{120,100}})),
          Icon(coordinateSystem(extent={{-120,-100},{120,100}}), graphics={Rectangle(
                extent={{-120,98},{120,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-98,40},{96,-52}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="TDC
")}));
      end TDC;

      model if_statement_less
        "Let the signal pass if the if-statement is met"

        //  parameter Real Tdown( unit="K", displayUnit="degC") "Bottom limit for thermal comfort";

        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));

        Modelica.Blocks.Interfaces.RealInput Tdown
          annotation (Placement(transformation(extent={{-140,38},{-100,78}})));
      equation
        if u < Tdown then
          u=y;
        else
          y=Tdown;
        end if;

        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Text(
                extent={{-66,16},{64,-56}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="If <
"),     Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1)}),                                    Diagram(
              coordinateSystem(preserveAspectRatio=false)),
                    Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-68,50},{60,-58}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="If >")}),                                  Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end if_statement_less;

      model if_statement_greater
        "Let the signal pass if the if-statement is met"

        //parameter Real Tup( unit="K", displayUnit="degC") "Upper limit for thermal comfort";

        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));
        Modelica.Blocks.Interfaces.RealInput Tup
          annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
      equation
        if u > Tup then
          u=y;
        else
          y=Tup;
        end if;
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-68,50},{60,-58}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="If >")}),                                  Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end if_statement_greater;

      model Test_discomfort "Test the thermal discomfort model with a cosine"

        Modelica.Blocks.Sources.Constant const1(k=22)
          annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
        Modelica.Blocks.Continuous.Integrator integrator
          annotation (Placement(transformation(extent={{10,16},{30,36}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-40,12},{-20,34}})));
        replaceable IDEAS.Utilities.IO.Files.JSONWriter jsonWri(
          fileName="TDC.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{84,-10},{104,10}})));
        Modelica.Blocks.Sources.Cosine cosine(
          amplitude=2,
          freqHz=1/8,
          offset=21)
          annotation (Placement(transformation(extent={{-106,54},{-86,74}})));
        Modelica.Blocks.Sources.Constant const2(k=20)
          annotation (Placement(transformation(extent={{-108,-86},{-88,-66}})));
        Modelica.Blocks.Math.Add add1(k2=-1)
          annotation (Placement(transformation(extent={{-24,-68},{-4,-46}})));
        Modelica.Blocks.Continuous.Integrator integrator1(k=-1)
          annotation (Placement(transformation(extent={{16,-68},{36,-48}})));
        Modelica.Blocks.Math.MultiSum multiSum(nu=2)
          annotation (Placement(transformation(extent={{48,-6},{60,6}})));
        if_statement_greater if_statement_greater1
          annotation (Placement(transformation(extent={{-68,42},{-48,62}})));
        if_statement_less if_statement_less1
          annotation (Placement(transformation(extent={{-66,-40},{-46,-20}})));
      equation
        //connect(sim.Te, add.u1);
        connect(const1.y, add.u2) annotation (Line(points={{-89,0},{-50,0},{-50,16.4},
                {-42,16.4}}, color={0,0,127}));
        connect(add.y, integrator.u) annotation (Line(points={{-19,23},{-4.5,23},{-4.5,
                26},{8,26}}, color={0,0,127}));

        /*if cosine.y > 22 then
       connect( cosine.y, add.u1);
  else
    connect(const1.y,add.u1);
  end if;*/
        connect(const2.y, add1.u2) annotation (Line(points={{-87,-76},{-56,-76},{-56,-63.6},
                {-26,-63.6}}, color={0,0,127}));
        connect(add1.y, integrator1.u) annotation (Line(points={{-3,-57},{6.5,-57},{6.5,
                -58},{14,-58}}, color={0,0,127}));
        connect(integrator.y, multiSum.u[1]) annotation (Line(points={{31,26},{40,26},
                {40,2.1},{48,2.1}}, color={0,0,127}));
        connect(integrator1.y, multiSum.u[2]) annotation (Line(points={{37,-58},{42,-58},
                {42,-2.1},{48,-2.1}}, color={0,0,127}));
        connect(multiSum.y, jsonWri.u[1])
          annotation (Line(points={{61.02,0},{84,0}}, color={0,0,127}));
        connect(const1.y, if_statement_greater1.u) annotation (Line(points={{-89,
                0},{-78,0},{-78,52},{-70,52}}, color={0,0,127}));
        connect(cosine.y, if_statement_greater1.Tup) annotation (Line(points={{
                -85,64},{-76,64},{-76,58},{-70,58}}, color={0,0,127}));
        connect(if_statement_greater1.y, add.u1) annotation (Line(points={{-47,52},
                {-44,52},{-44,29.6},{-42,29.6}}, color={0,0,127}));
        connect(const1.y, if_statement_less1.u) annotation (Line(points={{-89,0},
                {-78,0},{-78,-30},{-68,-30}}, color={0,0,127}));
        connect(cosine.y, if_statement_less1.Tdown) annotation (Line(points={{-85,
                64},{-76,64},{-76,-24.2},{-68,-24.2}}, color={0,0,127}));
        connect(if_statement_less1.y, add1.u1) annotation (Line(points={{-45,-30},
                {-34,-30},{-34,-50.4},{-26,-50.4}}, color={0,0,127}));
        annotation (experiment(StopTime=12, __Dymola_NumberOfIntervals=5000),
          Diagram(coordinateSystem(extent={{-120,-100},{120,100}})),
          Icon(coordinateSystem(extent={{-120,-100},{120,100}})));
      end Test_discomfort;

      model TDCppm "Calculation of the air discomfort"

        Modelica.Blocks.Continuous.Integrator TDCair(k=1/3600)
          annotation (Placement(transformation(extent={{36,18},{56,38}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-4,16},{16,38}})));
        replaceable IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCair.json",
          varKeys={"Thermal_Discomfort[ppmh]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1) annotation (Placement(transformation(extent={{96,-10},{116,10}})));
        Modelica.Blocks.Interfaces.RealInput a
          annotation (Placement(transformation(extent={{-160,-20},{-120,20}})));
        if_statement_greater if_up
          annotation (Placement(transformation(extent={{-42,42},{-22,62}})));
         Modelica.Blocks.Sources.RealExpression ppmup(y=if (calTim.weekDay < 6
               and (calTim.hour > 14 or calTim.hour < 10)) or (calTim.weekDay ==
              7 and calTim.hour > 17) then 800 else 20000)
          "Number of occupants present"
          annotation (Placement(transformation(extent={{-106,48},{-86,68}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-74,76},{-54,96}})));
      equation
        //connect(sim.Te, add.u1);
        connect(add.y, TDCair.u) annotation (Line(points={{17,27},{21.5,27},{21.5,
                28},{34,28}}, color={0,0,127}));

        /*if cosine.y > 22 then
       connect( cosine.y, add.u1);
  else
    connect(const1.y,add.u1);
  end if;*/
        connect(if_up.y, add.u1) annotation (Line(points={{-21,52},{-14,52},{-14,
                33.6},{-6,33.6}}, color={0,0,127}));
        connect(ppmup.y, if_up.Tup)
          annotation (Line(points={{-85,58},{-44,58}}, color={0,0,127}));
        connect(ppmup.y, add.u2) annotation (Line(points={{-85,58},{-62,58},{-62,
                20.4},{-6,20.4}}, color={0,0,127}));
        connect(if_up.u, a) annotation (Line(points={{-44,52},{-86,52},{-86,0},{
                -140,0}}, color={0,0,127}));
        connect(TDCair.y, TDC_Json.u[1]) annotation (Line(points={{57,28},{76,28},
                {76,0},{96,0}}, color={0,0,127}));
        annotation (experiment(StopTime=12, __Dymola_NumberOfIntervals=5000),
          Diagram(coordinateSystem(extent={{-120,-100},{120,100}})),
          Icon(coordinateSystem(extent={{-120,-100},{120,100}}), graphics={Rectangle(
                extent={{-120,98},{120,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-98,40},{96,-52}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="TDCppm
")}));
      end TDCppm;
    end TDC;

    package HCCC_ctrl
      "All 3way valve controllers in order to obtain the requested Tsup according to HCCC"
      model HCCC_ctrl_VN
        "Model to control 3wayvalve in order to control the Tsup according to HCCC"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={36,42})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        Modelica.Blocks.Sources.RealExpression HCVNthSOMMOS(y=3*(-0.073008085)*(TRM.TRm
               - 273.15) + (23.60617788 - 1) + 273.15)
                         annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=0,
              origin={80,64})));
        Modelica.Blocks.Sources.RealExpression NCVNthSOMMOS(y=-0.073008085*(TRM.TRm -
              273.15) + (24.1445 - 1) + 273.15)
                                     annotation (Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=0,
              origin={79,44})));
        Modelica.Blocks.Sources.RealExpression CCVNthSOMMOS(y=-0.007472382*(TRM.TRm
               - 273.15) + (24.68307335 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=0,
              origin={80,22})));
        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-38},{-26,-18}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput VNus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={15,115})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T1.u)
          annotation (Line(points={{-33.4,88},{36,88},{36,54}}, color={0,0,127}));
        connect(switch_VN_T1.a, HCVNthSOMMOS.y)
          annotation (Line(points={{48,50},{69,50},{69,64}}, color={0,0,127}));
        connect(NCVNthSOMMOS.y, switch_VN_T1.b) annotation (Line(points={{73.5,44},
                {62,44},{62,42},{48,42}},
                                      color={0,0,127}));
        connect(CCVNthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{69,22},
                {62,22},{62,34},{48,34}},
                                  color={0,0,127}));
        connect(switch_VN_T1.y, PIDH.u_s) annotation (Line(points={{25,42},{18,42},
                {18,50},{-4,50}},
                              color={0,0,127}));
        connect(PIDC.u_s, switch_VN_T1.y) annotation (Line(points={{-4,-28},{-4,
                22},{25,22},{25,42}},
                              color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},{-16,
                -40}}, color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-40},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-28},{-36,-28},
                {-36,-8},{-46,-8}}, color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_VN_T1.y, VNus) annotation (Line(points={{25,42},{22,42},{
                22,115},{15,115}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="HCCC_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end HCCC_ctrl_VN;

      model HCCC_ctrl_VS
        "Model to control 3wayvalve in order to control the Tsup according to HCCC"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-36},{-26,-16}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Sources.RealExpression CCVSthSOMMOS(y=-0.005368822*(TRM.TRm
               - 273.15) + (24.63153614 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-7,-8},{7,8}},
              rotation=180,
              origin={74,27})));
        Modelica.Blocks.Sources.RealExpression NCVSthSOMMOS(y=2*(-0.073008085)*(
              TRM.TRm - 273.15) + (24.63 - 1) + 273.15)
                                           annotation (Placement(transformation(
              extent={{-5,-8},{5,8}},
              rotation=180,
              origin={79,44})));
        Modelica.Blocks.Sources.RealExpression HCVSthSOMMOS(y=3*(-0.073008085)*(
              TRM.TRm - 273.15) + (23.60617788 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={84,62})));
        Modelica.Blocks.Interfaces.RealOutput VSus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={21,115})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T1.u)
          annotation (Line(points={{-33.4,88},{38,88},{38,56}}, color={0,0,127}));
        connect(switch_VN_T1.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},{18,
                50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_VN_T1.y) annotation (Line(points={{-4,-26},{-4,
                22},{27,22},{27,44}},
                              color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},
                {-16,-38}},
                       color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-38},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-26},{
                -36,-26},{-36,-8},{-46,-8}},
                                    color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(CCVSthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{66.3,27},
                {59.15,27},{59.15,36},{50,36}}, color={0,0,127}));
        connect(HCVSthSOMMOS.y, switch_VN_T1.a) annotation (Line(points={{75.2,62},
                {62,62},{62,52},{50,52}}, color={0,0,127}));
        connect(NCVSthSOMMOS.y, switch_VN_T1.b)
          annotation (Line(points={{73.5,44},{50,44}}, color={0,0,127}));
        connect(switch_VN_T1.y, VSus) annotation (Line(points={{27,44},{27,73},{
                21,73},{21,115}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="HCCC_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end HCCC_ctrl_VS;

      model HCCC_ctrl_ON
        "Model to control 3wayvalve in order to control the Tsup according to HCCC"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-38},{-26,-18}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput ONus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={15,115})));
        Modelica.Blocks.Sources.RealExpression HCONthSOMMOS(y=(-0.192630385)*(TRM.TRm
               - 273.15) + (26.23786848 + 2.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={78,58})));
        Modelica.Blocks.Sources.RealExpression NCONthSOMMOS(y=(-0.192630385)*(TRM.TRm
               - 273.15) + (26.25573) + 273.15)
                                     annotation (Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=180,
              origin={79,40})));
        Modelica.Blocks.Sources.RealExpression CCONthSOMMOS(y=-0.072395894*(TRM.TRm
               - 273.15) + (26.2736994) + 273.15)
                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={78,22})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T1.u)
          annotation (Line(points={{-33.4,88},{38,88},{38,56}}, color={0,0,127}));
        connect(switch_VN_T1.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},{18,
                50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_VN_T1.y) annotation (Line(points={{-4,-28},{-4,22},{27,
                22},{27,44}}, color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},{-16,
                -40}}, color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-40},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-28},{-36,-28},
                {-36,-8},{-46,-8}}, color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_VN_T1.y,ONus)  annotation (Line(points={{27,44},{22,44},{
                22,115},{15,115}}, color={0,0,127}));
        connect(HCONthSOMMOS.y, switch_VN_T1.a) annotation (Line(points={{67,58},
                {60,58},{60,52},{50,52}}, color={0,0,127}));
        connect(CCONthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{67,22},
                {60,22},{60,36},{50,36}}, color={0,0,127}));
        connect(NCONthSOMMOS.y, switch_VN_T1.b) annotation (Line(points={{73.5,40},
                {60,40},{60,44},{50,44}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="HCCC_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end HCCC_ctrl_ON;

      model HCCC_ctrl_OS
        "Model to control 3wayvalve in order to control the Tsup according to HCCC"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-36},{-26,-16}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput OSus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={21,115})));
        Modelica.Blocks.Sources.RealExpression CCOSthSOMMOS(y=(-0.058622961)*(TRM.TRm
               - 273.15) + (25.93626255 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-7,-8},{7,8}},
              rotation=180,
              origin={68,23})));
        Modelica.Blocks.Sources.RealExpression NCOSthSOMMOS(y=0.9*(-0.206797035)*
              (TRM.TRm - 273.15) + (26.2425 - 0.75) + 273.15)
                                           annotation (Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=180,
              origin={75,44})));
        Modelica.Blocks.Sources.RealExpression HCOSthSOMMOS(y=0.95*(-0.206797035)
              *(TRM.TRm - 273.15) + (26.54953476) + 273.15)
                         annotation (Placement(transformation(
              extent={{8,-8},{-8,8}},
              rotation=0,
              origin={76,62})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T1.u)
          annotation (Line(points={{-33.4,88},{38,88},{38,56}}, color={0,0,127}));
        connect(switch_VN_T1.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},{18,
                50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_VN_T1.y) annotation (Line(points={{-4,-26},{-4,
                22},{27,22},{27,44}},
                              color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},
                {-16,-38}},
                       color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-38},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-26},{
                -36,-26},{-36,-8},{-46,-8}},
                                    color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_VN_T1.y,OSus)  annotation (Line(points={{27,44},{27,73},{
                21,73},{21,115}}, color={0,0,127}));
        connect(switch_VN_T1.a, HCOSthSOMMOS.y) annotation (Line(points={{50,52},
                {58,52},{58,62},{67.2,62}}, color={0,0,127}));
        connect(switch_VN_T1.b, NCOSthSOMMOS.y)
          annotation (Line(points={{50,44},{69.5,44}}, color={0,0,127}));
        connect(CCOSthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{60.3,23},
                {60.3,29.5},{50,29.5},{50,36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="HCCC_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end HCCC_ctrl_OS;
    end HCCC_ctrl;

    package dp_ctrl "All pump controllers for each HC group"
      model dp_ctrl_mSOMMOS_VN
        import TABS_1;
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-16},{-130,14}})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode1
          annotation (Placement(transformation(extent={{-62,-10},{-82,10}})));
        Modelica.Blocks.Nonlinear.Limiter limiter(uMax=1000000, uMin=0)
          annotation (Placement(transformation(extent={{-20,32},{-34,18}})));
        Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=1000000, uMin=0)
          annotation (Placement(transformation(extent={{-16,-22},{-30,-36}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_dpH1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={26,-28})));
        TABS_1.BaseClasses.Switch_3 switch_VN_dpH annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={26,48})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-100,78},{-80,98}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-74,82},{-58,98}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-46,76},{-26,96}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{138,-20},{98,20}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{140,72},{100,112}})));
        Modelica.Blocks.Interfaces.RealInput u2
          annotation (Placement(transformation(extent={{140,42},{100,82}})));
        Modelica.Blocks.Interfaces.RealInput u3
          annotation (Placement(transformation(extent={{140,10},{100,50}})));
        Modelica.Blocks.Interfaces.RealInput u4
          annotation (Placement(transformation(extent={{140,-48},{100,-8}})));
        Modelica.Blocks.Interfaces.RealInput u5
          annotation (Placement(transformation(extent={{140,-80},{100,-40}})));
        Modelica.Blocks.Interfaces.RealInput u6
          annotation (Placement(transformation(extent={{142,-110},{102,-70}})));
      equation
        connect(limiter1.y,switch_H_C_mode1. u3) annotation (Line(points={{-30.7,-29},
                {-42.35,-29},{-42.35,-8},{-60,-8}},
                                           color={0,0,127}));
        connect(limiter.y,switch_H_C_mode1. u1) annotation (Line(points={{-34.7,25},{-34.7,
                16.5},{-60,16.5},{-60,8}},  color={0,0,127}));
        connect(switch_VN_dpH1.y,limiter1. u) annotation (Line(points={{15,-28},{4,-28},
                {4,-29},{-14.6,-29}},
                                    color={0,0,127}));
        connect(switch_VN_dpH.y,limiter. u) annotation (Line(points={{15,48},{12,48},{
                12,25},{-18.6,25}},
                                  color={0,0,127}));
        connect(switch_H_C_mode1.y, y)
          annotation (Line(points={{-83,0},{-98,0},{-98,-1},{-115,-1}},
                                                      color={0,0,127}));
        connect(TRM.TRm, switch_VN_dpH.u)
          annotation (Line(points={{-25.4,86},{26,86},{26,60}}, color={0,0,127}));
        connect(switch_VN_dpH.u, switch_VN_dpH1.u)
          annotation (Line(points={{26,60},{26,-16}}, color={0,0,127}));
        connect(u, switch_H_C_mode1.u2)
          annotation (Line(points={{118,0},{-60,0}}, color={255,0,255}));
        connect(u1, switch_VN_dpH.a) annotation (Line(points={{120,92},{80,92},{80,56},
                {38,56}}, color={0,0,127}));
        connect(u2, switch_VN_dpH.b) annotation (Line(points={{120,62},{86,62},{86,48},
                {38,48}}, color={0,0,127}));
        connect(u3, switch_VN_dpH.c) annotation (Line(points={{120,30},{80,30},{80,40},
                {38,40}}, color={0,0,127}));
        connect(u4, switch_VN_dpH1.a) annotation (Line(points={{120,-28},{80,-28},{80,
                -20},{38,-20}}, color={0,0,127}));
        connect(u5, switch_VN_dpH1.b) annotation (Line(points={{120,-60},{72,-60},{72,
                -28},{38,-28}}, color={0,0,127}));
        connect(u6, switch_VN_dpH1.c) annotation (Line(points={{122,-90},{60,-90},{60,
                -36},{38,-36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-62,26},{74,-54}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="dp ctrl
")}),       Diagram(coordinateSystem(preserveAspectRatio=false)));
      end dp_ctrl_mSOMMOS_VN;

      model dp_ctrl_AHUVN
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-16},{-130,14}})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode1
          annotation (Placement(transformation(extent={{-62,-10},{-82,10}})));
        Modelica.Blocks.Nonlinear.Limiter limiter(uMax=1000000, uMin=0)
          annotation (Placement(transformation(extent={{-20,32},{-34,18}})));
        Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=1000000, uMin=0)
          annotation (Placement(transformation(extent={{-16,-22},{-30,-36}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{138,-40},{102,-4}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{134,74},{102,106}})));
        Modelica.Blocks.Interfaces.RealInput u4
          annotation (Placement(transformation(extent={{132,-100},{102,-70}})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode2
          annotation (Placement(transformation(extent={{26,40},{6,60}})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode3
          annotation (Placement(transformation(extent={{36,-68},{16,-48}})));
        Modelica.Blocks.Interfaces.RealInput off
          annotation (Placement(transformation(extent={{132,2},{100,34}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{78,0},{58,20}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=200)
          annotation (Placement(transformation(extent={{84,32},{64,52}})));
      equation
        connect(limiter1.y,switch_H_C_mode1. u3) annotation (Line(points={{-30.7,-29},
                {-42.35,-29},{-42.35,-8},{-60,-8}},
                                           color={0,0,127}));
        connect(limiter.y,switch_H_C_mode1. u1) annotation (Line(points={{-34.7,25},{-34.7,
                16.5},{-60,16.5},{-60,8}},  color={0,0,127}));
        connect(switch_H_C_mode1.y, y)
          annotation (Line(points={{-83,0},{-98,0},{-98,-1},{-115,-1}},
                                                      color={0,0,127}));
        connect(u, switch_H_C_mode1.u2) annotation (Line(points={{120,-22},{30,
                -22},{30,0},{-60,0}}, color={255,0,255}));
        connect(switch_H_C_mode2.u1, u1) annotation (Line(points={{28,58},{68,58},
                {68,90},{118,90}}, color={0,0,127}));
        connect(limiter1.u, switch_H_C_mode3.y) annotation (Line(points={{-14.6,
                -29},{-14.6,-30.5},{15,-30.5},{15,-58}}, color={0,0,127}));
        connect(switch_H_C_mode3.u1, u4) annotation (Line(points={{38,-50},{74,
                -50},{74,-85},{117,-85}}, color={0,0,127}));
        connect(switch_H_C_mode2.y, limiter.u) annotation (Line(points={{5,50},{
                -6,50},{-6,25},{-18.6,25}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, switch_H_C_mode2.u2) annotation (Line(
              points={{57,10},{40,10},{40,50},{28,50}}, color={255,0,255}));
        connect(greaterEqualThreshold.y, switch_H_C_mode3.u2) annotation (Line(
              points={{57,10},{57,-56},{38,-56},{38,-58}}, color={255,0,255}));
        connect(greaterEqualThreshold.u, off) annotation (Line(points={{80,10},{
                94,10},{94,18},{116,18}}, color={0,0,127}));
        connect(realExpression.y, switch_H_C_mode2.u3)
          annotation (Line(points={{63,42},{28,42}}, color={0,0,127}));
        connect(realExpression.y, switch_H_C_mode3.u3) annotation (Line(points={{
                63,42},{50,42},{50,-66},{38,-66}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-62,26},{74,-54}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="dp ctrl
")}),       Diagram(coordinateSystem(preserveAspectRatio=false)));
      end dp_ctrl_AHUVN;

      model dp_ctrl_TsupC
        Modelica.Blocks.Math.Min min
          annotation (Placement(transformation(extent={{-22,24},{-2,44}})));
        Modelica.Blocks.Math.Min min1
          annotation (Placement(transformation(extent={{-30,-46},{-10,-26}})));
        Baseclasses.if_open if_open_TABSVN
          annotation (Placement(transformation(extent={{-78,58},{-58,78}})));
        Baseclasses.if_open if_open_TABSVS
          annotation (Placement(transformation(extent={{-76,16},{-56,36}})));
        Baseclasses.if_open if_open2
          annotation (Placement(transformation(extent={{-80,-20},{-60,-40}})));
        Baseclasses.if_open if_open3
          annotation (Placement(transformation(extent={{-76,-60},{-56,-80}})));
        Modelica.Blocks.Interfaces.RealInput TABSVN_us
          annotation (Placement(transformation(extent={{-140,56},{-100,96}})));
        Modelica.Blocks.Interfaces.RealInput TABSVS_us
          annotation (Placement(transformation(extent={{-140,8},{-100,48}})));
        Modelica.Blocks.Interfaces.RealInput AHUVN_us
          annotation (Placement(transformation(extent={{-140,-44},{-100,-4}})));
        Modelica.Blocks.Interfaces.RealInput AHUVS_us
          annotation (Placement(transformation(extent={{-140,-100},{-100,-60}})));
        Modelica.Blocks.Interfaces.RealInput valVNC annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={-70,120})));
        Modelica.Blocks.Interfaces.RealInput valVSC annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={4,120})));
        Modelica.Blocks.Interfaces.RealInput AHUVNvalC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=90,
              origin={0,-122})));
        Modelica.Blocks.Interfaces.RealInput AHUVSvalC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=90,
              origin={-66,-122})));
        Modelica.Blocks.Math.Min min2
          annotation (Placement(transformation(extent={{10,-16},{30,4}})));
        Modelica.Blocks.Interfaces.RealInput TsupC annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={136,122})));
        IDEAS.Controls.Continuous.LimPID PIDpumpGC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-5000,
          Ti=300,
          yMax=60000,
          yMin=2,
          initType=Modelica.Blocks.Types.InitPID.InitialOutput,
          y_start=2)
          annotation (Placement(transformation(extent={{50,6},{70,-14}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{10,82},{22,94}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=4)
          annotation (Placement(transformation(extent={{36,-60},{48,-48}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-4,56},{8,68}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-12,-74},{0,-62}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold3(
            threshold=0.5)
          annotation (Placement(transformation(extent={{8,-96},{20,-84}})));
        Modelica.Blocks.Logical.Switch switch1
          annotation (Placement(transformation(extent={{100,-18},{120,2}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=2) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={58,-84})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{160,-16},{182,6}})));
      equation
        connect(valVNC, if_open_TABSVN.a) annotation (Line(points={{-70,120},{-70,
                80},{-68,80}}, color={0,0,127}));
        connect(TABSVN_us, if_open_TABSVN.u) annotation (Line(points={{-120,76},{
                -100,76},{-100,68},{-80,68}}, color={0,0,127}));
        connect(valVSC, if_open_TABSVS.a) annotation (Line(points={{4,120},{-32,
                120},{-32,38},{-66,38}}, color={0,0,127}));
        connect(TABSVS_us, if_open_TABSVS.u) annotation (Line(points={{-120,28},{
                -98,28},{-98,26},{-78,26}}, color={0,0,127}));
        connect(if_open_TABSVN.y, min.u1) annotation (Line(points={{-56.7,68.1},{
                -26.35,68.1},{-26.35,40},{-24,40}}, color={0,0,127}));
        connect(if_open_TABSVS.y, min.u2) annotation (Line(points={{-54.7,26.1},{
                -27.35,26.1},{-27.35,28},{-24,28}}, color={0,0,127}));
        connect(if_open3.a, AHUVSvalC)
          annotation (Line(points={{-66,-82},{-66,-122}}, color={0,0,127}));
        connect(AHUVNvalC, if_open2.a) annotation (Line(points={{0,-122},{-36,
                -122},{-36,-42},{-70,-42}}, color={0,0,127}));
        connect(AHUVN_us, if_open2.u) annotation (Line(points={{-120,-24},{-101,
                -24},{-101,-30},{-82,-30}}, color={0,0,127}));
        connect(AHUVS_us, if_open3.u) annotation (Line(points={{-120,-80},{-98,
                -80},{-98,-70},{-78,-70}}, color={0,0,127}));
        connect(if_open2.y, min1.u1) annotation (Line(points={{-58.7,-30.1},{
                -35.35,-30.1},{-35.35,-30},{-32,-30}}, color={0,0,127}));
        connect(if_open3.y, min1.u2) annotation (Line(points={{-54.7,-70.1},{
                -54.7,-46.05},{-32,-46.05},{-32,-42}}, color={0,0,127}));
        connect(min.y, min2.u1) annotation (Line(points={{-1,34},{10,34},{10,0},{
                8,0}}, color={0,0,127}));
        connect(min1.y, min2.u2) annotation (Line(points={{-9,-36},{4,-36},{4,-12},
                {8,-12}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, or1.u[1]) annotation (Line(points={{22.6,
                88},{32,88},{32,-50.85},{36,-50.85}}, color={255,0,255}));
        connect(valVSC, greaterEqualThreshold.u) annotation (Line(points={{4,120},
                {8,120},{8,88},{8.8,88}}, color={0,0,127}));
        connect(valVNC, greaterEqualThreshold1.u) annotation (Line(points={{-70,
                120},{-40,120},{-40,62},{-5.2,62}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, or1.u[2]) annotation (Line(points={{8.6,
                62},{36,62},{36,-52.95}}, color={255,0,255}));
        connect(AHUVSvalC, greaterEqualThreshold2.u) annotation (Line(points={{
                -66,-122},{-48,-122},{-48,-68},{-13.2,-68}}, color={0,0,127}));
        connect(AHUVNvalC, greaterEqualThreshold3.u) annotation (Line(points={{0,
                -122},{0,-107},{6.8,-107},{6.8,-90}}, color={0,0,127}));
        connect(greaterEqualThreshold2.y, or1.u[3]) annotation (Line(points={{0.6,
                -68},{26,-68},{26,-52},{36,-52},{36,-55.05}}, color={255,0,255}));
        connect(greaterEqualThreshold3.y, or1.u[4]) annotation (Line(points={{
                20.6,-90},{20.6,-72},{36,-72},{36,-57.15}}, color={255,0,255}));
        connect(or1.y, switch1.u2) annotation (Line(points={{48.9,-54},{84,-54},{
                84,-8},{98,-8}},   color={255,0,255}));
        connect(realExpression.y, switch1.u3) annotation (Line(points={{58,-73},{
                98,-73},{98,-16}}, color={0,0,127}));
        connect(TsupC, PIDpumpGC.u_m) annotation (Line(points={{136,122},{60,122},
                {60,8}},  color={0,0,127}));
        connect(min2.y, PIDpumpGC.u_s) annotation (Line(points={{31,-6},{39.5,-6},
                {39.5,-4},{48,-4}}, color={0,0,127}));
        connect(PIDpumpGC.y, switch1.u1) annotation (Line(points={{71,-4},{85.5,
                -4},{85.5,0},{98,0}}, color={0,0,127}));
        connect(switch1.y, y) annotation (Line(points={{121,-8},{132,-8},{132,-5},
                {171,-5}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                  -100},{160,100}}),      graphics={Rectangle(
                extent={{-98,100},{160,-102}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-66,56},{58,-74}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="dp_ctrl PumpGC
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  160,100}})));
      end dp_ctrl_TsupC;

      package Baseclasses

        model if_open "Let the signal pass if the if-statement is met"

          //parameter Real Tup( unit="K", displayUnit="degC") "Upper limit for thermal comfort";

          Modelica.Blocks.Interfaces.RealInput u
            annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
          Modelica.Blocks.Interfaces.RealOutput y
            annotation (Placement(transformation(extent={{100,-12},{126,14}})));
          Modelica.Blocks.Interfaces.RealInput a annotation (Placement(transformation(
                extent={{-20,-20},{20,20}},
                rotation=-90,
                origin={0,120})));
        equation
          if a > 0.5 then
            u=y;
          else
            y=273.15+50;
          end if;
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                  Rectangle(
                  extent={{-100,100},{100,-100}},
                  lineColor={28,108,200},
                  lineThickness=1), Text(
                  extent={{-68,50},{60,-58}},
                  lineColor={28,108,200},
                  lineThickness=1,
                  textString="If open
")}),                                                                    Diagram(
                coordinateSystem(preserveAspectRatio=false)));
        end if_open;
      end Baseclasses;

      model dp_ctrl_pumpcoolinghex
        Modelica.Blocks.Interfaces.RealInput valVNC
          annotation (Placement(transformation(extent={{-140,66},{-100,106}})));
        Modelica.Blocks.Interfaces.RealInput valVSC
          annotation (Placement(transformation(extent={{-140,18},{-100,58}})));
        Modelica.Blocks.Interfaces.RealInput valahuVNC
          annotation (Placement(transformation(extent={{-140,-40},{-100,0}})));
        Modelica.Blocks.Interfaces.RealInput valahuVSC
          annotation (Placement(transformation(extent={{-140,-100},{-100,-60}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-70,72},{-50,92}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-70,28},{-50,48}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-68,-28},{-48,-8}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold3(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-68,-90},{-48,-70}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=4)
          annotation (Placement(transformation(extent={{4,-4},{16,8}})));
        Modelica.Blocks.Math.BooleanToReal booleanToReal(realTrue=1, realFalse=0)
          annotation (Placement(transformation(extent={{28,-10},{48,10}})));
        Modelica.Blocks.Math.MultiProduct multiProduct(nu=2)
          annotation (Placement(transformation(extent={{60,-4},{72,8}})));
        Modelica.Blocks.Interfaces.RealInput dp1_coolinghex annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={52,120})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-12},{124,12}})));
        Modelica.Blocks.Nonlinear.Limiter limiter(uMax=100000, uMin=0.0001)
          annotation (Placement(transformation(extent={{80,8},{94,-6}})));
      equation
        connect(valahuVSC, greaterEqualThreshold3.u)
          annotation (Line(points={{-120,-80},{-70,-80}}, color={0,0,127}));
        connect(valahuVNC, greaterEqualThreshold2.u) annotation (Line(points={{
                -120,-20},{-90,-20},{-90,-18},{-70,-18}}, color={0,0,127}));
        connect(valVSC, greaterEqualThreshold1.u) annotation (Line(points={{-120,
                38},{-96,38},{-96,38},{-72,38}}, color={0,0,127}));
        connect(valVNC, greaterEqualThreshold.u) annotation (Line(points={{-120,
                86},{-96,86},{-96,82},{-72,82}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, or1.u[1]) annotation (Line(points={{-49,
                82},{-22,82},{-22,5.15},{4,5.15}}, color={255,0,255}));
        connect(greaterEqualThreshold1.y, or1.u[2]) annotation (Line(points={{-49,
                38},{-22,38},{-22,3.05},{4,3.05}}, color={255,0,255}));
        connect(greaterEqualThreshold2.y, or1.u[3]) annotation (Line(points={{-47,
                -18},{-20,-18},{-20,0.95},{4,0.95}}, color={255,0,255}));
        connect(greaterEqualThreshold3.y, or1.u[4]) annotation (Line(points={{-47,
                -80},{-22,-80},{-22,-1.15},{4,-1.15}}, color={255,0,255}));
        connect(or1.y, booleanToReal.u)
          annotation (Line(points={{16.9,2},{22,2},{22,0},{26,0}},
                                                     color={255,0,255}));
        connect(booleanToReal.y, multiProduct.u[1]) annotation (Line(points={{49,0},{
                64,0},{64,4.1},{60,4.1}},     color={0,0,127}));
        connect(dp1_coolinghex, multiProduct.u[2]) annotation (Line(points={{52,120},
                {54,120},{54,-0.1},{60,-0.1}},      color={0,0,127}));
        connect(multiProduct.y, limiter.u) annotation (Line(points={{73.02,2},{76,
                2},{76,1},{78.6,1}}, color={0,0,127}));
        connect(limiter.y, y) annotation (Line(points={{94.7,1},{98.35,1},{98.35,
                0},{112,0}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-50,34},{54,-46}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="dp_ctrl_coolinghex
")}),   Diagram(coordinateSystem(preserveAspectRatio=false)));
      end dp_ctrl_pumpcoolinghex;

      model dp_ctrl_pumpBF
        "Borefield pump is only on when heat needs to be extracted or injected"
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{100,-12},{124,12}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{76,-6},{88,6}})));
        Modelica.Blocks.Logical.Switch switch_H_C
          annotation (Placement(transformation(extent={{38,-8},{58,12}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-140,10},{-100,50}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,-46},{-100,-6}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-138,66},{-98,106}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{-4,34},{16,54}})));
        Modelica.Blocks.Sources.RealExpression on(y=1)
          annotation (Placement(transformation(extent={{-50,72},{-30,92}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-48,14},{-28,34}})));
        Modelica.Blocks.Sources.RealExpression on_PC(y=1)
          annotation (Placement(transformation(extent={{-28,-34},{-8,-14}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{-70,-10},{-50,10}})));
      equation
        connect(realToInteger.y, y)
          annotation (Line(points={{88.6,0},{112,0}}, color={255,127,0}));
        connect(switch_H_C.y, realToInteger.u) annotation (Line(points={{59,2},{
                68,2},{68,0},{74.8,0}}, color={0,0,127}));
        connect(HPon, switch_HP.u2) annotation (Line(points={{-118,86},{-63,86},{
                -63,44},{-6,44}}, color={255,0,255}));
        connect(on.y, switch_HP.u1) annotation (Line(points={{-29,82},{-18,82},{
                -18,52},{-6,52}}, color={0,0,127}));
        connect(switch_HP.y, switch_H_C.u1) annotation (Line(points={{17,44},{26,
                44},{26,10},{36,10}}, color={0,0,127}));
        connect(off.y, switch_HP.u3)
          annotation (Line(points={{-27,24},{-6,24},{-6,36}}, color={0,0,127}));
        connect(on_PC.y, switch_H_C.u3) annotation (Line(points={{-7,-24},{16,-24},
                {16,-6},{36,-6}}, color={0,0,127}));
        connect(and1.y, switch_H_C.u2) annotation (Line(points={{-49,0},{-6,0},{
                -6,2},{36,2}}, color={255,0,255}));
        connect(VN_needH, and1.u1) annotation (Line(points={{-120,30},{-98,30},{
                -98,0},{-72,0}}, color={255,0,255}));
        connect(VS_needH, and1.u2) annotation (Line(points={{-120,-26},{-96,-26},
                {-96,-8},{-72,-8}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-60,46},{64,-48}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="Pump BF ctrl")}), Diagram(coordinateSystem(
                preserveAspectRatio=false)));
      end dp_ctrl_pumpBF;

      model dp_ctrl_pumpBF_real
        "Borefield pump is only on when heat needs to be extracted or injected"
        Modelica.Blocks.Logical.Switch switch_HCVN
          annotation (Placement(transformation(extent={{64,-10},{84,10}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-140,10},{-100,50}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,-46},{-100,-6}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-138,66},{-98,106}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{-28,52},{-8,72}})));
        Modelica.Blocks.Sources.RealExpression on(y=5e4*(33/100))
          annotation (Placement(transformation(extent={{-84,82},{-64,102}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-88,14},{-68,34}})));
        Modelica.Blocks.Sources.RealExpression on_PC(y=5e4*(33/100))
          annotation (Placement(transformation(extent={{-52,-76},{-32,-56}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));
        Modelica.Blocks.Logical.Switch switch_H_C1
          annotation (Placement(transformation(extent={{-18,-82},{2,-62}})));
        Modelica.Blocks.Interfaces.RealInput pumpGCon
          annotation (Placement(transformation(extent={{-142,-92},{-102,-52}})));
        Modelica.Blocks.Logical.Switch switch_HCVS
          annotation (Placement(transformation(extent={{30,34},{50,54}})));
        Modelica.Blocks.Logical.Switch switch_HCVS1
          annotation (Placement(transformation(extent={{32,-62},{52,-42}})));
        Modelica.Blocks.Logical.Switch switch_H_C2
          annotation (Placement(transformation(extent={{-12,-10},{8,10}})));
        Modelica.Blocks.Logical.Switch switch_H_C3
          annotation (Placement(transformation(extent={{-48,-24},{-28,-4}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=25, uHigh=200)
          annotation (Placement(transformation(extent={{-90,-82},{-70,-62}})));
      equation
        connect(HPon, switch_HP.u2) annotation (Line(points={{-118,86},{-63,86},{
                -63,62},{-30,62}},color={255,0,255}));
        connect(on.y, switch_HP.u1) annotation (Line(points={{-63,92},{-36,92},{
                -36,70},{-30,70}},color={0,0,127}));
        connect(off.y, switch_HP.u3)
          annotation (Line(points={{-67,24},{-30,24},{-30,54}},
                                                              color={0,0,127}));
        connect(on_PC.y, switch_H_C1.u1) annotation (Line(points={{-31,-66},{
                -30.5,-66},{-30.5,-64},{-20,-64}}, color={0,0,127}));
        connect(off.y, switch_H_C1.u3) annotation (Line(points={{-67,24},{-67,-53},
                {-20,-53},{-20,-80}}, color={0,0,127}));
        connect(switch_HCVN.y, y)
          annotation (Line(points={{85,0},{110,0}}, color={0,0,127}));
        connect(VN_needH, switch_HCVN.u2) annotation (Line(points={{-120,30},{46,
                30},{46,0},{62,0}}, color={255,0,255}));
        connect(VS_needH, switch_HCVS.u2) annotation (Line(points={{-120,-26},{4,
                -26},{4,44},{28,44}}, color={255,0,255}));
        connect(switch_HCVS.y, switch_HCVN.u1) annotation (Line(points={{51,44},{
                56,44},{56,8},{62,8}}, color={0,0,127}));
        connect(switch_HP.y, switch_HCVS.u1) annotation (Line(points={{-7,62},{12,
                62},{12,52},{28,52}}, color={0,0,127}));
        connect(VS_needH, switch_HCVS1.u2) annotation (Line(points={{-120,-26},{4,
                -26},{4,-52},{30,-52}}, color={255,0,255}));
        connect(switch_HCVS1.y, switch_HCVN.u3) annotation (Line(points={{53,-52},
                {56,-52},{56,-8},{62,-8}}, color={0,0,127}));
        connect(switch_H_C1.y, switch_HCVS1.u3) annotation (Line(points={{3,-72},
                {16,-72},{16,-60},{30,-60}}, color={0,0,127}));
        connect(switch_H_C2.y, switch_HCVS.u3) annotation (Line(points={{9,0},{9,
                19},{28,19},{28,36}}, color={0,0,127}));
        connect(switch_H_C2.y, switch_HCVS1.u1) annotation (Line(points={{9,0},{
                18,0},{18,-44},{30,-44}}, color={0,0,127}));
        connect(HPon, switch_H_C2.u2) annotation (Line(points={{-118,86},{-81,86},
                {-81,0},{-14,0}}, color={255,0,255}));
        connect(on.y, switch_H_C2.u1) annotation (Line(points={{-63,92},{-44,92},
                {-44,8},{-14,8}}, color={0,0,127}));
        connect(switch_H_C3.y, switch_H_C2.u3) annotation (Line(points={{-27,-14},
                {-24,-14},{-24,-8},{-14,-8}}, color={0,0,127}));
        connect(on.y, switch_H_C3.u1) annotation (Line(points={{-63,92},{-56,92},
                {-56,-6},{-50,-6}}, color={0,0,127}));
        connect(off.y, switch_H_C3.u3) annotation (Line(points={{-67,24},{-62,24},
                {-62,-22},{-50,-22}}, color={0,0,127}));
        connect(hysteresis.y, switch_H_C3.u2) annotation (Line(points={{-69,-72},
                {-60,-72},{-60,-14},{-50,-14}}, color={255,0,255}));
        connect(pumpGCon, hysteresis.u)
          annotation (Line(points={{-122,-72},{-92,-72}}, color={0,0,127}));
        connect(hysteresis.y, switch_H_C1.u2)
          annotation (Line(points={{-69,-72},{-20,-72}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-60,46},{64,-48}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="Pump BF ctrl")}), Diagram(coordinateSystem(
                preserveAspectRatio=false)));
      end dp_ctrl_pumpBF_real;

      model pumpBF_ctrl_noCST
        "Control BFpump when there is no cold storage tank"
        Modelica.Blocks.Logical.Switch switch_H_C
          annotation (Placement(transformation(extent={{-12,-28},{8,-8}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-140,10},{-100,50}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,-46},{-100,-6}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-138,66},{-98,106}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{-42,34},{-22,54}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-84,22},{-64,42}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-6},{120,14}})));
        Modelica.Blocks.Logical.Switch switch_H_C1
          annotation (Placement(transformation(extent={{24,-8},{44,12}})));
        Modelica.Blocks.Interfaces.RealInput pumpGCon
          annotation (Placement(transformation(extent={{-142,-92},{-102,-52}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(threshold=
             10)
          annotation (Placement(transformation(extent={{-92,-82},{-72,-62}})));
        Modelica.Blocks.Logical.Or or1
          annotation (Placement(transformation(extent={{-86,-4},{-66,16}})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=10000,
          Ti=300,
          yMax=16500,
          yMin=0) annotation (Placement(transformation(extent={{60,14},{80,-6}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={92,120})));
        Modelica.Blocks.Interfaces.RealInput BFm_nom annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-72,120})));
        Modelica.Blocks.Interfaces.RealInput mHC annotation (Placement(transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={40,122})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(threshold=
             0.0235)
          annotation (Placement(transformation(extent={{10,10},{-10,-10}},
              rotation=90,
              origin={4,74})));
        Modelica.Blocks.Logical.Switch switch_H_C2
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={4,36})));
      equation
        connect(HPon, switch_HP.u2) annotation (Line(points={{-118,86},{-79,86},{-79,44},
                {-44,44}},        color={255,0,255}));
        connect(switch_HP.y, switch_H_C.u1) annotation (Line(points={{-21,44},{-14,44},
                {-14,-10}},           color={0,0,127}));
        connect(off.y, switch_HP.u3)
          annotation (Line(points={{-63,32},{-44,32},{-44,36}},
                                                              color={0,0,127}));
        connect(pumpGCon, greaterEqualThreshold1.u)
          annotation (Line(points={{-122,-72},{-94,-72}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, switch_H_C1.u2) annotation (Line(points={{-71,-72},
                {16,-72},{16,2},{22,2}},             color={255,0,255}));
        connect(or1.y, switch_H_C.u2) annotation (Line(points={{-65,6},{-56,6},{-56,-18},
                {-14,-18}},
                        color={255,0,255}));
        connect(VN_needH, or1.u1) annotation (Line(points={{-120,30},{-95,30},{-95,6},
                {-88,6}}, color={255,0,255}));
        connect(VS_needH, or1.u2) annotation (Line(points={{-120,-26},{-94,-26},{-94,-2},
                {-88,-2}}, color={255,0,255}));
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{70,16},{70,58},{92,58},{92,120}},
                                                      color={0,0,127}));
        connect(PIDBF.y, y)
          annotation (Line(points={{81,4},{110,4}}, color={0,0,127}));
        connect(switch_H_C1.y, PIDBF.u_s)
          annotation (Line(points={{45,2},{46,2},{46,4},{58,4}}, color={0,0,127}));
        connect(switch_H_C1.u3, switch_H_C.y) annotation (Line(points={{22,-6},{14,-6},
                {14,-18},{9,-18}}, color={0,0,127}));
        connect(BFm_nom, switch_HP.u1) annotation (Line(points={{-72,120},{-72,86},
                {-44,86},{-44,52}},
                               color={0,0,127}));
        connect(off.y, switch_H_C.u3) annotation (Line(points={{-63,32},{-50,32},{-50,
                -26},{-14,-26}}, color={0,0,127}));
        connect(switch_H_C2.y, switch_H_C1.u1)
          annotation (Line(points={{4,25},{4,10},{22,10}}, color={0,0,127}));
        connect(greaterEqualThreshold2.y, switch_H_C2.u2)
          annotation (Line(points={{4,63},{4,48}}, color={255,0,255}));
        connect(switch_H_C2.u1, mHC)
          annotation (Line(points={{12,48},{40,48},{40,122}}, color={0,0,127}));
        connect(BFm_nom, switch_H_C2.u3) annotation (Line(points={{-72,120},{-9,
                120},{-9,48},{-4,48}}, color={0,0,127}));
        connect(greaterEqualThreshold2.u, mHC)
          annotation (Line(points={{4,86},{4,122},{40,122}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-60,46},{64,-48}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="Pump BF ctrl no CST
")}),                                         Diagram(coordinateSystem(
                preserveAspectRatio=false)));
      end pumpBF_ctrl_noCST;

      model pumpGH_ctrl_noCST "Control pumpGH when there is no cold storage tank"
        Modelica.Blocks.Logical.Switch switch_H_C
          annotation (Placement(transformation(extent={{-12,-28},{8,-8}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-140,10},{-100,50}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,-46},{-100,-6}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-138,66},{-98,106}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{-42,34},{-22,54}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-84,22},{-64,42}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-6},{120,14}})));
        Modelica.Blocks.Logical.Switch switch_H_C1
          annotation (Placement(transformation(extent={{24,-8},{44,12}})));
        Modelica.Blocks.Interfaces.RealInput pumpGCon
          annotation (Placement(transformation(extent={{-142,-92},{-102,-52}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(threshold=
             10)
          annotation (Placement(transformation(extent={{-94,-82},{-74,-62}})));
        Modelica.Blocks.Logical.Or or1
          annotation (Placement(transformation(extent={{-86,-4},{-66,16}})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=60,
          Ti=300,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{58,16},{78,-4}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={90,120})));
        Modelica.Blocks.Interfaces.RealInput BFm_nom annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-86,122})));
        Modelica.Blocks.Interfaces.RealInput mHC annotation (Placement(transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={50,120})));
        Modelica.Blocks.Logical.Switch switch_H_C2
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={2,40})));
        Modelica.Blocks.Interfaces.RealInput mBF_nom annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={-34,120})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(threshold=
             0.0235)
          annotation (Placement(transformation(extent={{10,10},{-10,-10}},
              rotation=90,
              origin={4,78})));
      equation
        connect(HPon, switch_HP.u2) annotation (Line(points={{-118,86},{-79,86},{-79,44},
                {-44,44}},        color={255,0,255}));
        connect(switch_HP.y, switch_H_C.u1) annotation (Line(points={{-21,44},{-14,44},
                {-14,-10}},           color={0,0,127}));
        connect(off.y, switch_HP.u3)
          annotation (Line(points={{-63,32},{-44,32},{-44,36}},
                                                              color={0,0,127}));
        connect(pumpGCon, greaterEqualThreshold1.u)
          annotation (Line(points={{-122,-72},{-96,-72}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, switch_H_C1.u2) annotation (Line(points={{-73,-72},
                {16,-72},{16,2},{22,2}},             color={255,0,255}));
        connect(or1.y, switch_H_C.u2) annotation (Line(points={{-65,6},{-56,6},{-56,-18},
                {-14,-18}},
                        color={255,0,255}));
        connect(VN_needH, or1.u1) annotation (Line(points={{-120,30},{-95,30},{-95,6},
                {-88,6}}, color={255,0,255}));
        connect(VS_needH, or1.u2) annotation (Line(points={{-120,-26},{-94,-26},{-94,-2},
                {-88,-2}}, color={255,0,255}));
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{68,18},{68,70},{90,70},{90,120}},
                                                      color={0,0,127}));
        connect(PIDBF.y, y)
          annotation (Line(points={{79,6},{94,6},{94,4},{110,4}},
                                                    color={0,0,127}));
        connect(switch_H_C1.y, PIDBF.u_s)
          annotation (Line(points={{45,2},{46,2},{46,6},{56,6}}, color={0,0,127}));
        connect(switch_H_C1.u3, switch_H_C.y) annotation (Line(points={{22,-6},{14,-6},
                {14,-18},{9,-18}}, color={0,0,127}));
        connect(BFm_nom, switch_HP.u1) annotation (Line(points={{-86,122},{-86,86},
                {-44,86},{-44,52}},
                               color={0,0,127}));
        connect(off.y, switch_H_C.u3) annotation (Line(points={{-63,32},{-50,32},{-50,
                -26},{-14,-26}}, color={0,0,127}));
        connect(switch_H_C1.u1, switch_H_C2.y)
          annotation (Line(points={{22,10},{2,10},{2,29}}, color={0,0,127}));
        connect(switch_H_C2.u1, mHC)
          annotation (Line(points={{10,52},{50,52},{50,120}}, color={0,0,127}));
        connect(mBF_nom, switch_H_C2.u3) annotation (Line(points={{-34,120},{-34,
                68},{-20,68},{-20,52},{-6,52}}, color={0,0,127}));
        connect(greaterEqualThreshold2.y, switch_H_C2.u2)
          annotation (Line(points={{4,67},{4,52},{2,52}}, color={255,0,255}));
        connect(BFm_nom, greaterEqualThreshold2.u)
          annotation (Line(points={{-86,122},{4,122},{4,90}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-60,46},{64,-48}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="Pump BF ctrl no CST
")}),                                         Diagram(coordinateSystem(
                preserveAspectRatio=false)));
      end pumpGH_ctrl_noCST;

      model pumpBF_ctrl_noCST2
        "Control BFpump when there is no cold storage tank"
        Modelica.Blocks.Logical.Switch switch_H_C
          annotation (Placement(transformation(extent={{-12,-28},{8,-8}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-140,10},{-100,50}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,-46},{-100,-6}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-138,66},{-98,106}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{-42,34},{-22,54}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-84,22},{-64,42}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-6},{120,14}})));
        Modelica.Blocks.Logical.Switch switch_H_C1
          annotation (Placement(transformation(extent={{24,-8},{44,12}})));
        Modelica.Blocks.Interfaces.RealInput pumpGCon
          annotation (Placement(transformation(extent={{-142,-92},{-102,-52}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(threshold=
             10)
          annotation (Placement(transformation(extent={{-92,-82},{-72,-62}})));
        Modelica.Blocks.Logical.Or or1
          annotation (Placement(transformation(extent={{-86,-4},{-66,16}})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=10000,
          Ti=300,
          yMax=16500,
          yMin=0) annotation (Placement(transformation(extent={{60,14},{80,-6}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={92,120})));
        Modelica.Blocks.Interfaces.RealInput BFm_nom annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-72,120})));
        Modelica.Blocks.Interfaces.RealInput mHC annotation (Placement(transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={40,122})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(threshold=
             0.0235)
          annotation (Placement(transformation(extent={{10,10},{-10,-10}},
              rotation=90,
              origin={4,74})));
        Modelica.Blocks.Logical.Switch switch_H_C2
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={4,36})));
      equation
        connect(HPon, switch_HP.u2) annotation (Line(points={{-118,86},{-79,86},{-79,44},
                {-44,44}},        color={255,0,255}));
        connect(switch_HP.y, switch_H_C.u1) annotation (Line(points={{-21,44},{-14,44},
                {-14,-10}},           color={0,0,127}));
        connect(off.y, switch_HP.u3)
          annotation (Line(points={{-63,32},{-44,32},{-44,36}},
                                                              color={0,0,127}));
        connect(pumpGCon, greaterEqualThreshold1.u)
          annotation (Line(points={{-122,-72},{-94,-72}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, switch_H_C1.u2) annotation (Line(points={{-71,-72},
                {16,-72},{16,2},{22,2}},             color={255,0,255}));
        connect(or1.y, switch_H_C.u2) annotation (Line(points={{-65,6},{-56,6},{-56,-18},
                {-14,-18}},
                        color={255,0,255}));
        connect(VN_needH, or1.u1) annotation (Line(points={{-120,30},{-95,30},{-95,6},
                {-88,6}}, color={255,0,255}));
        connect(VS_needH, or1.u2) annotation (Line(points={{-120,-26},{-94,-26},{-94,-2},
                {-88,-2}}, color={255,0,255}));
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{70,16},{70,58},{92,58},{92,120}},
                                                      color={0,0,127}));
        connect(PIDBF.y, y)
          annotation (Line(points={{81,4},{110,4}}, color={0,0,127}));
        connect(switch_H_C1.y, PIDBF.u_s)
          annotation (Line(points={{45,2},{46,2},{46,4},{58,4}}, color={0,0,127}));
        connect(switch_H_C1.u3, switch_H_C.y) annotation (Line(points={{22,-6},{14,-6},
                {14,-18},{9,-18}}, color={0,0,127}));
        connect(BFm_nom, switch_HP.u1) annotation (Line(points={{-72,120},{-72,86},
                {-44,86},{-44,52}},
                               color={0,0,127}));
        connect(off.y, switch_H_C.u3) annotation (Line(points={{-63,32},{-50,32},{-50,
                -26},{-14,-26}}, color={0,0,127}));
        connect(switch_H_C2.y, switch_H_C1.u1)
          annotation (Line(points={{4,25},{4,10},{22,10}}, color={0,0,127}));
        connect(greaterEqualThreshold2.y, switch_H_C2.u2)
          annotation (Line(points={{4,63},{4,48}}, color={255,0,255}));
        connect(switch_H_C2.u1, mHC)
          annotation (Line(points={{12,48},{40,48},{40,122}}, color={0,0,127}));
        connect(BFm_nom, switch_H_C2.u3) annotation (Line(points={{-72,120},{-9,
                120},{-9,48},{-4,48}}, color={0,0,127}));
        connect(greaterEqualThreshold2.u, mHC)
          annotation (Line(points={{4,86},{4,122},{40,122}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-60,46},{64,-48}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="Pump BF ctrl no CST
")}),                                         Diagram(coordinateSystem(
                preserveAspectRatio=false)));
      end pumpBF_ctrl_noCST2;

      model dp_ctrl_TsupC_Ihydr4
        Modelica.Blocks.Math.Min min
          annotation (Placement(transformation(extent={{-22,24},{-2,44}})));
        Modelica.Blocks.Math.Min min1
          annotation (Placement(transformation(extent={{-30,-46},{-10,-26}})));
        Baseclasses.if_open if_open_TABSVN
          annotation (Placement(transformation(extent={{-78,58},{-58,78}})));
        Baseclasses.if_open if_open_TABSVS
          annotation (Placement(transformation(extent={{-76,16},{-56,36}})));
        Baseclasses.if_open if_open2
          annotation (Placement(transformation(extent={{-80,-20},{-60,-40}})));
        Baseclasses.if_open if_open3
          annotation (Placement(transformation(extent={{-76,-60},{-56,-80}})));
        Modelica.Blocks.Interfaces.RealInput TABSVN_us
          annotation (Placement(transformation(extent={{-140,56},{-100,96}})));
        Modelica.Blocks.Interfaces.RealInput TABSVS_us
          annotation (Placement(transformation(extent={{-140,8},{-100,48}})));
        Modelica.Blocks.Interfaces.RealInput AHUVN_us
          annotation (Placement(transformation(extent={{-140,-44},{-100,-4}})));
        Modelica.Blocks.Interfaces.RealInput AHUVS_us
          annotation (Placement(transformation(extent={{-140,-100},{-100,-60}})));
        Modelica.Blocks.Interfaces.RealInput valVNC annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={-70,120})));
        Modelica.Blocks.Interfaces.RealInput valVSC annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={4,120})));
        Modelica.Blocks.Interfaces.RealInput AHUVNvalC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=90,
              origin={0,-122})));
        Modelica.Blocks.Interfaces.RealInput AHUVSvalC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=90,
              origin={-66,-122})));
        Modelica.Blocks.Math.Min min2
          annotation (Placement(transformation(extent={{10,-16},{30,4}})));
        Modelica.Blocks.Interfaces.RealInput TsupC annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=90,
              origin={136,122})));
        IDEAS.Controls.Continuous.LimPID PIDpumpGC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-5000,
          Ti=300,
          yMax=60000,
          yMin=2,
          initType=Modelica.Blocks.Types.InitPID.InitialOutput,
          y_start=2)
          annotation (Placement(transformation(extent={{50,6},{70,-14}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{10,82},{22,94}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=4)
          annotation (Placement(transformation(extent={{36,-60},{48,-48}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-4,56},{8,68}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(
            threshold=0.5)
          annotation (Placement(transformation(extent={{-12,-74},{0,-62}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold3(
            threshold=0.5)
          annotation (Placement(transformation(extent={{8,-96},{20,-84}})));
        Modelica.Blocks.Logical.Switch switch1
          annotation (Placement(transformation(extent={{100,-18},{120,2}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=2) annotation (
            Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={58,-84})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{160,-16},{182,6}})));
      equation
        connect(valVNC, if_open_TABSVN.a) annotation (Line(points={{-70,120},{-70,
                80},{-68,80}}, color={0,0,127}));
        connect(TABSVN_us, if_open_TABSVN.u) annotation (Line(points={{-120,76},{
                -100,76},{-100,68},{-80,68}}, color={0,0,127}));
        connect(valVSC, if_open_TABSVS.a) annotation (Line(points={{4,120},{-32,
                120},{-32,38},{-66,38}}, color={0,0,127}));
        connect(TABSVS_us, if_open_TABSVS.u) annotation (Line(points={{-120,28},{
                -98,28},{-98,26},{-78,26}}, color={0,0,127}));
        connect(if_open_TABSVN.y, min.u1) annotation (Line(points={{-56.7,68.1},{
                -26.35,68.1},{-26.35,40},{-24,40}}, color={0,0,127}));
        connect(if_open_TABSVS.y, min.u2) annotation (Line(points={{-54.7,26.1},{
                -27.35,26.1},{-27.35,28},{-24,28}}, color={0,0,127}));
        connect(if_open3.a, AHUVSvalC)
          annotation (Line(points={{-66,-82},{-66,-122}}, color={0,0,127}));
        connect(AHUVNvalC, if_open2.a) annotation (Line(points={{0,-122},{-36,
                -122},{-36,-42},{-70,-42}}, color={0,0,127}));
        connect(AHUVN_us, if_open2.u) annotation (Line(points={{-120,-24},{-101,
                -24},{-101,-30},{-82,-30}}, color={0,0,127}));
        connect(AHUVS_us, if_open3.u) annotation (Line(points={{-120,-80},{-98,
                -80},{-98,-70},{-78,-70}}, color={0,0,127}));
        connect(if_open2.y, min1.u1) annotation (Line(points={{-58.7,-30.1},{
                -35.35,-30.1},{-35.35,-30},{-32,-30}}, color={0,0,127}));
        connect(if_open3.y, min1.u2) annotation (Line(points={{-54.7,-70.1},{
                -54.7,-46.05},{-32,-46.05},{-32,-42}}, color={0,0,127}));
        connect(min.y, min2.u1) annotation (Line(points={{-1,34},{10,34},{10,0},{
                8,0}}, color={0,0,127}));
        connect(min1.y, min2.u2) annotation (Line(points={{-9,-36},{4,-36},{4,-12},
                {8,-12}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, or1.u[1]) annotation (Line(points={{22.6,
                88},{32,88},{32,-50.85},{36,-50.85}}, color={255,0,255}));
        connect(valVSC, greaterEqualThreshold.u) annotation (Line(points={{4,120},
                {8,120},{8,88},{8.8,88}}, color={0,0,127}));
        connect(valVNC, greaterEqualThreshold1.u) annotation (Line(points={{-70,
                120},{-40,120},{-40,62},{-5.2,62}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, or1.u[2]) annotation (Line(points={{8.6,
                62},{36,62},{36,-52.95}}, color={255,0,255}));
        connect(AHUVSvalC, greaterEqualThreshold2.u) annotation (Line(points={{
                -66,-122},{-48,-122},{-48,-68},{-13.2,-68}}, color={0,0,127}));
        connect(AHUVNvalC, greaterEqualThreshold3.u) annotation (Line(points={{0,
                -122},{0,-107},{6.8,-107},{6.8,-90}}, color={0,0,127}));
        connect(greaterEqualThreshold2.y, or1.u[3]) annotation (Line(points={{0.6,
                -68},{26,-68},{26,-52},{36,-52},{36,-55.05}}, color={255,0,255}));
        connect(greaterEqualThreshold3.y, or1.u[4]) annotation (Line(points={{
                20.6,-90},{20.6,-72},{36,-72},{36,-57.15}}, color={255,0,255}));
        connect(or1.y, switch1.u2) annotation (Line(points={{48.9,-54},{84,-54},{
                84,-8},{98,-8}},   color={255,0,255}));
        connect(realExpression.y, switch1.u3) annotation (Line(points={{58,-73},{
                98,-73},{98,-16}}, color={0,0,127}));
        connect(TsupC, PIDpumpGC.u_m) annotation (Line(points={{136,122},{60,122},
                {60,8}},  color={0,0,127}));
        connect(min2.y, PIDpumpGC.u_s) annotation (Line(points={{31,-6},{39.5,-6},
                {39.5,-4},{48,-4}}, color={0,0,127}));
        connect(PIDpumpGC.y, switch1.u1) annotation (Line(points={{71,-4},{85.5,
                -4},{85.5,0},{98,0}}, color={0,0,127}));
        connect(switch1.y, y) annotation (Line(points={{121,-8},{132,-8},{132,-5},
                {171,-5}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                  -100},{160,100}}),      graphics={Rectangle(
                extent={{-98,100},{160,-102}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-66,56},{58,-74}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="dp_ctrl PumpGC
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  160,100}})));
      end dp_ctrl_TsupC_Ihydr4;
    end dp_ctrl;

    package HP_ctrl "All HP controllers"
      model HP_ctrl_DC
        "Model of the controller that controls the heatpump and the pump in front of the heat pump. It is controlled in order to realize the decoupled HP control"
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-200,76},{-160,116}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-200,-68},{-160,-28}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{80,-30},{100,-10}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-62,-92},{-42,-72}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP
          annotation (Placement(transformation(extent={{56,2},{76,22}})));
        Modelica.Blocks.Sources.RealExpression charge_HP(y=1)
          annotation (Placement(transformation(extent={{-80,42},{-60,62}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP1
          annotation (Placement(transformation(extent={{18,-56},{38,-36}})));
        Modelica.Blocks.Logical.And and3
          annotation (Placement(transformation(extent={{-18,-56},{2,-36}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(
          uLow=273.15 + 23.5,
          uHigh=273.15 + 26,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-60,14},{-40,34}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{8,8},{16,16}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(uLow=273.15 + 23.5, uHigh=
              273.15 + 26)
          annotation (Placement(transformation(extent={{-66,-20},{-46,0}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-22,-22},{-14,-14}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{112,-26},{124,-14}})));
        Modelica.Blocks.Logical.Switch switch_charge_MODE
          annotation (Placement(transformation(extent={{22,166},{42,186}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE(y=1)
          annotation (Placement(transformation(extent={{-68,178},{-48,198}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP2
          annotation (Placement(transformation(extent={{-30,148},{-10,168}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE1(y=2)
          annotation (Placement(transformation(extent={{-84,154},{-64,174}})));
        Modelica.Blocks.Sources.RealExpression off_MODE(y=3)
          annotation (Placement(transformation(extent={{-82,136},{-62,156}})));
        Modelica.Blocks.Logical.Switch MODE
          annotation (Placement(transformation(extent={{98,154},{118,174}})));
        Modelica.Blocks.Sources.RealExpression MODE_off(y=4)
          annotation (Placement(transformation(extent={{22,116},{42,136}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{140,-12},{164,12}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,60},{166,86}})));
        Modelica.Blocks.Interfaces.BooleanInput u2
          annotation (Placement(transformation(extent={{-198,32},{-158,72}})));
        Modelica.Blocks.Interfaces.BooleanInput u3
          annotation (Placement(transformation(extent={{-200,-22},{-160,18}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-134,8},{-122,20}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{112,-68},{132,-48}})));
        Modelica.Blocks.Interfaces.BooleanOutput y2
          annotation (Placement(transformation(extent={{142,-72},{170,-44}})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{-41,-82},{54,-82},
                {54,-28},{78,-28}},           color={0,0,127}));
        connect(switch_charge_HP.y,switch_H_C_HP. u1) annotation (Line(points={{77,12},
                {76,12},{76,-12},{78,-12}},        color={0,0,127}));
        connect(charge_HP.y,switch_charge_HP. u1) annotation (Line(points={{-59,52},{10,
                52},{10,20},{54,20}},          color={0,0,127}));
        connect(switch_charge_HP1.y,switch_charge_HP. u3) annotation (Line(points={{39,-46},
                {39,-4},{54,-4},{54,4}},                color={0,0,127}));
        connect(charge_HP.y,switch_charge_HP1. u1) annotation (Line(points={{-59,52},{
                -6,52},{-6,-38},{16,-38}},        color={0,0,127}));
        connect(ctrl_HPC.y,switch_charge_HP1. u3) annotation (Line(points={{-41,-82},{
                -41,-72},{16,-72},{16,-54}},       color={0,0,127}));
        connect(and3.y,switch_charge_HP1. u2) annotation (Line(points={{3,-46},{16,-46}},
                                               color={255,0,255}));
        connect(hysteresis.y,not1. u) annotation (Line(points={{-39,24},{-22.5,24},{-22.5,
                12},{6.4,12}},             color={255,0,255}));
        connect(hysteresis1.y,not2. u) annotation (Line(points={{-45,-10},{-30,
                -10},{-30,-18},{-23.6,-18}},
                                          color={255,0,255}));
        connect(hysteresis.y,and3. u2) annotation (Line(points={{-39,24},{-26,24},{-26,
                -54},{-20,-54}},  color={255,0,255}));
        connect(not2.y,and3. u1) annotation (Line(points={{-13.2,-18},{-13.2,-32},{-20,
                -32},{-20,-46}},  color={255,0,255}));
        connect(not1.y,switch_charge_HP. u2)
          annotation (Line(points={{16.8,12},{54,12}},       color={255,0,255}));
        connect(switch_H_C_HP.y,realToInteger. u) annotation (Line(points={{101,-20},{
                110.8,-20}},                              color={0,0,127}));
        connect(charge_MODE.y,switch_charge_MODE. u1) annotation (Line(points={{-47,188},
                {-16,188},{-16,184},{20,184}},     color={0,0,127}));
        connect(switch_charge_HP2.y,switch_charge_MODE. u3) annotation (Line(points={{-9,158},
                {2.5,158},{2.5,168},{20,168}},                 color={0,0,127}));
        connect(charge_MODE1.y,switch_charge_HP2. u1)
          annotation (Line(points={{-63,164},{-50,164},{-50,166},{-32,166}},
                                                         color={0,0,127}));
        connect(off_MODE.y,switch_charge_HP2. u3) annotation (Line(points={{-61,146},{
                -54,146},{-54,150},{-32,150}}, color={0,0,127}));
        connect(switch_charge_MODE.y,MODE. u1) annotation (Line(points={{43,176},{70,176},
                {70,172},{96,172}},          color={0,0,127}));
        connect(MODE_off.y,MODE. u3) annotation (Line(points={{43,126},{69.5,126},{69.5,
                156},{96,156}}, color={0,0,127}));
        connect(u, hysteresis.u) annotation (Line(points={{-180,96},{-96,96},{-96,
                24},{-62,24}},
                           color={0,0,127}));
        connect(u1, hysteresis1.u) annotation (Line(points={{-180,-48},{-91,-48},
                {-91,-10},{-68,-10}},
                                 color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{124.6,-20},{134,-20},{134,
                0},{152,0}}, color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{101,-20},{106,-20},
                {106,73},{153,73}}, color={0,0,127}));
        connect(and3.y, switch_charge_HP2.u2) annotation (Line(points={{3,-46},{-14,-46},
                {-14,158},{-32,158}},          color={255,0,255}));
        connect(not1.y, switch_charge_MODE.u2) annotation (Line(points={{16.8,12},{20,
                12},{20,176}},              color={255,0,255}));
        connect(u2, or1.u[1]) annotation (Line(points={{-178,52},{-156,52},{-156,
                16.1},{-134,16.1}}, color={255,0,255}));
        connect(u3, or1.u[2]) annotation (Line(points={{-180,-2},{-156,-2},{-156,
                11.9},{-134,11.9}}, color={255,0,255}));
        connect(or1.y, MODE.u2) annotation (Line(points={{-121.1,14},{-9.55,14},{-9.55,
                164},{96,164}},         color={255,0,255}));
        connect(or1.y, switch_H_C_HP.u2) annotation (Line(points={{-121.1,14},{
                -22,14},{-22,-20},{78,-20}}, color={255,0,255}));
        connect(switch_H_C_HP.y, greaterEqualThreshold.u) annotation (Line(points=
               {{101,-20},{106,-20},{106,-58},{110,-58}}, color={0,0,127}));
        connect(y2, greaterEqualThreshold.y)
          annotation (Line(points={{156,-58},{133,-58}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},
                  {140,200}}),       graphics={Rectangle(
                extent={{-160,140},{140,-100}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-44,58},{74,-44}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl")}),
                                Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-160,-100},{140,200}})));
      end HP_ctrl_DC;

      model HP_ctrl_DC_VN_test
        "Model of the controller that controls the heatpump and the pump in front of the heat pump. It is controlled in order to realize the decoupled HP control"
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-144,160},{-104,200}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-138,-68},{-98,-28}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{90,74},{110,94}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-58,10},{-38,30}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP
          annotation (Placement(transformation(extent={{64,108},{84,128}})));
        Modelica.Blocks.Sources.RealExpression charge_HP(y=1)
          annotation (Placement(transformation(extent={{-68,116},{-48,136}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP1
          annotation (Placement(transformation(extent={{30,54},{50,74}})));
        Modelica.Blocks.Logical.And and3
          annotation (Placement(transformation(extent={{-4,28},{16,48}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(
          uLow=273.15 + 25,
          uHigh=273.15 + 30,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-48,88},{-28,108}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{20,82},{28,90}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(uLow=273.15 + 25, uHigh=273.15 +
              30)
          annotation (Placement(transformation(extent={{-56,54},{-36,74}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-10,52},{-2,60}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{162,-52},{174,-40}})));
        Modelica.Blocks.Logical.Switch switch_charge_MODE
          annotation (Placement(transformation(extent={{48,178},{68,198}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE(y=1)
          annotation (Placement(transformation(extent={{-6,182},{14,202}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP2
          annotation (Placement(transformation(extent={{2,152},{22,172}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE1(y=2)
          annotation (Placement(transformation(extent={{-52,158},{-32,178}})));
        Modelica.Blocks.Sources.RealExpression off_MODE(y=3)
          annotation (Placement(transformation(extent={{-50,140},{-30,160}})));
        Modelica.Blocks.Logical.Switch MODE
          annotation (Placement(transformation(extent={{168,166},{188,186}})));
        Modelica.Blocks.Sources.RealExpression MODE_off(y=4)
          annotation (Placement(transformation(extent={{120,150},{140,170}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{200,-70},{248,-22}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{200,110},{238,148}})));
        Modelica.Blocks.Interfaces.BooleanInput u2
          annotation (Placement(transformation(extent={{-142,50},{-102,90}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP1
          annotation (Placement(transformation(extent={{120,-56},{140,-36}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP3
          annotation (Placement(transformation(extent={{54,-24},{74,-4}})));
        Modelica.Blocks.Sources.RealExpression charge_HP1(y=1)
          annotation (Placement(transformation(extent={{-34,-16},{-14,4}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP4
          annotation (Placement(transformation(extent={{24,-56},{44,-36}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC1(y=1)
          annotation (Placement(transformation(extent={{86,-84},{106,-64}})));
        Modelica.Blocks.Sources.RealExpression charge_HP2(y=1)
          annotation (Placement(transformation(extent={{-28,-68},{-8,-48}})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{-37,20},{
                66,20},{66,76},{88,76}},      color={0,0,127}));
        connect(switch_charge_HP.y,switch_H_C_HP. u1) annotation (Line(points={{85,118},
                {88,118},{88,92}},                 color={0,0,127}));
        connect(charge_HP.y,switch_charge_HP. u1) annotation (Line(points={{-47,126},
                {62,126}},                     color={0,0,127}));
        connect(switch_charge_HP1.y,switch_charge_HP. u3) annotation (Line(points={{51,64},
                {51,70},{62,70},{62,110}},              color={0,0,127}));
        connect(charge_HP.y,switch_charge_HP1. u1) annotation (Line(points={{-47,126},
                {6,126},{6,72},{28,72}},          color={0,0,127}));
        connect(and3.y,switch_charge_HP1. u2) annotation (Line(points={{17,38},{
                22,38},{22,64},{28,64}},       color={255,0,255}));
        connect(hysteresis.y,not1. u) annotation (Line(points={{-27,98},{-10.5,98},
                {-10.5,86},{18.4,86}},     color={255,0,255}));
        connect(hysteresis1.y,not2. u) annotation (Line(points={{-35,64},{-18,64},
                {-18,56},{-11.6,56}},     color={255,0,255}));
        connect(hysteresis.y,and3. u2) annotation (Line(points={{-27,98},{-14,98},
                {-14,30},{-6,30}},color={255,0,255}));
        connect(not2.y,and3. u1) annotation (Line(points={{-1.2,56},{-1.2,42},{-6,
                42},{-6,38}},     color={255,0,255}));
        connect(not1.y,switch_charge_HP. u2)
          annotation (Line(points={{28.8,86},{46,86},{46,118},{62,118}},
                                                             color={255,0,255}));
        connect(charge_MODE.y,switch_charge_MODE. u1) annotation (Line(points={{15,192},
                {20,192},{20,196},{46,196}},       color={0,0,127}));
        connect(switch_charge_HP2.y,switch_charge_MODE. u3) annotation (Line(points={{23,162},
                {38.5,162},{38.5,180},{46,180}},               color={0,0,127}));
        connect(charge_MODE1.y,switch_charge_HP2. u1)
          annotation (Line(points={{-31,168},{-18,168},{-18,170},{0,170}},
                                                         color={0,0,127}));
        connect(off_MODE.y,switch_charge_HP2. u3) annotation (Line(points={{-29,150},
                {-12,150},{-12,154},{0,154}},  color={0,0,127}));
        connect(switch_charge_MODE.y,MODE. u1) annotation (Line(points={{69,188},
                {140,188},{140,184},{166,184}},
                                             color={0,0,127}));
        connect(MODE_off.y,MODE. u3) annotation (Line(points={{141,160},{145.5,
                160},{145.5,168},{166,168}},
                                color={0,0,127}));
        connect(u, hysteresis.u) annotation (Line(points={{-124,180},{-84,180},{
                -84,98},{-50,98}},
                           color={0,0,127}));
        connect(u1, hysteresis1.u) annotation (Line(points={{-118,-48},{-79,-48},
                {-79,64},{-58,64}},
                                 color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{174.6,-46},{224,-46}},
                             color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{111,84},{118,84},{
                118,129},{219,129}}, color={0,0,127}));
        connect(and3.y, switch_charge_HP2.u2) annotation (Line(points={{17,38},{
                30,38},{30,162},{0,162}}, color={255,0,255}));
        connect(not1.y, switch_charge_MODE.u2) annotation (Line(points={{28.8,86},
                {46,86},{46,188}}, color={255,0,255}));
        connect(u2, MODE.u2) annotation (Line(points={{-122,70},{-4,70},{-4,176},
                {166,176}}, color={255,0,255}));
        connect(u2, switch_H_C_HP.u2) annotation (Line(points={{-122,70},{-10,70},
                {-10,84},{88,84}}, color={255,0,255}));
        connect(ctrl_HPC.y, switch_charge_HP1.u3) annotation (Line(points={{-37,
                20},{20,20},{20,56},{28,56}}, color={0,0,127}));
        connect(switch_H_C_HP.u2, switch_H_C_HP1.u2) annotation (Line(points={{88,
                84},{78,84},{78,-46},{118,-46}}, color={255,0,255}));
        connect(switch_H_C_HP1.y, realToInteger.u)
          annotation (Line(points={{141,-46},{160.8,-46}}, color={0,0,127}));
        connect(switch_charge_HP3.y, switch_H_C_HP1.u1) annotation (Line(points={
                {75,-14},{96,-14},{96,-38},{118,-38}}, color={0,0,127}));
        connect(not1.y, switch_charge_HP3.u2) annotation (Line(points={{28.8,86},
                {40,86},{40,-14},{52,-14}}, color={255,0,255}));
        connect(charge_HP1.y, switch_charge_HP3.u1)
          annotation (Line(points={{-13,-6},{52,-6}}, color={0,0,127}));
        connect(switch_charge_HP3.u3, switch_charge_HP4.y) annotation (Line(
              points={{52,-22},{46,-22},{46,-46},{45,-46}}, color={0,0,127}));
        connect(and3.y, switch_charge_HP4.u2) annotation (Line(points={{17,38},{
                22,38},{22,-46}}, color={255,0,255}));
        connect(ctrl_HPC1.y, switch_H_C_HP1.u3) annotation (Line(points={{107,-74},
                {112,-74},{112,-54},{118,-54}}, color={0,0,127}));
        connect(charge_HP2.y, switch_charge_HP4.u3) annotation (Line(points={{-7,
                -58},{6,-58},{6,-54},{22,-54}}, color={0,0,127}));
        connect(charge_HP1.y, switch_charge_HP4.u1) annotation (Line(points={{-13,
                -6},{6,-6},{6,-38},{22,-38}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                  -100},{200,200}}), graphics={Rectangle(
                extent={{-96,200},{198,-102}},
                lineColor={28,108,200},
                lineThickness=1), Text(
                extent={{-32,128},{124,-10}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl")}),
                                Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-100,-100},{200,200}})));
      end HP_ctrl_DC_VN_test;

      model HP_ctrl_stages_V
        "Model of the controller that controls the heatpump and the pump in front of the heat pump. It is controlled in order to realize the decoupled HP control"
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-200,76},{-160,116}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-200,-68},{-160,-28}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{80,-30},{100,-10}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-62,-92},{-42,-72}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP
          annotation (Placement(transformation(extent={{56,2},{76,22}})));
        Modelica.Blocks.Sources.RealExpression charge_HP(y=1)
          annotation (Placement(transformation(extent={{-88,172},{-68,192}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP1
          annotation (Placement(transformation(extent={{18,-56},{38,-36}})));
        Modelica.Blocks.Logical.And and3
          annotation (Placement(transformation(extent={{-18,-56},{2,-36}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(
          uLow=273.15 + 23.5,
          uHigh=273.15 + 26,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-60,14},{-40,34}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{8,8},{16,16}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(uLow=273.15 + 23.5, uHigh=
              273.15 + 26)
          annotation (Placement(transformation(extent={{-66,-20},{-46,0}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-22,-22},{-14,-14}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{112,-26},{124,-14}})));
        Modelica.Blocks.Logical.Switch switch_charge_MODE
          annotation (Placement(transformation(extent={{44,228},{64,248}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE(y=1)
          annotation (Placement(transformation(extent={{-46,240},{-26,260}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP2
          annotation (Placement(transformation(extent={{-8,210},{12,230}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE1(y=2)
          annotation (Placement(transformation(extent={{-62,216},{-42,236}})));
        Modelica.Blocks.Sources.RealExpression off_MODE(y=3)
          annotation (Placement(transformation(extent={{-60,198},{-40,218}})));
        Modelica.Blocks.Logical.Switch MODE
          annotation (Placement(transformation(extent={{120,216},{140,236}})));
        Modelica.Blocks.Sources.RealExpression MODE_off(y=4)
          annotation (Placement(transformation(extent={{44,178},{64,198}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{140,-12},{164,12}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,60},{166,86}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VN
          annotation (Placement(transformation(extent={{-198,32},{-158,72}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VS
          annotation (Placement(transformation(extent={{-200,-22},{-160,18}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-134,8},{-122,20}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{112,-68},{132,-48}})));
        Modelica.Blocks.Interfaces.BooleanOutput y2
          annotation (Placement(transformation(extent={{142,-72},{170,-44}})));
        Modelica.Blocks.Logical.Switch needH
          annotation (Placement(transformation(extent={{-46,152},{-26,172}})));
        Modelica.Blocks.Sources.RealExpression charge_HP1(y=0.5)
          annotation (Placement(transformation(extent={{-72,104},{-52,124}})));
        Modelica.Blocks.Sources.RealExpression charge_HP2(y=1)
          annotation (Placement(transformation(extent={{-50,36},{-30,56}})));
        Modelica.Blocks.Interfaces.BooleanInput VS
          annotation (Placement(transformation(extent={{-200,208},{-160,248}})));
        Modelica.Blocks.Interfaces.BooleanInput VN
          annotation (Placement(transformation(extent={{-202,136},{-162,176}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{-90,150},{-70,170}})));
        Modelica.Blocks.Logical.And and2
          annotation (Placement(transformation(extent={{-138,208},{-118,188}})));
        Modelica.Blocks.Logical.And and4
          annotation (Placement(transformation(extent={{-130,152},{-110,132}})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{-41,-82},{54,-82},
                {54,-28},{78,-28}},           color={0,0,127}));
        connect(switch_charge_HP.y,switch_H_C_HP. u1) annotation (Line(points={{77,12},
                {76,12},{76,-12},{78,-12}},        color={0,0,127}));
        connect(switch_charge_HP1.y,switch_charge_HP. u3) annotation (Line(points={{39,-46},
                {39,-4},{54,-4},{54,4}},                color={0,0,127}));
        connect(ctrl_HPC.y,switch_charge_HP1. u3) annotation (Line(points={{-41,-82},{
                -41,-72},{16,-72},{16,-54}},       color={0,0,127}));
        connect(and3.y,switch_charge_HP1. u2) annotation (Line(points={{3,-46},{16,-46}},
                                               color={255,0,255}));
        connect(hysteresis.y,not1. u) annotation (Line(points={{-39,24},{-22.5,24},{-22.5,
                12},{6.4,12}},             color={255,0,255}));
        connect(hysteresis1.y,not2. u) annotation (Line(points={{-45,-10},{-30,
                -10},{-30,-18},{-23.6,-18}},
                                          color={255,0,255}));
        connect(hysteresis.y,and3. u2) annotation (Line(points={{-39,24},{-26,24},{-26,
                -54},{-20,-54}},  color={255,0,255}));
        connect(not2.y,and3. u1) annotation (Line(points={{-13.2,-18},{-13.2,-32},{-20,
                -32},{-20,-46}},  color={255,0,255}));
        connect(not1.y,switch_charge_HP. u2)
          annotation (Line(points={{16.8,12},{54,12}},       color={255,0,255}));
        connect(switch_H_C_HP.y,realToInteger. u) annotation (Line(points={{101,-20},{
                110.8,-20}},                              color={0,0,127}));
        connect(charge_MODE.y,switch_charge_MODE. u1) annotation (Line(points={{-25,250},
                {6,250},{6,246},{42,246}},         color={0,0,127}));
        connect(switch_charge_HP2.y,switch_charge_MODE. u3) annotation (Line(points={{13,220},
                {24.5,220},{24.5,230},{42,230}},               color={0,0,127}));
        connect(charge_MODE1.y,switch_charge_HP2. u1)
          annotation (Line(points={{-41,226},{-28,226},{-28,228},{-10,228}},
                                                         color={0,0,127}));
        connect(off_MODE.y,switch_charge_HP2. u3) annotation (Line(points={{-39,208},{
                -32,208},{-32,212},{-10,212}}, color={0,0,127}));
        connect(switch_charge_MODE.y,MODE. u1) annotation (Line(points={{65,238},{92,238},
                {92,234},{118,234}},         color={0,0,127}));
        connect(MODE_off.y,MODE. u3) annotation (Line(points={{65,188},{91.5,188},{91.5,
                218},{118,218}},color={0,0,127}));
        connect(u, hysteresis.u) annotation (Line(points={{-180,96},{-96,96},{-96,
                24},{-62,24}},
                           color={0,0,127}));
        connect(u1, hysteresis1.u) annotation (Line(points={{-180,-48},{-91,-48},
                {-91,-10},{-68,-10}},
                                 color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{124.6,-20},{134,-20},{134,
                0},{152,0}}, color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{101,-20},{106,-20},
                {106,73},{153,73}}, color={0,0,127}));
        connect(and3.y, switch_charge_HP2.u2) annotation (Line(points={{3,-46},{8,-46},
                {8,220},{-10,220}},            color={255,0,255}));
        connect(not1.y, switch_charge_MODE.u2) annotation (Line(points={{16.8,12},{42,
                12},{42,238}},              color={255,0,255}));
        connect(HC_VN, or1.u[1]) annotation (Line(points={{-178,52},{-156,52},{-156,16.1},
                {-134,16.1}}, color={255,0,255}));
        connect(HC_VS, or1.u[2]) annotation (Line(points={{-180,-2},{-156,-2},{-156,11.9},
                {-134,11.9}}, color={255,0,255}));
        connect(or1.y, MODE.u2) annotation (Line(points={{-121.1,14},{12.45,14},{12.45,
                226},{118,226}},        color={255,0,255}));
        connect(or1.y, switch_H_C_HP.u2) annotation (Line(points={{-121.1,14},{
                -22,14},{-22,-20},{78,-20}}, color={255,0,255}));
        connect(switch_H_C_HP.y, greaterEqualThreshold.u) annotation (Line(points=
               {{101,-20},{106,-20},{106,-58},{110,-58}}, color={0,0,127}));
        connect(y2, greaterEqualThreshold.y)
          annotation (Line(points={{156,-58},{133,-58}}, color={255,0,255}));
        connect(charge_HP.y, needH.u1) annotation (Line(points={{-67,182},{-64,182},{-64,
                170},{-48,170}}, color={0,0,127}));
        connect(charge_HP1.y, needH.u3) annotation (Line(points={{-51,114},{-51,136},{
                -48,136},{-48,154}}, color={0,0,127}));
        connect(needH.y, switch_charge_HP.u1) annotation (Line(points={{-25,162},{-25,
                91},{54,91},{54,20}}, color={0,0,127}));
        connect(switch_charge_HP1.u1, needH.y) annotation (Line(points={{16,-38},{-12,
                -38},{-12,162},{-25,162}}, color={0,0,127}));
        connect(and1.y, needH.u2) annotation (Line(points={{-69,160},{-68,160},{-68,162},
                {-48,162}}, color={255,0,255}));
        connect(and2.y, and1.u1) annotation (Line(points={{-117,198},{-118,198},{-118,
                160},{-92,160}}, color={255,0,255}));
        connect(HC_VS, and2.u1) annotation (Line(points={{-180,-2},{-180,0},{-142,0},{
                -142,100},{-140,100},{-140,198}}, color={255,0,255}));
        connect(and4.y, and1.u2) annotation (Line(points={{-109,142},{-100.5,142},{-100.5,
                152},{-92,152}}, color={255,0,255}));
        connect(HC_VN, and4.u1) annotation (Line(points={{-178,52},{-132,52},{-132,142}},
              color={255,0,255}));
        connect(VN, and4.u2) annotation (Line(points={{-182,156},{-158,156},{-158,
                150},{-132,150}}, color={255,0,255}));
        connect(VS, and2.u2) annotation (Line(points={{-180,228},{-160,228},{-160,
                206},{-140,206}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},
                  {140,260}}),       graphics={Rectangle(
                extent={{-162,258},{140,-100}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-110,166},{74,-46}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl")}),
                                Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-160,-100},{140,260}})));
      end HP_ctrl_stages_V;

      model HP_ctrl_stages_O
        "Model of the controller that controls the heatpump and the pump in front of the heat pump. It is controlled in order to realize the decoupled HP control"
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-200,76},{-160,116}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-200,-68},{-160,-28}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{80,-30},{100,-10}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-62,-92},{-42,-72}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP
          annotation (Placement(transformation(extent={{56,2},{76,22}})));
        Modelica.Blocks.Sources.RealExpression charge_HP(y=1)
          annotation (Placement(transformation(extent={{-74,174},{-54,194}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP1
          annotation (Placement(transformation(extent={{18,-56},{38,-36}})));
        Modelica.Blocks.Logical.And and3
          annotation (Placement(transformation(extent={{-18,-56},{2,-36}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(
          uLow=273.15 + 29,
          uHigh=273.15 + 33,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-60,14},{-40,34}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{8,8},{16,16}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(uLow=273.15 + 29, uHigh=
              273.15 + 33)
          annotation (Placement(transformation(extent={{-66,-20},{-46,0}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-22,-22},{-14,-14}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{112,-26},{124,-14}})));
        Modelica.Blocks.Logical.Switch switch_charge_MODE
          annotation (Placement(transformation(extent={{44,228},{64,248}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE(y=1)
          annotation (Placement(transformation(extent={{-46,240},{-26,260}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP2
          annotation (Placement(transformation(extent={{-8,210},{12,230}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE1(y=2)
          annotation (Placement(transformation(extent={{-62,216},{-42,236}})));
        Modelica.Blocks.Sources.RealExpression off_MODE(y=3)
          annotation (Placement(transformation(extent={{-60,198},{-40,218}})));
        Modelica.Blocks.Logical.Switch MODE
          annotation (Placement(transformation(extent={{120,216},{140,236}})));
        Modelica.Blocks.Sources.RealExpression MODE_off(y=4)
          annotation (Placement(transformation(extent={{44,178},{64,198}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{140,-12},{164,12}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,60},{166,86}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VN
          annotation (Placement(transformation(extent={{-198,32},{-158,72}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VS
          annotation (Placement(transformation(extent={{-200,-22},{-160,18}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-134,8},{-122,20}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{112,-68},{132,-48}})));
        Modelica.Blocks.Interfaces.BooleanOutput y2
          annotation (Placement(transformation(extent={{142,-72},{170,-44}})));
        Modelica.Blocks.Logical.Switch needH
          annotation (Placement(transformation(extent={{-34,152},{-14,172}})));
        Modelica.Blocks.Sources.RealExpression charge_HP1(y=0.5)
          annotation (Placement(transformation(extent={{-64,104},{-44,124}})));
        Modelica.Blocks.Sources.RealExpression charge_HP2(y=1)
          annotation (Placement(transformation(extent={{-50,36},{-30,56}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{-72,152},{-52,172}})));
        Modelica.Blocks.Logical.And and2
          annotation (Placement(transformation(extent={{-114,202},{-94,182}})));
        Modelica.Blocks.Logical.And and4
          annotation (Placement(transformation(extent={{-108,154},{-88,134}})));
        Modelica.Blocks.Interfaces.RealInput VS
          annotation (Placement(transformation(extent={{-200,210},{-160,250}})));
        Modelica.Blocks.Interfaces.RealInput VN
          annotation (Placement(transformation(extent={{-200,140},{-160,180}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis2(
          uLow=0.4,
          uHigh=0.6,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-142,214},{-130,
                  226}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis3(
          uLow=0.4,
          uHigh=0.6,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-148,164},{-136,
                  176}})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{-41,-82},{54,-82},
                {54,-28},{78,-28}},           color={0,0,127}));
        connect(switch_charge_HP.y,switch_H_C_HP. u1) annotation (Line(points={{77,12},
                {76,12},{76,-12},{78,-12}},        color={0,0,127}));
        connect(switch_charge_HP1.y,switch_charge_HP. u3) annotation (Line(points={{39,-46},
                {39,-4},{54,-4},{54,4}},                color={0,0,127}));
        connect(ctrl_HPC.y,switch_charge_HP1. u3) annotation (Line(points={{-41,-82},{
                -41,-72},{16,-72},{16,-54}},       color={0,0,127}));
        connect(and3.y,switch_charge_HP1. u2) annotation (Line(points={{3,-46},{16,-46}},
                                               color={255,0,255}));
        connect(hysteresis.y,not1. u) annotation (Line(points={{-39,24},{-22.5,24},{-22.5,
                12},{6.4,12}},             color={255,0,255}));
        connect(hysteresis1.y,not2. u) annotation (Line(points={{-45,-10},{-30,
                -10},{-30,-18},{-23.6,-18}},
                                          color={255,0,255}));
        connect(hysteresis.y,and3. u2) annotation (Line(points={{-39,24},{-26,24},{-26,
                -54},{-20,-54}},  color={255,0,255}));
        connect(not2.y,and3. u1) annotation (Line(points={{-13.2,-18},{-13.2,-32},{-20,
                -32},{-20,-46}},  color={255,0,255}));
        connect(not1.y,switch_charge_HP. u2)
          annotation (Line(points={{16.8,12},{54,12}},       color={255,0,255}));
        connect(switch_H_C_HP.y,realToInteger. u) annotation (Line(points={{101,-20},{
                110.8,-20}},                              color={0,0,127}));
        connect(charge_MODE.y,switch_charge_MODE. u1) annotation (Line(points={{-25,250},
                {6,250},{6,246},{42,246}},         color={0,0,127}));
        connect(switch_charge_HP2.y,switch_charge_MODE. u3) annotation (Line(points={{13,220},
                {24.5,220},{24.5,230},{42,230}},               color={0,0,127}));
        connect(charge_MODE1.y,switch_charge_HP2. u1)
          annotation (Line(points={{-41,226},{-28,226},{-28,228},{-10,228}},
                                                         color={0,0,127}));
        connect(off_MODE.y,switch_charge_HP2. u3) annotation (Line(points={{-39,208},
                {-32,208},{-32,212},{-10,212}},color={0,0,127}));
        connect(switch_charge_MODE.y,MODE. u1) annotation (Line(points={{65,238},
                {92,238},{92,234},{118,234}},color={0,0,127}));
        connect(MODE_off.y,MODE. u3) annotation (Line(points={{65,188},{91.5,188},
                {91.5,218},{118,218}},
                                color={0,0,127}));
        connect(u, hysteresis.u) annotation (Line(points={{-180,96},{-96,96},{-96,
                24},{-62,24}},
                           color={0,0,127}));
        connect(u1, hysteresis1.u) annotation (Line(points={{-180,-48},{-91,-48},
                {-91,-10},{-68,-10}},
                                 color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{124.6,-20},{134,-20},{134,
                0},{152,0}}, color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{101,-20},{106,-20},
                {106,73},{153,73}}, color={0,0,127}));
        connect(and3.y, switch_charge_HP2.u2) annotation (Line(points={{3,-46},{8,
                -46},{8,220},{-10,220}},       color={255,0,255}));
        connect(not1.y, switch_charge_MODE.u2) annotation (Line(points={{16.8,12},
                {42,12},{42,238}},          color={255,0,255}));
        connect(HC_VN, or1.u[1]) annotation (Line(points={{-178,52},{-156,52},{-156,
                16.1},{-134,16.1}}, color={255,0,255}));
        connect(HC_VS, or1.u[2]) annotation (Line(points={{-180,-2},{-156,-2},{-156,
                11.9},{-134,11.9}}, color={255,0,255}));
        connect(or1.y, MODE.u2) annotation (Line(points={{-121.1,14},{12.45,14},{
                12.45,226},{118,226}},  color={255,0,255}));
        connect(or1.y, switch_H_C_HP.u2) annotation (Line(points={{-121.1,14},{
                -22,14},{-22,-20},{78,-20}}, color={255,0,255}));
        connect(switch_H_C_HP.y, greaterEqualThreshold.u) annotation (Line(points=
               {{101,-20},{106,-20},{106,-58},{110,-58}}, color={0,0,127}));
        connect(y2, greaterEqualThreshold.y)
          annotation (Line(points={{156,-58},{133,-58}}, color={255,0,255}));
        connect(charge_HP.y, needH.u1) annotation (Line(points={{-53,184},{-42,
                184},{-42,170},{-36,170}}, color={0,0,127}));
        connect(charge_HP1.y, needH.u3) annotation (Line(points={{-43,114},{-43,
                136},{-36,136},{-36,154}}, color={0,0,127}));
        connect(needH.y, switch_charge_HP.u1) annotation (Line(points={{-13,162},
                {-13,91},{54,91},{54,20}}, color={0,0,127}));
        connect(switch_charge_HP1.u1, needH.y) annotation (Line(points={{16,-38},
                {-12,-38},{-12,162},{-13,162}}, color={0,0,127}));
        connect(and1.y, needH.u2)
          annotation (Line(points={{-51,162},{-36,162}}, color={255,0,255}));
        connect(and2.y, and1.u1) annotation (Line(points={{-93,192},{-84,192},{
                -84,162},{-74,162}}, color={255,0,255}));
        connect(HC_VS, and2.u1) annotation (Line(points={{-180,-2},{-180,0},{-142,
                0},{-142,100},{-116,100},{-116,192}}, color={255,0,255}));
        connect(and4.y, and1.u2) annotation (Line(points={{-87,144},{-86.5,144},{
                -86.5,154},{-74,154}}, color={255,0,255}));
        connect(HC_VN, and4.u1) annotation (Line(points={{-178,52},{-110,52},{
                -110,144}}, color={255,0,255}));
        connect(VS, hysteresis2.u) annotation (Line(points={{-180,230},{-162,230},
                {-162,220},{-143.2,220}}, color={0,0,127}));
        connect(hysteresis2.y, and2.u2) annotation (Line(points={{-129.4,220},{
                -124,220},{-124,200},{-116,200}}, color={255,0,255}));
        connect(VN, hysteresis3.u) annotation (Line(points={{-180,160},{-166,160},
                {-166,170},{-149.2,170}}, color={0,0,127}));
        connect(hysteresis3.y, and4.u2) annotation (Line(points={{-135.4,170},{
                -122,170},{-122,152},{-110,152}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,
                  -100},{140,260}}), graphics={Rectangle(
                extent={{-162,258},{140,-100}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-110,166},{74,-46}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl")}),
                                Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-160,-100},{140,260}})));
      end HP_ctrl_stages_O;

      model HP_ctrl_stages_V27
        "Model of the controller that controls the heatpump and the pump in front of the heat pump. It is controlled in order to realize the decoupled HP control"
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-200,76},{-160,116}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-200,-68},{-160,-28}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{80,-30},{100,-10}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-62,-92},{-42,-72}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP
          annotation (Placement(transformation(extent={{56,2},{76,22}})));
        Modelica.Blocks.Sources.RealExpression charge_HP(y=1)
          annotation (Placement(transformation(extent={{-66,172},{-46,192}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP1
          annotation (Placement(transformation(extent={{18,-56},{38,-36}})));
        Modelica.Blocks.Logical.And and3
          annotation (Placement(transformation(extent={{-18,-56},{2,-36}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(
          uLow=273.15 + 23.5,
          uHigh=273.15 + 26,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-60,14},{-40,34}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{8,8},{16,16}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(uLow=273.15 + 23.5, uHigh=
              273.15 + 26)
          annotation (Placement(transformation(extent={{-66,-20},{-46,0}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-22,-22},{-14,-14}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{112,-26},{124,-14}})));
        Modelica.Blocks.Logical.Switch switch_charge_MODE
          annotation (Placement(transformation(extent={{44,228},{64,248}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE(y=1)
          annotation (Placement(transformation(extent={{-46,240},{-26,260}})));
        Modelica.Blocks.Logical.Switch switch_charge_HP2
          annotation (Placement(transformation(extent={{-8,210},{12,230}})));
        Modelica.Blocks.Sources.RealExpression charge_MODE1(y=2)
          annotation (Placement(transformation(extent={{-62,216},{-42,236}})));
        Modelica.Blocks.Sources.RealExpression off_MODE(y=3)
          annotation (Placement(transformation(extent={{-60,198},{-40,218}})));
        Modelica.Blocks.Logical.Switch MODE
          annotation (Placement(transformation(extent={{120,216},{140,236}})));
        Modelica.Blocks.Sources.RealExpression MODE_off(y=4)
          annotation (Placement(transformation(extent={{44,178},{64,198}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{140,-12},{164,12}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,60},{166,86}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VN
          annotation (Placement(transformation(extent={{-198,32},{-158,72}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VS
          annotation (Placement(transformation(extent={{-200,-22},{-160,18}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-134,8},{-122,20}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{112,-68},{132,-48}})));
        Modelica.Blocks.Interfaces.BooleanOutput y2
          annotation (Placement(transformation(extent={{142,-72},{170,-44}})));
        Modelica.Blocks.Logical.Switch needH
          annotation (Placement(transformation(extent={{-34,152},{-14,172}})));
        Modelica.Blocks.Sources.RealExpression charge_HP1(y=0.5)
          annotation (Placement(transformation(extent={{-72,104},{-52,124}})));
        Modelica.Blocks.Sources.RealExpression charge_HP2(y=1)
          annotation (Placement(transformation(extent={{-50,36},{-30,56}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{-82,146},{-62,166}})));
        Modelica.Blocks.Logical.And and2
          annotation (Placement(transformation(extent={{-122,208},{-102,188}})));
        Modelica.Blocks.Logical.And and4
          annotation (Placement(transformation(extent={{-114,150},{-94,130}})));
        Modelica.Blocks.Interfaces.RealInput VS
          annotation (Placement(transformation(extent={{-200,206},{-160,246}})));
        Modelica.Blocks.Interfaces.RealInput VN
          annotation (Placement(transformation(extent={{-200,138},{-160,178}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis2(
          uLow=0.4,
          uHigh=0.6,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-148,202},{-134,
                  216}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis3(
          uLow=0.4,
          uHigh=0.6,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-152,146},{-140,
                  158}})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{-41,-82},{54,-82},
                {54,-28},{78,-28}},           color={0,0,127}));
        connect(switch_charge_HP.y,switch_H_C_HP. u1) annotation (Line(points={{77,12},
                {76,12},{76,-12},{78,-12}},        color={0,0,127}));
        connect(switch_charge_HP1.y,switch_charge_HP. u3) annotation (Line(points={{39,-46},
                {39,-4},{54,-4},{54,4}},                color={0,0,127}));
        connect(ctrl_HPC.y,switch_charge_HP1. u3) annotation (Line(points={{-41,-82},{
                -41,-72},{16,-72},{16,-54}},       color={0,0,127}));
        connect(and3.y,switch_charge_HP1. u2) annotation (Line(points={{3,-46},{16,-46}},
                                               color={255,0,255}));
        connect(hysteresis.y,not1. u) annotation (Line(points={{-39,24},{-22.5,24},{-22.5,
                12},{6.4,12}},             color={255,0,255}));
        connect(hysteresis1.y,not2. u) annotation (Line(points={{-45,-10},{-30,
                -10},{-30,-18},{-23.6,-18}},
                                          color={255,0,255}));
        connect(hysteresis.y,and3. u2) annotation (Line(points={{-39,24},{-26,24},{-26,
                -54},{-20,-54}},  color={255,0,255}));
        connect(not2.y,and3. u1) annotation (Line(points={{-13.2,-18},{-13.2,-32},{-20,
                -32},{-20,-46}},  color={255,0,255}));
        connect(not1.y,switch_charge_HP. u2)
          annotation (Line(points={{16.8,12},{54,12}},       color={255,0,255}));
        connect(switch_H_C_HP.y,realToInteger. u) annotation (Line(points={{101,-20},{
                110.8,-20}},                              color={0,0,127}));
        connect(charge_MODE.y,switch_charge_MODE. u1) annotation (Line(points={{-25,250},
                {6,250},{6,246},{42,246}},         color={0,0,127}));
        connect(switch_charge_HP2.y,switch_charge_MODE. u3) annotation (Line(points={{13,220},
                {24.5,220},{24.5,230},{42,230}},               color={0,0,127}));
        connect(charge_MODE1.y,switch_charge_HP2. u1)
          annotation (Line(points={{-41,226},{-28,226},{-28,228},{-10,228}},
                                                         color={0,0,127}));
        connect(off_MODE.y,switch_charge_HP2. u3) annotation (Line(points={{-39,208},{
                -32,208},{-32,212},{-10,212}}, color={0,0,127}));
        connect(switch_charge_MODE.y,MODE. u1) annotation (Line(points={{65,238},{92,238},
                {92,234},{118,234}},         color={0,0,127}));
        connect(MODE_off.y,MODE. u3) annotation (Line(points={{65,188},{91.5,188},{91.5,
                218},{118,218}},color={0,0,127}));
        connect(u, hysteresis.u) annotation (Line(points={{-180,96},{-96,96},{-96,
                24},{-62,24}},
                           color={0,0,127}));
        connect(u1, hysteresis1.u) annotation (Line(points={{-180,-48},{-91,-48},
                {-91,-10},{-68,-10}},
                                 color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{124.6,-20},{134,-20},{134,
                0},{152,0}}, color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{101,-20},{106,-20},
                {106,73},{153,73}}, color={0,0,127}));
        connect(and3.y, switch_charge_HP2.u2) annotation (Line(points={{3,-46},{8,-46},
                {8,220},{-10,220}},            color={255,0,255}));
        connect(not1.y, switch_charge_MODE.u2) annotation (Line(points={{16.8,12},{42,
                12},{42,238}},              color={255,0,255}));
        connect(HC_VN, or1.u[1]) annotation (Line(points={{-178,52},{-156,52},{-156,16.1},
                {-134,16.1}}, color={255,0,255}));
        connect(HC_VS, or1.u[2]) annotation (Line(points={{-180,-2},{-156,-2},{-156,11.9},
                {-134,11.9}}, color={255,0,255}));
        connect(or1.y, MODE.u2) annotation (Line(points={{-121.1,14},{12.45,14},{12.45,
                226},{118,226}},        color={255,0,255}));
        connect(or1.y, switch_H_C_HP.u2) annotation (Line(points={{-121.1,14},{
                -22,14},{-22,-20},{78,-20}}, color={255,0,255}));
        connect(switch_H_C_HP.y, greaterEqualThreshold.u) annotation (Line(points=
               {{101,-20},{106,-20},{106,-58},{110,-58}}, color={0,0,127}));
        connect(y2, greaterEqualThreshold.y)
          annotation (Line(points={{156,-58},{133,-58}}, color={255,0,255}));
        connect(charge_HP.y, needH.u1) annotation (Line(points={{-45,182},{-40,
                182},{-40,170},{-36,170}},
                                 color={0,0,127}));
        connect(charge_HP1.y, needH.u3) annotation (Line(points={{-51,114},{-51,
                136},{-36,136},{-36,154}},
                                     color={0,0,127}));
        connect(needH.y, switch_charge_HP.u1) annotation (Line(points={{-13,162},
                {-13,91},{54,91},{54,20}},
                                      color={0,0,127}));
        connect(switch_charge_HP1.u1, needH.y) annotation (Line(points={{16,-38},
                {-12,-38},{-12,162},{-13,162}},
                                           color={0,0,127}));
        connect(and1.y, needH.u2) annotation (Line(points={{-61,156},{-50,156},{
                -50,162},{-36,162}},
                            color={255,0,255}));
        connect(and2.y, and1.u1) annotation (Line(points={{-101,198},{-94,198},{
                -94,156},{-84,156}},
                                 color={255,0,255}));
        connect(HC_VS, and2.u1) annotation (Line(points={{-180,-2},{-180,0},{-142,
                0},{-142,100},{-124,100},{-124,198}},
                                                  color={255,0,255}));
        connect(and4.y, and1.u2) annotation (Line(points={{-93,140},{-90,140},{
                -90,146},{-88,146},{-88,148},{-84,148}},
                                 color={255,0,255}));
        connect(HC_VN, and4.u1) annotation (Line(points={{-178,52},{-116,52},{
                -116,140}},
              color={255,0,255}));
        connect(hysteresis2.u, VS) annotation (Line(points={{-149.4,209},{-158,
                209},{-158,226},{-180,226}}, color={0,0,127}));
        connect(hysteresis2.y, and2.u2) annotation (Line(points={{-133.3,209},{
                -128,209},{-128,206},{-124,206}}, color={255,0,255}));
        connect(VN, hysteresis3.u) annotation (Line(points={{-180,158},{-166,158},
                {-166,152},{-153.2,152}}, color={0,0,127}));
        connect(hysteresis3.y, and4.u2) annotation (Line(points={{-139.4,152},{
                -126,152},{-126,148},{-116,148}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},
                  {140,260}}),       graphics={Rectangle(
                extent={{-162,258},{140,-100}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-110,166},{74,-46}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl")}),
                                Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-160,-100},{140,260}})));
      end HP_ctrl_stages_V27;

      model HP_ctrl_stages_series_V
        "Control TsupH to keep it at the highest need Tsup of all heating groups"
        import TABS_1;
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{80,-30},{100,-10}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-16,-52},{4,-32}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{112,-26},{124,-14}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{140,-12},{164,12}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,60},{166,86}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VN
          annotation (Placement(transformation(extent={{-198,32},{-158,72}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_VS
          annotation (Placement(transformation(extent={{-200,-22},{-160,18}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-134,8},{-122,20}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{112,-68},{132,-48}})));
        Modelica.Blocks.Interfaces.BooleanOutput y2
          annotation (Placement(transformation(extent={{142,-72},{170,-44}})));
        Modelica.Blocks.Logical.Switch needH
          annotation (Placement(transformation(extent={{0,56},{20,76}})));
        Modelica.Blocks.Sources.RealExpression half(y=0.5)
          annotation (Placement(transformation(extent={{-40,44},{-20,64}})));
        Modelica.Blocks.Sources.RealExpression HCVNthSOMMOS(y=3*(-0.073008085)*(TRM.TRm
               - 273.15) + (23.60617788 - 1) + 273.15)
                         annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=0,
              origin={128,250})));
        Modelica.Blocks.Sources.RealExpression NCVNthSOMMOS(y=-0.073008085*(TRM.TRm -
              273.15) + (24.1445 - 1) + 273.15)
                                     annotation (Placement(transformation(
              extent={{5,8},{-5,-8}},
              rotation=0,
              origin={133,234})));
        Modelica.Blocks.Sources.RealExpression CCVNthSOMMOS(y=-0.007472382*(TRM.TRm -
              273.15) + (24.68307335 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=0,
              origin={128,216})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={70,224})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{36,240},{56,260}})));
        Modelica.Blocks.Sources.RealExpression CCVSthSOMMOS(y=-0.005368822*(TRM.TRm -
              273.15) + (24.63153614 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-7,-8},{7,8}},
              rotation=180,
              origin={128,175})));
        Modelica.Blocks.Sources.RealExpression NCVSthSOMMOS(y=2*(-0.073008085)*(TRM.TRm
               - 273.15) + (24.63 - 1) + 273.15)
                                           annotation (Placement(transformation(
              extent={{-5,-8},{5,8}},
              rotation=180,
              origin={129,190})));
        Modelica.Blocks.Sources.RealExpression HCVSthSOMMOS(y=3*(-0.073008085)*(TRM.TRm
               - 273.15) + (23.60617788 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={128,202})));
        TABS_1.BaseClasses.Switch_3
                             switch_VN_T3
                                         annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={72,192})));
        Modelica.Blocks.Math.Max max
          annotation (Placement(transformation(extent={{34,194},{14,214}})));
        IDEAS.Controls.Continuous.LimPID PIDHP(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=0.1,
          Ti=1200,
          yMax=1,
          yMin=0)
          annotation (Placement(transformation(extent={{0,214},{-20,194}})));
        Modelica.Blocks.Interfaces.RealInput TsupH annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-8,282})));
        Modelica.Blocks.Interfaces.RealOutput yPID
          annotation (Placement(transformation(extent={{140,124},{166,150}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP1
          annotation (Placement(transformation(extent={{84,128},{104,148}})));
        Modelica.Blocks.Sources.RealExpression PIDoff(y=0)
          annotation (Placement(transformation(extent={{-28,120},{-8,140}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis4(
          uLow=0.5,
          uHigh=0.75,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-7,-7},{7,7}},
              rotation=-90,
              origin={-67,175})));
        Modelica.Blocks.Sources.RealExpression on(y=1)
          annotation (Placement(transformation(extent={{-40,76},{-20,96}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-156,240},{-140,256}})));
        Modelica.Blocks.Logical.Switch needH1
          annotation (Placement(transformation(extent={{42,20},{62,40}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(
          uLow=0.25,
          uHigh=0.5,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-7,-7},{7,7}},
              rotation=-90,
              origin={-99,175})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{5,-42},{
                54,-42},{54,-28},{78,-28}},   color={0,0,127}));
        connect(switch_H_C_HP.y,realToInteger. u) annotation (Line(points={{101,-20},{
                110.8,-20}},                              color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{124.6,-20},{134,-20},{134,
                0},{152,0}}, color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{101,-20},{106,-20},
                {106,73},{153,73}}, color={0,0,127}));
        connect(HC_VN, or1.u[1]) annotation (Line(points={{-178,52},{-156,52},{-156,16.1},
                {-134,16.1}}, color={255,0,255}));
        connect(HC_VS, or1.u[2]) annotation (Line(points={{-180,-2},{-156,-2},{-156,11.9},
                {-134,11.9}}, color={255,0,255}));
        connect(or1.y, switch_H_C_HP.u2) annotation (Line(points={{-121.1,14},{
                -22,14},{-22,-20},{78,-20}}, color={255,0,255}));
        connect(switch_H_C_HP.y, greaterEqualThreshold.u) annotation (Line(points=
               {{101,-20},{106,-20},{106,-58},{110,-58}}, color={0,0,127}));
        connect(y2, greaterEqualThreshold.y)
          annotation (Line(points={{156,-58},{133,-58}}, color={255,0,255}));
        connect(switch_VN_T1.a,HCVNthSOMMOS. y)
          annotation (Line(points={{82,232},{117,232},{117,250}},
                                                             color={0,0,127}));
        connect(NCVNthSOMMOS.y,switch_VN_T1. b) annotation (Line(points={{127.5,234},{
                120,234},{120,224},{82,224}},
                                      color={0,0,127}));
        connect(CCVNthSOMMOS.y,switch_VN_T1. c) annotation (Line(points={{117,216},{82,
                216}},            color={0,0,127}));
        connect(TRM.TRm,switch_VN_T1. u)
          annotation (Line(points={{56.6,250},{70,250},{70,236}},
                                                                color={0,0,127}));
        connect(HCVSthSOMMOS.y,switch_VN_T3. a) annotation (Line(points={{119.2,202},{
                102,202},{102,200},{84,200}},
                                          color={0,0,127}));
        connect(NCVSthSOMMOS.y, switch_VN_T3.b) annotation (Line(points={{123.5,190},{
                102,190},{102,192},{84,192}}, color={0,0,127}));
        connect(CCVSthSOMMOS.y, switch_VN_T3.c) annotation (Line(points={{120.3,175},{
                99.15,175},{99.15,184},{84,184}}, color={0,0,127}));
        connect(switch_VN_T1.u, switch_VN_T3.u)
          annotation (Line(points={{70,236},{72,236},{72,204}}, color={0,0,127}));
        connect(max.u1, switch_VN_T1.y) annotation (Line(points={{36,210},{36,217},{59,
                217},{59,224}}, color={0,0,127}));
        connect(max.u2, switch_VN_T3.y) annotation (Line(points={{36,198},{56,198},{56,
                192},{61,192}}, color={0,0,127}));
        connect(PIDHP.u_s, max.y)
          annotation (Line(points={{2,204},{13,204}}, color={0,0,127}));
        connect(PIDHP.u_m, TsupH) annotation (Line(points={{-10,216},{-10,250},{-8,
                250},{-8,282}}, color={0,0,127}));
        connect(or1.y, switch_H_C_HP1.u2) annotation (Line(points={{-121.1,14},{32,14},
                {32,138},{82,138}}, color={255,0,255}));
        connect(switch_H_C_HP1.y, yPID) annotation (Line(points={{105,138},{122,138},{
                122,137},{153,137}}, color={0,0,127}));
        connect(PIDoff.y, switch_H_C_HP1.u3)
          annotation (Line(points={{-7,130},{82,130}}, color={0,0,127}));
        connect(PIDHP.y, hysteresis4.u) annotation (Line(points={{-21,204},{-67.5,
                204},{-67.5,183.4},{-67,183.4}}, color={0,0,127}));
        connect(needH.u2, hysteresis4.y) annotation (Line(points={{-2,66},{-66,66},
                {-66,167.3},{-67,167.3}},
                                     color={255,0,255}));
        connect(on.y, needH.u1) annotation (Line(points={{-19,86},{-12,86},{-12,74},{-2,
                74}}, color={0,0,127}));
        connect(half.y, needH.u3) annotation (Line(points={{-19,54},{-12,54},{-12,
                58},{-2,58}},
                          color={0,0,127}));
        connect(PIDHP.y, switch_H_C_HP1.u1) annotation (Line(points={{-21,204},{
                -30.5,204},{-30.5,146},{82,146}}, color={0,0,127}));
        connect(needH.y, needH1.u1) annotation (Line(points={{21,66},{36,66},{36,
                38},{40,38}}, color={0,0,127}));
        connect(needH1.y, switch_H_C_HP.u1) annotation (Line(points={{63,30},{70,
                30},{70,-12},{78,-12}}, color={0,0,127}));
        connect(ctrl_HPC.y, needH1.u3) annotation (Line(points={{5,-42},{5,-10},{
                40,-10},{40,22}}, color={0,0,127}));
        connect(hysteresis1.y, needH1.u2) annotation (Line(points={{-99,167.3},{
                -98,167.3},{-98,30},{40,30}}, color={255,0,255}));
        connect(PIDHP.y, hysteresis1.u) annotation (Line(points={{-21,204},{-98,
                204},{-98,183.4},{-99,183.4}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},
                  {140,260}}),       graphics={Rectangle(
                extent={{-162,258},{140,-100}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-124,196},{102,-88}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl_series
")}),                           Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-160,-100},{140,260}})),
          experiment(
            StopTime=31536000,
            __Dymola_NumberOfIntervals=50000,
            Tolerance=1e-05,
            __Dymola_Algorithm="Dassl"));
      end HP_ctrl_stages_series_V;

      model HP_ctrl_stages_series_O
        "Control TsupH to keep it at the highest need Tsup of all heating groups"
        import TABS_1;
        Modelica.Blocks.Logical.Switch switch_H_C_HP
          annotation (Placement(transformation(extent={{80,-30},{100,-10}})));
        Modelica.Blocks.Sources.RealExpression ctrl_HPC(y=0)
          annotation (Placement(transformation(extent={{-16,-52},{4,-32}})));
        Modelica.Blocks.Math.RealToInteger realToInteger
          annotation (Placement(transformation(extent={{112,-26},{124,-14}})));
        Modelica.Blocks.Interfaces.IntegerOutput y
          annotation (Placement(transformation(extent={{140,-12},{164,12}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,60},{166,86}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_ON
          annotation (Placement(transformation(extent={{-198,32},{-158,72}})));
        Modelica.Blocks.Interfaces.BooleanInput HC_OS
          annotation (Placement(transformation(extent={{-200,-22},{-160,18}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-134,8},{-122,20}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5)
          annotation (Placement(transformation(extent={{112,-68},{132,-48}})));
        Modelica.Blocks.Interfaces.BooleanOutput y2
          annotation (Placement(transformation(extent={{142,-72},{170,-44}})));
        Modelica.Blocks.Logical.Switch needH
          annotation (Placement(transformation(extent={{0,56},{20,76}})));
        Modelica.Blocks.Sources.RealExpression half(y=0.5)
          annotation (Placement(transformation(extent={{-40,44},{-20,64}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={70,224})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{36,240},{56,260}})));
        TABS_1.BaseClasses.Switch_3
                             switch_VN_T3
                                         annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={72,192})));
        Modelica.Blocks.Math.Max max
          annotation (Placement(transformation(extent={{34,194},{14,214}})));
        IDEAS.Controls.Continuous.LimPID PIDHP(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=0.1,
          Ti=1200,
          yMax=1,
          yMin=0)
          annotation (Placement(transformation(extent={{0,214},{-20,194}})));
        Modelica.Blocks.Interfaces.RealInput TsupH annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-8,282})));
        Modelica.Blocks.Interfaces.RealOutput yPID
          annotation (Placement(transformation(extent={{140,124},{166,150}})));
        Modelica.Blocks.Logical.Switch switch_H_C_HP1
          annotation (Placement(transformation(extent={{84,128},{104,148}})));
        Modelica.Blocks.Sources.RealExpression PIDoff(y=0)
          annotation (Placement(transformation(extent={{-28,120},{-8,140}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis4(
          uLow=0.5,
          uHigh=0.75,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-7,-7},{7,7}},
              rotation=-90,
              origin={-67,175})));
        Modelica.Blocks.Sources.RealExpression on(y=1)
          annotation (Placement(transformation(extent={{-40,76},{-20,96}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-156,240},{-140,256}})));
        Modelica.Blocks.Logical.Switch needH1
          annotation (Placement(transformation(extent={{42,20},{62,40}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis1(
          uLow=0.25,
          uHigh=0.5,
          pre_y_start=false)
                  annotation (Placement(transformation(extent={{-7,-7},{7,7}},
              rotation=-90,
              origin={-99,175})));
        Modelica.Blocks.Sources.RealExpression HCONthSOMMOS(y=(-0.192630385)*(TRM.TRm
               - 273.15) + (26.23786848 + 2.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={118,254})));
        Modelica.Blocks.Sources.RealExpression NCONthSOMMOS(y=(-0.192630385)*(TRM.TRm
               - 273.15) + (26.25573) + 273.15)
                                     annotation (Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=180,
              origin={119,236})));
        Modelica.Blocks.Sources.RealExpression CCONthSOMMOS(y=-0.072395894*(TRM.TRm
               - 273.15) + (26.2736994) + 273.15)
                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={124,222})));
        Modelica.Blocks.Sources.RealExpression CCOSthSOMMOS(y=(-0.058622961)*(TRM.TRm
               - 273.15) + (25.93626255 - 1.5) + 273.15)
                         annotation (Placement(transformation(
              extent={{-7,-8},{7,8}},
              rotation=180,
              origin={122,171})));
        Modelica.Blocks.Sources.RealExpression NCOSthSOMMOS(y=0.9*(-0.206797035)*
              (TRM.TRm - 273.15) + (26.2425 - 0.75) + 273.15)
                                           annotation (Placement(transformation(
              extent={{-5,8},{5,-8}},
              rotation=180,
              origin={127,186})));
        Modelica.Blocks.Sources.RealExpression HCOSthSOMMOS(y=0.95*(-0.206797035)
              *(TRM.TRm - 273.15) + (26.54953476) + 273.15)
                         annotation (Placement(transformation(
              extent={{8,-8},{-8,8}},
              rotation=0,
              origin={126,198})));
      equation
        connect(ctrl_HPC.y,switch_H_C_HP. u3) annotation (Line(points={{5,-42},{
                54,-42},{54,-28},{78,-28}},   color={0,0,127}));
        connect(switch_H_C_HP.y,realToInteger. u) annotation (Line(points={{101,-20},{
                110.8,-20}},                              color={0,0,127}));
        connect(realToInteger.y, y) annotation (Line(points={{124.6,-20},{134,-20},{134,
                0},{152,0}}, color={255,127,0}));
        connect(switch_H_C_HP.y, y1) annotation (Line(points={{101,-20},{106,-20},
                {106,73},{153,73}}, color={0,0,127}));
        connect(HC_ON, or1.u[1]) annotation (Line(points={{-178,52},{-156,52},{-156,16.1},
                {-134,16.1}}, color={255,0,255}));
        connect(HC_OS, or1.u[2]) annotation (Line(points={{-180,-2},{-156,-2},{-156,11.9},
                {-134,11.9}}, color={255,0,255}));
        connect(or1.y, switch_H_C_HP.u2) annotation (Line(points={{-121.1,14},{
                -22,14},{-22,-20},{78,-20}}, color={255,0,255}));
        connect(switch_H_C_HP.y, greaterEqualThreshold.u) annotation (Line(points=
               {{101,-20},{106,-20},{106,-58},{110,-58}}, color={0,0,127}));
        connect(y2, greaterEqualThreshold.y)
          annotation (Line(points={{156,-58},{133,-58}}, color={255,0,255}));
        connect(TRM.TRm,switch_VN_T1. u)
          annotation (Line(points={{56.6,250},{70,250},{70,236}},
                                                                color={0,0,127}));
        connect(switch_VN_T1.u, switch_VN_T3.u)
          annotation (Line(points={{70,236},{72,236},{72,204}}, color={0,0,127}));
        connect(max.u1, switch_VN_T1.y) annotation (Line(points={{36,210},{36,217},{59,
                217},{59,224}}, color={0,0,127}));
        connect(max.u2, switch_VN_T3.y) annotation (Line(points={{36,198},{56,198},{56,
                192},{61,192}}, color={0,0,127}));
        connect(PIDHP.u_s, max.y)
          annotation (Line(points={{2,204},{13,204}}, color={0,0,127}));
        connect(PIDHP.u_m, TsupH) annotation (Line(points={{-10,216},{-10,250},{-8,
                250},{-8,282}}, color={0,0,127}));
        connect(or1.y, switch_H_C_HP1.u2) annotation (Line(points={{-121.1,14},{32,14},
                {32,138},{82,138}}, color={255,0,255}));
        connect(switch_H_C_HP1.y, yPID) annotation (Line(points={{105,138},{122,138},{
                122,137},{153,137}}, color={0,0,127}));
        connect(PIDoff.y, switch_H_C_HP1.u3)
          annotation (Line(points={{-7,130},{82,130}}, color={0,0,127}));
        connect(PIDHP.y, hysteresis4.u) annotation (Line(points={{-21,204},{-67.5,
                204},{-67.5,183.4},{-67,183.4}}, color={0,0,127}));
        connect(needH.u2, hysteresis4.y) annotation (Line(points={{-2,66},{-66,66},
                {-66,167.3},{-67,167.3}},
                                     color={255,0,255}));
        connect(on.y, needH.u1) annotation (Line(points={{-19,86},{-12,86},{-12,74},{-2,
                74}}, color={0,0,127}));
        connect(half.y, needH.u3) annotation (Line(points={{-19,54},{-12,54},{-12,
                58},{-2,58}},
                          color={0,0,127}));
        connect(PIDHP.y, switch_H_C_HP1.u1) annotation (Line(points={{-21,204},{
                -30.5,204},{-30.5,146},{82,146}}, color={0,0,127}));
        connect(needH.y, needH1.u1) annotation (Line(points={{21,66},{36,66},{36,
                38},{40,38}}, color={0,0,127}));
        connect(needH1.y, switch_H_C_HP.u1) annotation (Line(points={{63,30},{70,
                30},{70,-12},{78,-12}}, color={0,0,127}));
        connect(ctrl_HPC.y, needH1.u3) annotation (Line(points={{5,-42},{5,-10},{
                40,-10},{40,22}}, color={0,0,127}));
        connect(hysteresis1.y, needH1.u2) annotation (Line(points={{-99,167.3},{
                -98,167.3},{-98,30},{40,30}}, color={255,0,255}));
        connect(PIDHP.y, hysteresis1.u) annotation (Line(points={{-21,204},{-98,
                204},{-98,183.4},{-99,183.4}}, color={0,0,127}));
        connect(HCONthSOMMOS.y, switch_VN_T1.a) annotation (Line(points={{107,254},
                {96,254},{96,232},{82,232}}, color={0,0,127}));
        connect(NCONthSOMMOS.y, switch_VN_T1.b) annotation (Line(points={{113.5,
                236},{100,236},{100,224},{82,224}}, color={0,0,127}));
        connect(CCONthSOMMOS.y, switch_VN_T1.c) annotation (Line(points={{113,222},
                {96,222},{96,216},{82,216}}, color={0,0,127}));
        connect(HCOSthSOMMOS.y, switch_VN_T3.a) annotation (Line(points={{117.2,
                198},{100.6,198},{100.6,200},{84,200}}, color={0,0,127}));
        connect(NCOSthSOMMOS.y, switch_VN_T3.b) annotation (Line(points={{121.5,
                186},{104,186},{104,192},{84,192}}, color={0,0,127}));
        connect(CCOSthSOMMOS.y, switch_VN_T3.c) annotation (Line(points={{114.3,
                171},{108,171},{108,172},{100,172},{100,184},{84,184}}, color={0,
                0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-160,-100},
                  {140,260}}),       graphics={Rectangle(
                extent={{-162,258},{140,-100}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-124,196},{102,-88}},
                lineColor={28,108,200},
                lineThickness=1,
                textString="HP_ctrl_series
")}),                           Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-160,-100},{140,260}})),
          experiment(
            StopTime=31536000,
            __Dymola_NumberOfIntervals=50000,
            Tolerance=1e-05,
            __Dymola_Algorithm="Dassl"));
      end HP_ctrl_stages_series_O;
    end HP_ctrl;

    package Vent_ctrl "All damper and temperature controllers"
      model Tideal_ctrl "Controller for the ideal HC coil. CAV"
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{-180,40},{-140,80}})));
        Modelica.Blocks.Interfaces.BooleanInput u1
          annotation (Placement(transformation(extent={{-180,-80},{-140,-40}})));
        Modelica.Blocks.Interfaces.RealInput u2 annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-116,162})));
        Modelica.Blocks.Interfaces.RealInput u3 annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-56,158})));
        Modelica.Blocks.Interfaces.RealInput u4 annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={-118,-160})));
        Modelica.Blocks.Interfaces.RealInput u5 annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={-42,-160})));
        Modelica.Blocks.Interfaces.RealInput u6 annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-160,0})));
        Modelica.Blocks.Sources.Constant Theat(k=273.15 + 18) annotation (
            Placement(transformation(extent={{-124,50},{-108,66}})));
        Modelica.Blocks.Logical.Switch switch_heating_mode annotation (
            Placement(transformation(extent={{-44,-6},{-24,14}})));
        Modelica.Blocks.Logical.Switch switch_mode
          annotation (Placement(transformation(extent={{100,50},{120,70}})));
        Modelica.Blocks.Logical.Switch switch_cooling_mode annotation (
            Placement(transformation(extent={{-62,50},{-42,70}})));
        Modelica.Blocks.Logical.Switch switch_mode1
          annotation (Placement(transformation(extent={{82,-34},{102,-14}})));
        Modelica.Blocks.Logical.LessEqualThreshold lessEqualThreshold(threshold=
              273.15 + 18)
          annotation (Placement(transformation(extent={{-104,20},{-84,40}})));
        Modelica.Blocks.Logical.LessEqualThreshold lessEqualThreshold1(threshold=
              273.15 + 27.5)
          annotation (Placement(transformation(extent={{-104,-10},{-84,10}})));
        Modelica.Blocks.Sources.Constant Theat1(k=273.15 + 27.5)
                                                              annotation (
            Placement(transformation(extent={{-98,-36},{-82,-20}})));
        Modelica.Blocks.Logical.Hysteresis needheat_VN(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(extent={{-100,104},{-80,124}})));
        Modelica.Blocks.Logical.Switch switch_needheat_VN
          annotation (Placement(transformation(extent={{-6,66},{14,86}})));
        Modelica.Blocks.Logical.Switch switch_needheat_VS
          annotation (Placement(transformation(extent={{26,2},{46,-18}})));
        Modelica.Blocks.Logical.Hysteresis needheat_VS(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(extent={{-76,-92},{-56,-72}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{140,38},{184,82}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{140,-50},{184,-6}})));
        Modelica.Blocks.Logical.Switch switch_needcool_VN
          annotation (Placement(transformation(extent={{64,32},{84,52}})));
        Modelica.Blocks.Logical.Hysteresis needheat_VN1(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=90,
              origin={40,112})));
        Modelica.Blocks.Interfaces.RealInput u7 annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={30,158})));
        Modelica.Blocks.Interfaces.RealInput u8 annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={96,158})));
        Modelica.Blocks.Interfaces.RealInput u9 annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={34,-160})));
        Modelica.Blocks.Interfaces.RealInput u10
                                                annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={90,-158})));
        Modelica.Blocks.Logical.Switch switch_needcool_VS
          annotation (Placement(transformation(extent={{36,-50},{56,-70}})));
        Modelica.Blocks.Logical.Hysteresis needcool_VS(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={-4,-118})));
        Modelica.Blocks.MathBoolean.And and1(nu=2)
          annotation (Placement(transformation(extent={{12,-74},{24,-62}})));
        Modelica.Blocks.Interfaces.RealInput u11
                                                annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-160,-110})));
        Modelica.Blocks.MathBoolean.And and2(nu=2) annotation (Placement(
              transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={42,42})));
        Modelica.Blocks.Interfaces.RealInput u12
                                                annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-158,116})));
        Modelica.Blocks.MathBoolean.And and3(nu=2) annotation (Placement(
              transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={-46,86})));
        Modelica.Blocks.MathBoolean.And and4(nu=2) annotation (Placement(
              transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={-2,-10})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0)
          annotation (Placement(transformation(extent={{-130,82},{-110,102}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{-66,104},{-58,112}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-36,-56},{-28,-48}})));
        Modelica.Blocks.MathBoolean.Not not3 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=-90,
              origin={32,86})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(
            threshold=0)
          annotation (Placement(transformation(extent={{-116,-92},{-96,-72}})));
        Modelica.Blocks.MathBoolean.Not not4 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={0,-84})));
      equation
        connect(Theat.y,switch_cooling_mode. u1) annotation (Line(points={{-107.2,
                58},{-88.6,58},{-88.6,68},{-64,68}},               color={0,0,
                127}));
        connect(lessEqualThreshold.y, switch_cooling_mode.u2) annotation (Line(
              points={{-83,30},{-78,30},{-78,60},{-64,60}}, color={255,0,255}));
        connect(lessEqualThreshold1.y, switch_heating_mode.u2)
          annotation (Line(points={{-83,0},{-60,0},{-60,4},{-46,4}},
                                                       color={255,0,255}));
        connect(Theat1.y, switch_heating_mode.u3) annotation (Line(points={{-81.2,
                -28},{-50,-28},{-50,-4},{-46,-4}},   color={0,0,127}));
        connect(switch_mode.u1, switch_needheat_VN.y) annotation (Line(points={{98,68},
                {44,68},{44,76},{15,76}},        color={0,0,127}));
        connect(switch_needheat_VS.y, switch_mode1.u1) annotation (Line(points={{47,-8},
                {54,-8},{54,-16},{80,-16}},        color={0,0,127}));
        connect(u2, needheat_VN.u) annotation (Line(points={{-116,162},{-116,134},
                {-114,134},{-114,114},{-102,114}},
                                     color={0,0,127}));
        connect(switch_mode.u2, u) annotation (Line(points={{98,60},{-160,60}},
                                color={255,0,255}));
        connect(switch_mode1.u2, u1) annotation (Line(points={{80,-24},{-46,-24},
                {-46,-60},{-160,-60}},
                                  color={255,0,255}));
        connect(u6, lessEqualThreshold1.u) annotation (Line(points={{-160,0},{
                -106,0}},                    color={0,0,127}));
        connect(u6, lessEqualThreshold.u) annotation (Line(points={{-160,
                1.11022e-15},{-126,1.11022e-15},{-126,30},{-106,30}},color={0,0,
                127}));
        connect(u6, switch_cooling_mode.u3) annotation (Line(points={{-160,
                1.11022e-15},{-65,1.11022e-15},{-65,52},{-64,52}}, color={0,0,127}));
        connect(u6, switch_heating_mode.u1) annotation (Line(points={{-160,
                1.11022e-15},{-58,1.11022e-15},{-58,12},{-46,12}},
                                                                 color={0,0,127}));
        connect(u4, needheat_VS.u) annotation (Line(points={{-118,-160},{-80,-160},
                {-80,-82},{-78,-82}},           color={0,0,127}));
        connect(switch_mode.y, y) annotation (Line(points={{121,60},{162,60}},
                               color={0,0,127}));
        connect(switch_mode1.y, y1) annotation (Line(points={{103,-24},{112,-24},
                {112,-28},{162,-28}},
                                 color={0,0,127}));
        connect(switch_mode.u3, switch_needcool_VN.y) annotation (Line(points={{
                98,52},{86,52},{86,42},{85,42}}, color={0,0,127}));
        connect(u7, needheat_VN1.u) annotation (Line(points={{30,158},{30,142},{
                40,142},{40,124}}, color={0,0,127}));
        connect(switch_mode1.u3, switch_needcool_VS.y) annotation (Line(points={{
                80,-32},{74,-32},{74,-60},{57,-60}}, color={0,0,127}));
        connect(u9, needcool_VS.u) annotation (Line(points={{34,-160},{-4,-160},{
                -4,-130}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, and3.u[1]) annotation (Line(points={{
                -109,92},{-78,92},{-78,88.1},{-52,88.1}}, color={255,0,255}));
        connect(u12, greaterEqualThreshold.u) annotation (Line(points={{-158,116},
                {-144,116},{-144,92},{-132,92}}, color={0,0,127}));
        connect(u3, switch_needheat_VN.u1) annotation (Line(points={{-56,158},{
                -56,122},{-8,122},{-8,84}}, color={0,0,127}));
        connect(switch_cooling_mode.y, switch_needheat_VN.u3) annotation (Line(
              points={{-41,60},{-24,60},{-24,68},{-8,68}}, color={0,0,127}));
        connect(not1.y, and3.u[2]) annotation (Line(points={{-57.2,108},{-54,108},
                {-54,83.9},{-52,83.9}}, color={255,0,255}));
        connect(needheat_VN.y, not1.u) annotation (Line(points={{-79,114},{-73.5,
                114},{-73.5,108},{-67.6,108}}, color={255,0,255}));
        connect(and3.y, switch_needheat_VN.u2) annotation (Line(points={{-39.1,86},
                {-24,86},{-24,76},{-8,76}}, color={255,0,255}));
        connect(switch_needheat_VS.u1, u5) annotation (Line(points={{24,-16},{-40,
                -16},{-40,-160},{-42,-160}}, color={0,0,127}));
        connect(and4.y, switch_needheat_VS.u2) annotation (Line(points={{4.9,-10},
                {14,-10},{14,-8},{24,-8}}, color={255,0,255}));
        connect(not2.y, and4.u[1]) annotation (Line(points={{-27.2,-52},{-27.2,
                -33},{-8,-33},{-8,-7.9}}, color={255,0,255}));
        connect(needheat_VS.y, not2.u) annotation (Line(points={{-55,-82},{-46,
                -82},{-46,-52},{-37.6,-52}}, color={255,0,255}));
        connect(greaterEqualThreshold.y, and4.u[2]) annotation (Line(points={{
                -109,92},{-75.5,92},{-75.5,-12.1},{-8,-12.1}}, color={255,0,255}));
        connect(switch_needcool_VN.u1, u8) annotation (Line(points={{62,50},{80,
                50},{80,158},{96,158}}, color={0,0,127}));
        connect(and2.y, switch_needcool_VN.u2) annotation (Line(points={{48.9,42},
                {55.45,42},{55.45,42},{62,42}}, color={255,0,255}));
        connect(needheat_VN1.y, not3.u) annotation (Line(points={{40,101},{32,101},
                {32,91.6}}, color={255,0,255}));
        connect(not3.y, and2.u[1]) annotation (Line(points={{32,81.2},{36,81.2},{
                36,44.1}}, color={255,0,255}));
        connect(u11, greaterEqualThreshold1.u) annotation (Line(points={{-160,
                -110},{-142,-110},{-142,-82},{-118,-82}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, and2.u[2]) annotation (Line(points={{
                -95,-82},{-30,-82},{-30,39.9},{36,39.9}}, color={255,0,255}));
        connect(switch_heating_mode.y, switch_needcool_VN.u3) annotation (Line(
              points={{-23,4},{19.5,4},{19.5,34},{62,34}}, color={0,0,127}));
        connect(switch_cooling_mode.y, switch_needheat_VS.u3) annotation (Line(
              points={{-41,60},{-8,60},{-8,0},{24,0}}, color={0,0,127}));
        connect(switch_needcool_VS.u1, u10) annotation (Line(points={{34,-68},{62,
                -68},{62,-158},{90,-158}}, color={0,0,127}));
        connect(and1.y, switch_needcool_VS.u2) annotation (Line(points={{24.9,-68},
                {30,-68},{30,-60},{34,-60}}, color={255,0,255}));
        connect(not4.y, and1.u[1]) annotation (Line(points={{4.44089e-16,-79.2},{
                -1,-79.2},{-1,-65.9},{12,-65.9}}, color={255,0,255}));
        connect(needcool_VS.y, not4.u) annotation (Line(points={{-4,-107},{-4,
                -99.5},{-4.44089e-16,-99.5},{-4.44089e-16,-89.6}}, color={255,0,
                255}));
        connect(greaterEqualThreshold1.y, and1.u[2]) annotation (Line(points={{
                -95,-82},{-42,-82},{-42,-70.1},{12,-70.1}}, color={255,0,255}));
        connect(switch_needcool_VS.u3, switch_heating_mode.y) annotation (Line(
              points={{34,-52},{6,-52},{6,4},{-23,4}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -140,-140},{140,140}}), graphics={Rectangle(
                extent={{-138,140},{142,-140}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-122,78},{126,-120}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="Tcoil_ideal_ctrl
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-140,-140},{
                  140,140}})));
      end Tideal_ctrl;

      model bypass_ctrl
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{200,30},{228,58}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{200,-54},{228,-26}})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl22(y=1)
          annotation (Placement(transformation(extent={{-96,-2},{-76,18}})));
        Modelica.Blocks.Logical.Switch switch22
          annotation (Placement(transformation(extent={{92,8},{112,28}})));
        Modelica.Blocks.Logical.Switch switch23
          annotation (Placement(transformation(extent={{60,34},{80,54}})));
        Modelica.Blocks.Logical.Hysteresis true_outside_hotter(uLow=-0.25, uHigh=
              0.25) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-2,40})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl23(y=0)
          annotation (Placement(transformation(extent={{-98,48},{-78,68}})));
        Modelica.Blocks.Logical.Switch switch24
          annotation (Placement(transformation(extent={{64,-20},{84,0}})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl24(y=if switch22.y < 0.5
               then 1 else 0)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={148,80})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{-138,-48},{-98,-8}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-140,16},{-100,56}})));
        Modelica.Blocks.Logical.Hysteresis true_too_hot(uLow=-0.25, uHigh=0.25)
          annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-60,82})));
        Modelica.Blocks.Interfaces.RealInput Tlimitup annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-84,140})));
        Modelica.Blocks.Logical.Switch switch1
          annotation (Placement(transformation(extent={{-6,94},{14,74}})));
        Modelica.Blocks.Interfaces.RealInput Tlimitdown annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=90,
              origin={-72,-120})));
        Modelica.Blocks.Logical.Hysteresis true_too_cold(uLow=-0.25, uHigh=0.25)
          annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=270,
              origin={-66,-76})));
        Modelica.Blocks.Logical.Switch switch2
          annotation (Placement(transformation(extent={{-14,-64},{6,-44}})));
        Modelica.Blocks.Interfaces.RealInput noccVS annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={20,140})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.5) annotation (Placement(transformation(
              extent={{-7,-7},{7,7}},
              rotation=-90,
              origin={27,103})));
        Modelica.Blocks.Logical.Switch true_occupied
          annotation (Placement(transformation(extent={{36,62},{56,82}})));
        Modelica.Blocks.Logical.Switch true_occupied1
          annotation (Placement(transformation(extent={{34,-62},{54,-42}})));
        Modelica.Blocks.Interfaces.RealInput VAVy annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={120,140})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(
            threshold=0.5) annotation (Placement(transformation(
              extent={{-7,-7},{7,7}},
              rotation=-90,
              origin={121,93})));
        Modelica.Blocks.Logical.Switch switch3
          annotation (Placement(transformation(extent={{154,-22},{174,-2}})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl1(y=0)
          annotation (Placement(transformation(extent={{102,-54},{122,-34}})));
        Modelica.Blocks.Logical.Switch switch4
          annotation (Placement(transformation(extent={{166,36},{186,56}})));
      equation
        connect(y, y)
          annotation (Line(points={{214,44},{214,44}}, color={0,0,127}));
        connect(switch23.y, switch22.u1) annotation (Line(points={{81,44},{82,44},
                {82,26},{90,26}}, color={0,0,127}));
        connect(true_outside_hotter.y, switch23.u2) annotation (Line(points={{9,
                40},{36,40},{36,44},{58,44}}, color={255,0,255}));
        connect(VAVVSctrl22.y, switch23.u3) annotation (Line(points={{-75,8},{16,
                8},{16,36},{58,36}},color={0,0,127}));
        connect(true_outside_hotter.y, switch24.u2) annotation (Line(points={{9,
                40},{20,40},{20,-10},{62,-10}}, color={255,0,255}));
        connect(VAVVSctrl22.y, switch24.u1) annotation (Line(points={{-75,8},{-20,
                8},{-20,-2},{62,-2}},color={0,0,127}));
        connect(switch24.y, switch22.u3) annotation (Line(points={{85,-10},{85.5,
                -10},{85.5,10},{90,10}}, color={0,0,127}));
        connect(u, switch22.u2) annotation (Line(points={{-118,-28},{-10,-28},{
                -10,18},{90,18}}, color={255,0,255}));
        connect(u1, true_outside_hotter.u) annotation (Line(points={{-120,36},{
                -72,36},{-72,40},{-14,40}}, color={0,0,127}));
        connect(Tlimitup, true_too_hot.u) annotation (Line(points={{-84,140},{-84,
                82},{-72,82}}, color={0,0,127}));
        connect(true_too_hot.y, switch1.u2) annotation (Line(points={{-49,82},{
                -24,82},{-24,84},{-8,84}}, color={255,0,255}));
        connect(switch1.u3, VAVVSctrl23.y) annotation (Line(points={{-8,92},{-26,
                92},{-26,58},{-77,58}}, color={0,0,127}));
        connect(switch1.u1, VAVVSctrl22.y) annotation (Line(points={{-8,76},{-30,
                76},{-30,8},{-75,8}}, color={0,0,127}));
        connect(true_too_cold.u, Tlimitdown) annotation (Line(points={{-66,-88},{
                -66,-120},{-72,-120}}, color={0,0,127}));
        connect(true_too_cold.y, switch2.u2) annotation (Line(points={{-66,-65},{
                -66,-54},{-16,-54}}, color={255,0,255}));
        connect(switch2.u1, VAVVSctrl22.y) annotation (Line(points={{-16,-46},{
                -30,-46},{-30,8},{-75,8}}, color={0,0,127}));
        connect(switch2.u3, VAVVSctrl23.y) annotation (Line(points={{-16,-62},{
                -32,-62},{-32,58},{-77,58}}, color={0,0,127}));
        connect(noccVS, greaterEqualThreshold.u) annotation (Line(points={{20,140},
                {26,140},{26,111.4},{27,111.4}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, true_occupied.u2) annotation (Line(
              points={{27,95.3},{27,73.65},{34,73.65},{34,72}}, color={255,0,255}));
        connect(true_occupied.u1, switch1.y) annotation (Line(points={{34,80},{28,
                80},{28,84},{15,84}}, color={0,0,127}));
        connect(true_occupied.y, switch23.u1)
          annotation (Line(points={{57,72},{58,72},{58,52}}, color={0,0,127}));
        connect(true_occupied.u3, VAVVSctrl23.y) annotation (Line(points={{34,64},
                {-22,64},{-22,58},{-77,58}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, true_occupied1.u2) annotation (Line(
              points={{27,95.3},{27,24},{26,24},{26,-52},{32,-52}}, color={255,0,
                255}));
        connect(switch24.u3, true_occupied1.y) annotation (Line(points={{62,-18},
                {60,-18},{60,-52},{55,-52}}, color={0,0,127}));
        connect(switch2.y, true_occupied1.u1) annotation (Line(points={{7,-54},{
                18,-54},{18,-44},{32,-44}}, color={0,0,127}));
        connect(VAVVSctrl23.y, true_occupied1.u3) annotation (Line(points={{-77,
                58},{-58,58},{-58,-60},{32,-60}}, color={0,0,127}));
        connect(VAVy, greaterEqualThreshold1.u) annotation (Line(points={{120,140},
                {121,140},{121,101.4}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, switch3.u2) annotation (Line(points={{
                121,85.3},{121,-11.35},{152,-11.35},{152,-12}}, color={255,0,255}));
        connect(switch22.y, switch3.u1) annotation (Line(points={{113,18},{132,18},
                {132,-4},{152,-4}}, color={0,0,127}));
        connect(VAVVSctrl1.y, switch3.u3) annotation (Line(points={{123,-44},{123,
                -20},{152,-20}}, color={0,0,127}));
        connect(switch3.y, y1) annotation (Line(points={{175,-12},{192,-12},{192,
                -40},{214,-40}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, switch4.u2) annotation (Line(points={{
                121,85.3},{121,46.65},{164,46.65},{164,46}}, color={255,0,255}));
        connect(VAVVSctrl1.y, switch4.u3) annotation (Line(points={{123,-44},{142,
                -44},{142,38},{164,38}}, color={0,0,127}));
        connect(VAVVSctrl24.y, switch4.u1) annotation (Line(points={{148,69},{156,
                69},{156,54},{164,54}}, color={0,0,127}));
        connect(switch4.y, y) annotation (Line(points={{187,46},{198,46},{198,44},
                {214,44}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -100,-100},{200,120}}),                             graphics={
                Rectangle(
                extent={{-98,118},{200,-98}},
                lineColor={102,44,145},
                lineThickness=1), Text(
                extent={{-74,74},{120,-98}},
                lineColor={102,44,145},
                lineThickness=1,
                textString="Bypass ctrl
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  200,120}})));
      end bypass_ctrl;

      model group_AHU_ctrl "Controller for the (non ideal) HC coil. CAV"
        Modelica.Blocks.Interfaces.BooleanInput HCVN
          annotation (Placement(transformation(extent={{-180,40},{-140,80}})));
        Modelica.Blocks.Interfaces.BooleanInput HCVS
          annotation (Placement(transformation(extent={{-180,-80},{-140,-40}})));
        Modelica.Blocks.Interfaces.RealInput eVNheat annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-116,162})));
        Modelica.Blocks.Interfaces.RealInput Theat_ventVN annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-56,158})));
        Modelica.Blocks.Interfaces.RealInput eVSheat annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={-120,-242})));
        Modelica.Blocks.Interfaces.RealInput Theat_ventVS annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={-44,-242})));
        Modelica.Blocks.Interfaces.RealInput Tincoil_VN annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-160,0})));
        Modelica.Blocks.Sources.Constant Theat(k=273.15 + 18) annotation (
            Placement(transformation(extent={{-124,50},{-108,66}})));
        Modelica.Blocks.Logical.Switch switch_heating_mode annotation (
            Placement(transformation(extent={{-44,-6},{-24,14}})));
        Modelica.Blocks.Logical.Switch switch_mode
          annotation (Placement(transformation(extent={{100,50},{120,70}})));
        Modelica.Blocks.Logical.Switch switch_cooling_mode annotation (
            Placement(transformation(extent={{-62,50},{-42,70}})));
        Modelica.Blocks.Logical.Switch switch_mode1
          annotation (Placement(transformation(extent={{82,-34},{102,-14}})));
        Modelica.Blocks.Logical.LessEqualThreshold lessEqualThreshold(threshold=
              273.15 + 18)
          annotation (Placement(transformation(extent={{-104,20},{-84,40}})));
        Modelica.Blocks.Logical.LessEqualThreshold lessEqualThreshold1(threshold=
              273.15 + 27.5)
          annotation (Placement(transformation(extent={{-104,-10},{-84,10}})));
        Modelica.Blocks.Sources.Constant Theat1(k=273.15 + 27.5)
                                                              annotation (
            Placement(transformation(extent={{-98,-36},{-82,-20}})));
        Modelica.Blocks.Logical.Hysteresis needheat_VN(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(extent={{-100,104},{-80,124}})));
        Modelica.Blocks.Logical.Switch switch_needheat_VN
          annotation (Placement(transformation(extent={{-6,66},{14,86}})));
        Modelica.Blocks.Logical.Switch switch_needheat_VS
          annotation (Placement(transformation(extent={{26,2},{46,-18}})));
        Modelica.Blocks.Logical.Hysteresis needcoolt_OS(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(extent={{-78,-98},{-58,-78}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{282,90},{326,134}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{280,26},{324,70}})));
        Modelica.Blocks.Logical.Switch switch_needcool_VN
          annotation (Placement(transformation(extent={{64,32},{84,52}})));
        Modelica.Blocks.Logical.Hysteresis needcool_ON(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(
              extent={{10,-10},{-10,10}},
              rotation=90,
              origin={40,116})));
        Modelica.Blocks.Interfaces.RealInput eVNcool annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={30,158})));
        Modelica.Blocks.Interfaces.RealInput Tcool_ventVN annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={96,158})));
        Modelica.Blocks.Interfaces.RealInput eVScool annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={32,-242})));
        Modelica.Blocks.Interfaces.RealInput Tcool_ventVS annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={88,-240})));
        Modelica.Blocks.Logical.Switch switch_needcool_VS
          annotation (Placement(transformation(extent={{36,-50},{56,-70}})));
        Modelica.Blocks.Logical.Hysteresis needcool_VS(uLow=0.05, uHigh=0.5)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={-4,-116})));
        Modelica.Blocks.MathBoolean.And and1(nu=2)
          annotation (Placement(transformation(extent={{12,-74},{24,-62}})));
        Modelica.Blocks.Interfaces.RealInput e_vent_VNcool annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-160,-110})));
        Modelica.Blocks.MathBoolean.And and2(nu=2) annotation (Placement(
              transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={42,42})));
        Modelica.Blocks.Interfaces.RealInput e_vent_VNheat annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-158,116})));
        Modelica.Blocks.MathBoolean.And and3(nu=2) annotation (Placement(
              transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={-46,86})));
        Modelica.Blocks.MathBoolean.And and4(nu=2) annotation (Placement(
              transformation(
              extent={{-6,-6},{6,6}},
              rotation=0,
              origin={-2,-10})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0)
          annotation (Placement(transformation(extent={{-130,82},{-110,102}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{-66,104},{-58,112}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-36,-56},{-28,-48}})));
        Modelica.Blocks.MathBoolean.Not not3 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=-90,
              origin={32,86})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(
            threshold=0)
          annotation (Placement(transformation(extent={{-116,-92},{-96,-72}})));
        Modelica.Blocks.MathBoolean.Not not4 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={0,-84})));
        IDEAS.Controls.Continuous.LimPID PIDHVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0)
          annotation (Placement(transformation(extent={{140,90},{160,70}})));
        IDEAS.Controls.Continuous.LimPID PIDCVN(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0)
          annotation (Placement(transformation(extent={{140,50},{160,30}})));
        Modelica.Blocks.Interfaces.RealInput TLVN annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={176,160})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=0,
              origin={192,62})));
        Modelica.Blocks.Interfaces.RealOutput y2
          annotation (Placement(transformation(extent={{282,-48},{326,-4}})));
        Modelica.Blocks.Logical.Switch switch_mode2
          annotation (Placement(transformation(extent={{160,-84},{180,-64}})));
        Modelica.Blocks.Math.BooleanToReal booleanToRealVNH(realTrue=1, realFalse=0)
          annotation (Placement(transformation(extent={{118,-54},{134,-38}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=0)
          annotation (Placement(transformation(extent={{102,-116},{122,-96}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=if Tincoil_VN
               == PIDHVN.u_s then 0 else 1)
          annotation (Placement(transformation(extent={{64,-88},{84,-68}})));
        Modelica.Blocks.Math.RealToBoolean realToBoolean(threshold=0.5)
          annotation (Placement(transformation(extent={{102,-86},{122,-66}})));
        Modelica.Blocks.Interfaces.RealOutput y3
          annotation (Placement(transformation(extent={{282,-104},{326,-60}})));
        Modelica.Blocks.Logical.Switch switch_mode3
          annotation (Placement(transformation(extent={{164,-126},{184,-106}})));
        Modelica.Blocks.Math.BooleanToReal booleanToRealVNC(realTrue=0, realFalse=1)
          annotation (Placement(transformation(extent={{100,-134},{116,-118}})));
        Modelica.Blocks.Sources.RealExpression us(y=PIDHVN.u_s - 273.15)
          annotation (Placement(transformation(extent={{158,112},{178,132}})));
        Modelica.Blocks.Sources.RealExpression um(y=PIDHVN.u_m - 273.15)
          annotation (Placement(transformation(extent={{182,112},{202,132}})));
        IDEAS.Controls.Continuous.LimPID PIDCVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0)
          annotation (Placement(transformation(extent={{178,-14},{198,-34}})));
        Modelica.Blocks.Interfaces.RealInput TLVS annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={238,160})));
        IDEAS.Controls.Continuous.LimPID PIDHVS(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0)
          annotation (Placement(transformation(extent={{178,22},{198,2}})));
        Modelica.Blocks.Logical.Switch switch_H_C_modeVS annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={238,-4})));
        Modelica.Blocks.Interfaces.RealOutput y4
          annotation (Placement(transformation(extent={{280,-160},{324,-116}})));
        Modelica.Blocks.Interfaces.RealOutput y5
          annotation (Placement(transformation(extent={{282,-216},{326,-172}})));
        Modelica.Blocks.Logical.Switch switch_mode4
          annotation (Placement(transformation(extent={{166,-156},{186,-136}})));
        Modelica.Blocks.Logical.Switch switch_mode5
          annotation (Placement(transformation(extent={{162,-192},{182,-172}})));
        Modelica.Blocks.Math.RealToBoolean realToBoolean1(threshold=0.5)
          annotation (Placement(transformation(extent={{102,-174},{122,-154}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=if Tincoil_VN
               == PIDHVS.u_s then 0 else 1)
          annotation (Placement(transformation(extent={{70,-174},{90,-154}})));
        Modelica.Blocks.Math.BooleanToReal booleanToRealVNH1(realTrue=1,
            realFalse=0)
          annotation (Placement(transformation(extent={{74,-146},{90,-130}})));
        Modelica.Blocks.Math.BooleanToReal booleanToRealVNH2(realTrue=0,
            realFalse=1)
          annotation (Placement(transformation(extent={{78,-206},{94,-190}})));
        Modelica.Blocks.Interfaces.RealOutput VNus annotation (Placement(
              transformation(
              extent={{22,-22},{-22,22}},
              rotation=90,
              origin={172,-244})));
        Modelica.Blocks.Interfaces.RealOutput VSus annotation (Placement(
              transformation(
              extent={{22,-22},{-22,22}},
              rotation=90,
              origin={238,-242})));
        Modelica.Blocks.Sources.RealExpression us1(y=PIDHVN.u_s)
          annotation (Placement(transformation(extent={{146,-218},{166,-198}})));
        Modelica.Blocks.Sources.RealExpression um1(y=PIDHVS.u_s)
          annotation (Placement(transformation(extent={{202,-214},{222,-194}})));
      equation
        connect(Theat.y,switch_cooling_mode. u1) annotation (Line(points={{-107.2,
                58},{-88.6,58},{-88.6,68},{-64,68}},               color={0,0,
                127}));
        connect(lessEqualThreshold.y, switch_cooling_mode.u2) annotation (Line(
              points={{-83,30},{-78,30},{-78,60},{-64,60}}, color={255,0,255}));
        connect(lessEqualThreshold1.y, switch_heating_mode.u2)
          annotation (Line(points={{-83,0},{-60,0},{-60,4},{-46,4}},
                                                       color={255,0,255}));
        connect(Theat1.y, switch_heating_mode.u3) annotation (Line(points={{-81.2,
                -28},{-50,-28},{-50,-4},{-46,-4}},   color={0,0,127}));
        connect(switch_mode.u1, switch_needheat_VN.y) annotation (Line(points={{98,68},
                {42,68},{42,76},{15,76}},        color={0,0,127}));
        connect(switch_needheat_VS.y, switch_mode1.u1) annotation (Line(points={{47,-8},
                {54,-8},{54,-16},{80,-16}},        color={0,0,127}));
        connect(eVNheat, needheat_VN.u) annotation (Line(points={{-116,162},{-116,134},
                {-114,134},{-114,114},{-102,114}}, color={0,0,127}));
        connect(switch_mode.u2, HCVN)
          annotation (Line(points={{98,60},{-160,60}}, color={255,0,255}));
        connect(switch_mode1.u2, HCVS) annotation (Line(points={{80,-24},{-46,-24},{-46,
                -60},{-160,-60}}, color={255,0,255}));
        connect(Tincoil_VN, lessEqualThreshold1.u)
          annotation (Line(points={{-160,0},{-106,0}}, color={0,0,127}));
        connect(Tincoil_VN, lessEqualThreshold.u) annotation (Line(points={{-160,1.11022e-15},
                {-126,1.11022e-15},{-126,30},{-106,30}}, color={0,0,127}));
        connect(Tincoil_VN, switch_cooling_mode.u3) annotation (Line(points={{-160,1.11022e-15},
                {-65,1.11022e-15},{-65,52},{-64,52}}, color={0,0,127}));
        connect(Tincoil_VN, switch_heating_mode.u1) annotation (Line(points={{-160,1.11022e-15},
                {-58,1.11022e-15},{-58,12},{-46,12}}, color={0,0,127}));
        connect(eVSheat, needcoolt_OS.u) annotation (Line(points={{-120,-242},{
                -82,-242},{-82,-88},{-80,-88}}, color={0,0,127}));
        connect(switch_mode.u3, switch_needcool_VN.y) annotation (Line(points={{
                98,52},{86,52},{86,42},{85,42}}, color={0,0,127}));
        connect(eVNcool, needcool_ON.u) annotation (Line(points={{30,158},{30,142},
                {40,142},{40,128}}, color={0,0,127}));
        connect(switch_mode1.u3, switch_needcool_VS.y) annotation (Line(points={{
                80,-32},{74,-32},{74,-60},{57,-60}}, color={0,0,127}));
        connect(eVScool, needcool_VS.u)
          annotation (Line(points={{32,-242},{-4,-242},{-4,-128}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, and3.u[1]) annotation (Line(points={{
                -109,92},{-78,92},{-78,88.1},{-52,88.1}}, color={255,0,255}));
        connect(e_vent_VNheat, greaterEqualThreshold.u) annotation (Line(points={{-158,
                116},{-144,116},{-144,92},{-132,92}}, color={0,0,127}));
        connect(Theat_ventVN, switch_needheat_VN.u1) annotation (Line(points={{-56,158},
                {-56,122},{-8,122},{-8,84}}, color={0,0,127}));
        connect(switch_cooling_mode.y, switch_needheat_VN.u3) annotation (Line(
              points={{-41,60},{-24,60},{-24,68},{-8,68}}, color={0,0,127}));
        connect(not1.y, and3.u[2]) annotation (Line(points={{-57.2,108},{-54,108},
                {-54,83.9},{-52,83.9}}, color={255,0,255}));
        connect(needheat_VN.y, not1.u) annotation (Line(points={{-79,114},{-73.5,
                114},{-73.5,108},{-67.6,108}}, color={255,0,255}));
        connect(and3.y, switch_needheat_VN.u2) annotation (Line(points={{-39.1,86},
                {-24,86},{-24,76},{-8,76}}, color={255,0,255}));
        connect(switch_needheat_VS.u1, Theat_ventVS) annotation (Line(points={{24,-16},
                {-42,-16},{-42,-242},{-44,-242}}, color={0,0,127}));
        connect(and4.y, switch_needheat_VS.u2) annotation (Line(points={{4.9,-10},
                {14,-10},{14,-8},{24,-8}}, color={255,0,255}));
        connect(not2.y, and4.u[1]) annotation (Line(points={{-27.2,-52},{-27.2,
                -33},{-8,-33},{-8,-7.9}}, color={255,0,255}));
        connect(needcoolt_OS.y, not2.u) annotation (Line(points={{-57,-88},{-46,
                -88},{-46,-52},{-37.6,-52}}, color={255,0,255}));
        connect(greaterEqualThreshold.y, and4.u[2]) annotation (Line(points={{
                -109,92},{-75.5,92},{-75.5,-12.1},{-8,-12.1}}, color={255,0,255}));
        connect(switch_needcool_VN.u1, Tcool_ventVN) annotation (Line(points={{62,50},
                {80,50},{80,158},{96,158}}, color={0,0,127}));
        connect(and2.y, switch_needcool_VN.u2) annotation (Line(points={{48.9,42},
                {62,42}},                       color={255,0,255}));
        connect(needcool_ON.y, not3.u) annotation (Line(points={{40,105},{32,105},
                {32,91.6}}, color={255,0,255}));
        connect(not3.y, and2.u[1]) annotation (Line(points={{32,81.2},{36,81.2},{
                36,44.1}}, color={255,0,255}));
        connect(e_vent_VNcool, greaterEqualThreshold1.u) annotation (Line(points={{-160,
                -110},{-142,-110},{-142,-82},{-118,-82}}, color={0,0,127}));
        connect(greaterEqualThreshold1.y, and2.u[2]) annotation (Line(points={{
                -95,-82},{-30,-82},{-30,39.9},{36,39.9}}, color={255,0,255}));
        connect(switch_heating_mode.y, switch_needcool_VN.u3) annotation (Line(
              points={{-23,4},{19.5,4},{19.5,34},{62,34}}, color={0,0,127}));
        connect(switch_cooling_mode.y, switch_needheat_VS.u3) annotation (Line(
              points={{-41,60},{-8,60},{-8,0},{24,0}}, color={0,0,127}));
        connect(switch_needcool_VS.u1, Tcool_ventVS) annotation (Line(points={{34,-68},
                {60,-68},{60,-240},{88,-240}}, color={0,0,127}));
        connect(and1.y, switch_needcool_VS.u2) annotation (Line(points={{24.9,-68},
                {30,-68},{30,-60},{34,-60}}, color={255,0,255}));
        connect(not4.y, and1.u[1]) annotation (Line(points={{4.44089e-16,-79.2},{
                -1,-79.2},{-1,-65.9},{12,-65.9}}, color={255,0,255}));
        connect(needcool_VS.y, not4.u) annotation (Line(points={{-4,-105},{-4,
                -99.5},{-4.44089e-16,-99.5},{-4.44089e-16,-89.6}}, color={255,0,
                255}));
        connect(greaterEqualThreshold1.y, and1.u[2]) annotation (Line(points={{
                -95,-82},{-42,-82},{-42,-70.1},{12,-70.1}}, color={255,0,255}));
        connect(switch_needcool_VS.u3, switch_heating_mode.y) annotation (Line(
              points={{34,-52},{6,-52},{6,4},{-23,4}}, color={0,0,127}));
        connect(switch_mode.y, PIDHVN.u_s) annotation (Line(points={{121,60},{126,
                60},{126,80},{138,80}}, color={0,0,127}));
        connect(switch_mode.y, PIDCVN.u_s) annotation (Line(points={{121,60},{121,
                50},{138,50},{138,40}}, color={0,0,127}));
        connect(TLVN, PIDHVN.u_m) annotation (Line(points={{176,160},{148,160},{
                148,92},{150,92}}, color={0,0,127}));
        connect(PIDHVN.u_m, PIDCVN.u_m)
          annotation (Line(points={{150,92},{150,52}}, color={0,0,127}));
        connect(switch_H_C_mode.y, y) annotation (Line(points={{203,62},{218,62},
                {218,112},{304,112}},
                                 color={0,0,127}));
        connect(HCVN, booleanToRealVNH.u) annotation (Line(points={{-160,60},{-28,
                60},{-28,-50},{116.4,-50},{116.4,-46}},
                                                    color={255,0,255}));
        connect(switch_mode2.y, y2) annotation (Line(points={{181,-74},{212,-74},
                {212,-26},{304,-26}},
                                 color={0,0,127}));
        connect(booleanToRealVNH.y, switch_mode2.u1) annotation (Line(points={{134.8,-46},
                {146.4,-46},{146.4,-66},{158,-66}}, color={0,0,127}));
        connect(realExpression.y, switch_mode2.u3) annotation (Line(points={{123,-106},
                {140,-106},{140,-82},{158,-82}}, color={0,0,127}));
        connect(realToBoolean.y, switch_mode2.u2) annotation (Line(points={{123,-76},
                {158,-76},{158,-74}},                    color={255,0,255}));
        connect(realExpression1.y, realToBoolean.u) annotation (Line(points={{85,-78},
                {94,-78},{94,-76},{100,-76}}, color={0,0,127}));
        connect(switch_mode3.y, y3) annotation (Line(points={{185,-116},{218,-116},
                {218,-82},{304,-82}},
                                   color={0,0,127}));
        connect(booleanToRealVNH.u, booleanToRealVNC.u) annotation (Line(points={{116.4,
                -46},{92,-46},{92,-126},{98.4,-126}},  color={255,0,255}));
        connect(booleanToRealVNC.y, switch_mode3.u1) annotation (Line(points={{116.8,
                -126},{142,-126},{142,-108},{162,-108}},
                                                   color={0,0,127}));
        connect(realExpression.y, switch_mode3.u3) annotation (Line(points={{123,
                -106},{140,-106},{140,-124},{162,-124}},
                                                   color={0,0,127}));
        connect(realToBoolean.y, switch_mode3.u2) annotation (Line(points={{123,-76},
                {142,-76},{142,-116},{162,-116}},color={255,0,255}));
        connect(y1, y1)
          annotation (Line(points={{302,48},{302,48}}, color={0,0,127}));
        connect(TLVS, PIDHVS.u_m) annotation (Line(points={{238,160},{188,160},{
                188,24}}, color={0,0,127}));
        connect(PIDHVS.u_m, PIDCVS.u_m)
          annotation (Line(points={{188,24},{188,-12}}, color={0,0,127}));
        connect(switch_mode1.y, PIDHVS.u_s) annotation (Line(points={{103,-24},{
                130,-24},{130,12},{176,12}}, color={0,0,127}));
        connect(switch_mode1.y, PIDCVS.u_s)
          annotation (Line(points={{103,-24},{176,-24}}, color={0,0,127}));
        connect(PIDHVN.y, switch_H_C_mode.u1) annotation (Line(points={{161,80},{
                170,80},{170,70},{180,70}}, color={0,0,127}));
        connect(PIDCVN.y, switch_H_C_mode.u3) annotation (Line(points={{161,40},{
                170,40},{170,54},{180,54}}, color={0,0,127}));
        connect(switch_mode.u2, switch_H_C_mode.u2) annotation (Line(points={{98,
                60},{140,60},{140,62},{180,62}}, color={255,0,255}));
        connect(switch_mode1.u2, switch_H_C_modeVS.u2) annotation (Line(points={{
                80,-24},{94,-24},{94,-4},{226,-4}}, color={255,0,255}));
        connect(PIDHVS.y, switch_H_C_modeVS.u1) annotation (Line(points={{199,12},
                {212,12},{212,4},{226,4}}, color={0,0,127}));
        connect(PIDCVS.y, switch_H_C_modeVS.u3) annotation (Line(points={{199,-24},
                {212,-24},{212,-12},{226,-12}}, color={0,0,127}));
        connect(switch_H_C_modeVS.y, y1) annotation (Line(points={{249,-4},{249,
                47},{302,47},{302,48}}, color={0,0,127}));
        connect(switch_mode4.y, y4) annotation (Line(points={{187,-146},{236,-146},
                {236,-138},{302,-138}}, color={0,0,127}));
        connect(switch_mode5.y, y5) annotation (Line(points={{183,-182},{238.5,
                -182},{238.5,-194},{304,-194}}, color={0,0,127}));
        connect(realToBoolean1.y, switch_mode4.u2) annotation (Line(points={{123,
                -164},{142,-164},{142,-146},{164,-146}}, color={255,0,255}));
        connect(realToBoolean1.y, switch_mode5.u2) annotation (Line(points={{123,
                -164},{142,-164},{142,-182},{160,-182}}, color={255,0,255}));
        connect(realExpression2.y, realToBoolean1.u)
          annotation (Line(points={{91,-164},{100,-164}}, color={0,0,127}));
        connect(realExpression.y, switch_mode4.u3) annotation (Line(points={{123,
                -106},{144,-106},{144,-154},{164,-154}}, color={0,0,127}));
        connect(realExpression.y, switch_mode5.u3) annotation (Line(points={{123,
                -106},{132,-106},{132,-190},{160,-190}}, color={0,0,127}));
        connect(booleanToRealVNH2.y, switch_mode5.u1) annotation (Line(points={{
                94.8,-198},{128,-198},{128,-174},{160,-174}}, color={0,0,127}));
        connect(booleanToRealVNH1.y, switch_mode4.u1)
          annotation (Line(points={{90.8,-138},{164,-138}}, color={0,0,127}));
        connect(HCVS, booleanToRealVNH1.u) annotation (Line(points={{-160,-60},{
                -128,-60},{-128,-138},{72.4,-138}}, color={255,0,255}));
        connect(booleanToRealVNH1.u, booleanToRealVNH2.u) annotation (Line(points=
               {{72.4,-138},{50,-138},{50,-198},{76.4,-198}}, color={255,0,255}));
        connect(us1.y, VNus) annotation (Line(points={{167,-208},{172,-208},{172,
                -244},{172,-244}}, color={0,0,127}));
        connect(um1.y, VSus) annotation (Line(points={{223,-204},{230,-204},{230,
                -242},{238,-242}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-140,
                  -220},{280,140}}),      graphics={Rectangle(
                extent={{-138,140},{280,-218}},
                lineColor={244,125,35},
                lineThickness=1), Text(
                extent={{-122,78},{126,-120}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="AHU_ctrl

")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-140,-220},{
                  280,140}})));
      end group_AHU_ctrl;

      model _2way_AHU_ctrl
        "Model to control the two 2wayvalves for hot and cold circuit connection to AHU"
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,30},{144,74}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{100,-62},{144,-18}})));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end _2way_AHU_ctrl;

      model ppm_ctrl_O "Only ventilate during occupied hours"
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-82,70},{-62,90}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-34},{136,2}})));
        Modelica.Blocks.Interfaces.RealInput dpsupplynominal annotation (
            Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={10,122})));
        Modelica.Blocks.Interfaces.RealOutput dpsupply
          annotation (Placement(transformation(extent={{100,64},{136,100}})));
        Modelica.Blocks.Math.MultiProduct multiProduct(nu=2)
          annotation (Placement(transformation(extent={{74,68},{86,80}})));
        Modelica.Blocks.Interfaces.RealOutput dpreturn
          annotation (Placement(transformation(extent={{102,12},{138,48}})));
        Modelica.Blocks.Interfaces.RealInput dpreturnnominal annotation (
            Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={60,122})));
        Modelica.Blocks.Math.MultiProduct multiProduct1(nu=2)
          annotation (Placement(transformation(extent={{82,26},{94,38}})));
         Modelica.Blocks.Sources.RealExpression occ(y=if calTim.weekDay < 6 and (
              calTim.hour > 6 and calTim.hour < 18) then 1 else 1)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-34,-52},{-14,-32}})));
        Modelica.Blocks.Interfaces.RealInput needheat annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-120,22})));
        Modelica.Blocks.Interfaces.RealInput needcool annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-120,-24})));
        Modelica.Blocks.Logical.Hysteresis true_not_needheat_VN(uLow=0.05, uHigh=
              0.5)
          annotation (Placement(transformation(extent={{-76,14},{-56,34}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{-46,20},{-38,28}})));
        Modelica.Blocks.MathBoolean.Or or1(nu=2)
          annotation (Placement(transformation(extent={{-18,-12},{-6,0}})));
        Modelica.Blocks.Logical.Hysteresis true_not_needheat_VN1(uLow=0.05, uHigh=
             0.5)
          annotation (Placement(transformation(extent={{-84,-34},{-64,-14}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-54,-26},{-46,-18}})));
        Modelica.Blocks.Logical.Switch switch1
          annotation (Placement(transformation(extent={{10,-16},{30,4}})));
         Modelica.Blocks.Sources.RealExpression occ1(y=1)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-26,14},{-6,34}})));
      equation
        connect(dpsupplynominal, multiProduct.u[1]) annotation (Line(points={{10,
                122},{10,76.1},{74,76.1}}, color={0,0,127}));
        connect(y, multiProduct.u[2]) annotation (Line(points={{118,-16},{68,-16},
                {68,71.9},{74,71.9}}, color={0,0,127}));
        connect(multiProduct.y, dpsupply) annotation (Line(points={{87.02,74},{
                93.51,74},{93.51,82},{118,82}}, color={0,0,127}));
        connect(y, multiProduct1.u[1]) annotation (Line(points={{118,-16},{82,-16},
                {82,34.1}}, color={0,0,127}));
        connect(dpreturnnominal, multiProduct1.u[2]) annotation (Line(points={{60,
                122},{60,29.9},{82,29.9}}, color={0,0,127}));
        connect(multiProduct1.y, dpreturn) annotation (Line(points={{95.02,32},{
                100,32},{100,30},{120,30}}, color={0,0,127}));
        connect(needheat, true_not_needheat_VN.u) annotation (Line(points={{-120,22},{
                -100,22},{-100,24},{-78,24}},      color={0,0,127}));
        connect(true_not_needheat_VN.y, not1.u)
          annotation (Line(points={{-55,24},{-47.6,24}}, color={255,0,255}));
        connect(not1.y, or1.u[1]) annotation (Line(points={{-37.2,24},{-30,24},{
                -30,-3.9},{-18,-3.9}}, color={255,0,255}));
        connect(needcool, true_not_needheat_VN1.u)
          annotation (Line(points={{-120,-24},{-86,-24}}, color={0,0,127}));
        connect(true_not_needheat_VN1.y, not2.u) annotation (Line(points={{-63,
                -24},{-60,-24},{-60,-22},{-55.6,-22}}, color={255,0,255}));
        connect(not2.y, or1.u[2]) annotation (Line(points={{-45.2,-22},{-32,-22},
                {-32,-8.1},{-18,-8.1}}, color={255,0,255}));
        connect(or1.y, switch1.u2) annotation (Line(points={{-5.1,-6},{2,-6},{2,
                -6},{8,-6}}, color={255,0,255}));
        connect(occ.y, switch1.u3) annotation (Line(points={{-13,-42},{-13,-27},{
                8,-27},{8,-14}}, color={0,0,127}));
        connect(switch1.y, y) annotation (Line(points={{31,-6},{63.5,-6},{63.5,
                -16},{118,-16}}, color={0,0,127}));
        connect(occ1.y, switch1.u1) annotation (Line(points={{-5,24},{2,24},{2,2},
                {8,2}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={217,67,180},
                lineThickness=1), Text(
                extent={{-64,56},{50,-48}},
                lineColor={217,67,180},
                lineThickness=1,
                textString="ppm ctrl
")}),   Diagram(coordinateSystem(preserveAspectRatio=false)));
      end ppm_ctrl_O;

      model bypass_ctrl_old
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{200,30},{228,58}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{200,-54},{228,-26}})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl22(y=1)
          annotation (Placement(transformation(extent={{-96,-2},{-76,18}})));
        Modelica.Blocks.Logical.Switch switch22
          annotation (Placement(transformation(extent={{92,8},{112,28}})));
        Modelica.Blocks.Logical.Switch switch23
          annotation (Placement(transformation(extent={{60,34},{80,54}})));
        Modelica.Blocks.Logical.Hysteresis true_outside_hotter(uLow=-0.25, uHigh=
              0.25) annotation (Placement(transformation(
              extent={{10,10},{-10,-10}},
              rotation=180,
              origin={-2,40})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl23(y=0)
          annotation (Placement(transformation(extent={{-98,48},{-78,68}})));
        Modelica.Blocks.Logical.Switch switch24
          annotation (Placement(transformation(extent={{64,-20},{84,0}})));
        Modelica.Blocks.Sources.RealExpression VAVVSctrl24(y=if switch22.y < 0.5
               then 1 else 0)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={148,80})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{-138,-48},{-98,-8}})));
        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{-140,16},{-100,56}})));
      equation
        connect(y, y)
          annotation (Line(points={{214,44},{214,44}}, color={0,0,127}));
        connect(switch23.y, switch22.u1) annotation (Line(points={{81,44},{82,44},
                {82,26},{90,26}}, color={0,0,127}));
        connect(true_outside_hotter.y, switch23.u2) annotation (Line(points={{9,
                40},{36,40},{36,44},{58,44}}, color={255,0,255}));
        connect(VAVVSctrl22.y, switch23.u3) annotation (Line(points={{-75,8},{16,
                8},{16,36},{58,36}},color={0,0,127}));
        connect(true_outside_hotter.y, switch24.u2) annotation (Line(points={{9,
                40},{20,40},{20,-10},{62,-10}}, color={255,0,255}));
        connect(VAVVSctrl22.y, switch24.u1) annotation (Line(points={{-75,8},{-20,
                8},{-20,-2},{62,-2}},color={0,0,127}));
        connect(switch24.y, switch22.u3) annotation (Line(points={{85,-10},{85.5,
                -10},{85.5,10},{90,10}}, color={0,0,127}));
        connect(u, switch22.u2) annotation (Line(points={{-118,-28},{-10,-28},{
                -10,18},{90,18}}, color={255,0,255}));
        connect(u1, true_outside_hotter.u) annotation (Line(points={{-120,36},{
                -72,36},{-72,40},{-14,40}}, color={0,0,127}));
        connect(VAVVSctrl24.y, y) annotation (Line(points={{148,69},{178,69},{178,
                44},{214,44}}, color={0,0,127}));
        connect(switch24.u3, VAVVSctrl23.y) annotation (Line(points={{62,-18},{
                -40,-18},{-40,58},{-77,58}}, color={0,0,127}));
        connect(switch23.u1, VAVVSctrl23.y) annotation (Line(points={{58,52},{40,
                52},{40,58},{-77,58}}, color={0,0,127}));
        connect(switch22.y, y1) annotation (Line(points={{113,18},{160,18},{160,
                -40},{214,-40}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -100,-100},{200,120}}),                             graphics={
                Rectangle(
                extent={{-98,118},{200,-98}},
                lineColor={102,44,145},
                lineThickness=1), Text(
                extent={{-74,74},{120,-98}},
                lineColor={102,44,145},
                lineThickness=1,
                textString="Bypass ctrl
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  200,120}})));
      end bypass_ctrl_old;

      model ppm_ctrl_V "Only ventilate during occupied hours"
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-88,78},{-68,98}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-24},{136,12}})));
        Modelica.Blocks.Interfaces.RealInput dpsupplynominal annotation (
            Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={10,122})));
        Modelica.Blocks.Interfaces.RealOutput dpsupply
          annotation (Placement(transformation(extent={{100,64},{136,100}})));
        Modelica.Blocks.Math.MultiProduct multiProduct(nu=2)
          annotation (Placement(transformation(extent={{74,68},{86,80}})));
        Modelica.Blocks.Interfaces.RealOutput dpreturn
          annotation (Placement(transformation(extent={{102,12},{138,48}})));
        Modelica.Blocks.Interfaces.RealInput dpreturnnominal annotation (
            Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={60,122})));
        Modelica.Blocks.Math.MultiProduct multiProduct1(nu=2)
          annotation (Placement(transformation(extent={{82,26},{94,38}})));
         Modelica.Blocks.Sources.RealExpression occ(y=if (calTim.weekDay < 6 and
              (calTim.hour > 13 or calTim.hour < 10)) or (calTim.weekDay == 7
               and calTim.hour > 16) then 0.5 else 0.005)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-48,12},{-28,32}})));
        Modelica.Blocks.Interfaces.RealInput needheatVN annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-122,84})));
        Modelica.Blocks.Interfaces.RealInput needcoolVN annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-120,18})));
        Modelica.Blocks.Logical.Hysteresis true_not_needheat_VN(uLow=0.05, uHigh=
              0.5)
          annotation (Placement(transformation(extent={{-88,48},{-68,68}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{-46,50},{-38,58}})));
        Modelica.Blocks.Logical.Hysteresis true_not_needcool_VN(uLow=0.05, uHigh=
              0.5)
          annotation (Placement(transformation(extent={{-88,4},{-72,20}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-60,26},{-52,34}})));
        Modelica.Blocks.Logical.Switch switchVN
          annotation (Placement(transformation(extent={{2,34},{22,54}})));
         Modelica.Blocks.Sources.RealExpression occ1(y=0.5)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-46,68},{-26,88}})));
        Modelica.Blocks.Math.MultiSum multiSum(nu=2)
          annotation (Placement(transformation(extent={{42,-22},{54,-10}})));
        Modelica.Blocks.Logical.Switch switchVS
          annotation (Placement(transformation(extent={{4,-68},{24,-48}})));
         Modelica.Blocks.Sources.RealExpression occ2(y=0.5)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-32,-20},{-12,0}})));
         Modelica.Blocks.Sources.RealExpression occ3(y=if (calTim.weekDay < 6
               and (calTim.hour > 13 or calTim.hour < 10)) or (calTim.weekDay ==
              7 and calTim.hour > 16) then 0.5 else 0.005)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-44,-104},{-24,-84}})));
        Modelica.Blocks.Interfaces.RealOutput VAV_VN
          annotation (Placement(transformation(extent={{100,-64},{136,-28}})));
        Modelica.Blocks.Interfaces.RealOutput VAV_VS
          annotation (Placement(transformation(extent={{100,-110},{136,-74}})));
        Modelica.Blocks.Math.Gain gain(k=2)
          annotation (Placement(transformation(extent={{66,-52},{80,-38}})));
        Modelica.Blocks.Math.Gain gain1(k=2)
          annotation (Placement(transformation(extent={{66,-84},{80,-70}})));
        Modelica.Blocks.Logical.Or or1
          annotation (Placement(transformation(extent={{-30,40},{-20,50}})));
        Modelica.Blocks.Interfaces.RealInput needheatVS annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-120,-32})));
        Modelica.Blocks.Interfaces.RealInput needcoolVS annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-122,-94})));
        Modelica.Blocks.Logical.Hysteresis true_not_needheat_VS(uLow=0.05, uHigh=
              0.5)
          annotation (Placement(transformation(extent={{-80,-50},{-64,-34}})));
        Modelica.Blocks.Logical.Or or2
          annotation (Placement(transformation(extent={{-20,-62},{-10,-52}})));
        Modelica.Blocks.MathBoolean.Not not3
          annotation (Placement(transformation(extent={{-40,-52},{-32,-44}})));
        Modelica.Blocks.Logical.Hysteresis true_not_needcool_VS(uLow=0.05, uHigh=
              0.5)
          annotation (Placement(transformation(extent={{-80,-88},{-64,-72}})));
        Modelica.Blocks.MathBoolean.Not not4
          annotation (Placement(transformation(extent={{-50,-82},{-42,-74}})));
      equation
        connect(dpsupplynominal, multiProduct.u[1]) annotation (Line(points={{10,
                122},{10,76.1},{74,76.1}}, color={0,0,127}));
        connect(y, multiProduct.u[2]) annotation (Line(points={{118,-6},{68,-6},{
                68,71.9},{74,71.9}},  color={0,0,127}));
        connect(multiProduct.y, dpsupply) annotation (Line(points={{87.02,74},{
                93.51,74},{93.51,82},{118,82}}, color={0,0,127}));
        connect(y, multiProduct1.u[1]) annotation (Line(points={{118,-6},{82,-6},
                {82,34.1}}, color={0,0,127}));
        connect(dpreturnnominal, multiProduct1.u[2]) annotation (Line(points={{60,
                122},{60,29.9},{82,29.9}}, color={0,0,127}));
        connect(multiProduct1.y, dpreturn) annotation (Line(points={{95.02,32},{
                100,32},{100,30},{120,30}}, color={0,0,127}));
        connect(needheatVN, true_not_needheat_VN.u) annotation (Line(points={{
                -122,84},{-100,84},{-100,58},{-90,58}}, color={0,0,127}));
        connect(true_not_needheat_VN.y, not1.u)
          annotation (Line(points={{-67,58},{-58,58},{-58,54},{-47.6,54}},
                                                         color={255,0,255}));
        connect(needcoolVN, true_not_needcool_VN.u) annotation (Line(points={{
                -120,18},{-104,18},{-104,12},{-89.6,12}}, color={0,0,127}));
        connect(true_not_needcool_VN.y, not2.u) annotation (Line(points={{-71.2,
                12},{-66,12},{-66,30},{-61.6,30}}, color={255,0,255}));
        connect(occ.y, switchVN.u3) annotation (Line(points={{-27,22},{-27,23},{0,
                23},{0,36}}, color={0,0,127}));
        connect(occ1.y, switchVN.u1)
          annotation (Line(points={{-25,78},{0,78},{0,52}}, color={0,0,127}));
        connect(multiSum.y, y) annotation (Line(points={{55.02,-16},{86,-16},{86,
                -6},{118,-6}}, color={0,0,127}));
        connect(switchVN.y, multiSum.u[1]) annotation (Line(points={{23,44},{38,
                44},{38,-13.9},{42,-13.9}}, color={0,0,127}));
        connect(switchVS.y, multiSum.u[2]) annotation (Line(points={{25,-58},{28,
                -58},{28,-18.1},{42,-18.1}}, color={0,0,127}));
        connect(occ2.y, switchVS.u1) annotation (Line(points={{-11,-10},{-4,-10},
                {-4,-50},{2,-50}}, color={0,0,127}));
        connect(occ3.y, switchVS.u3) annotation (Line(points={{-23,-94},{-4,-94},
                {-4,-66},{2,-66}}, color={0,0,127}));
        connect(gain.y, VAV_VN) annotation (Line(points={{80.7,-45},{94.35,-45},{
                94.35,-46},{118,-46}}, color={0,0,127}));
        connect(gain1.y, VAV_VS) annotation (Line(points={{80.7,-77},{95.35,-77},
                {95.35,-92},{118,-92}}, color={0,0,127}));
        connect(switchVN.y, gain.u) annotation (Line(points={{23,44},{58,44},{58,
                -46},{64.6,-46},{64.6,-45}}, color={0,0,127}));
        connect(switchVS.y, gain1.u) annotation (Line(points={{25,-58},{28,-58},{
                28,-77},{64.6,-77}}, color={0,0,127}));
        connect(or1.y, switchVN.u2) annotation (Line(points={{-19.5,45},{-9.75,45},
                {-9.75,44},{0,44}}, color={255,0,255}));
        connect(or1.u2, not2.y) annotation (Line(points={{-31,41},{-44.5,41},{
                -44.5,30},{-51.2,30}}, color={255,0,255}));
        connect(or1.u1, not1.y) annotation (Line(points={{-31,45},{-31,53.5},{
                -37.2,53.5},{-37.2,54}}, color={255,0,255}));
        connect(or2.y, switchVS.u2) annotation (Line(points={{-9.5,-57},{-2.75,
                -57},{-2.75,-58},{2,-58}}, color={255,0,255}));
        connect(not3.y, or2.u1) annotation (Line(points={{-31.2,-48},{-26,-48},{
                -26,-57},{-21,-57}}, color={255,0,255}));
        connect(not3.u, true_not_needheat_VS.y) annotation (Line(points={{-41.6,
                -48},{-56,-48},{-56,-42},{-63.2,-42}}, color={255,0,255}));
        connect(needheatVS, true_not_needheat_VS.u) annotation (Line(points={{
                -120,-32},{-99,-32},{-99,-42},{-81.6,-42}}, color={0,0,127}));
        connect(not4.y, or2.u2) annotation (Line(points={{-41.2,-78},{-32,-78},{
                -32,-61},{-21,-61}}, color={255,0,255}));
        connect(not4.u, true_not_needcool_VS.y) annotation (Line(points={{-51.6,
                -78},{-58,-78},{-58,-80},{-63.2,-80}}, color={255,0,255}));
        connect(needcoolVS, true_not_needcool_VS.u) annotation (Line(points={{
                -122,-94},{-100,-94},{-100,-80},{-81.6,-80}}, color={0,0,127}));
        connect(y, y)
          annotation (Line(points={{118,-6},{118,-6}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={217,67,180},
                lineThickness=1), Text(
                extent={{-64,56},{50,-48}},
                lineColor={217,67,180},
                lineThickness=1,
                textString="ppm ctrl
")}),   Diagram(coordinateSystem(preserveAspectRatio=false)));
      end ppm_ctrl_V;

      model ppm_ctrl_O_advanced "Only ventilate during occupied hours"
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-80,78},{-60,98}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-20},{136,16}})));
        Modelica.Blocks.Interfaces.RealInput dpsupplynominal annotation (
            Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={10,122})));
        Modelica.Blocks.Interfaces.RealOutput dpsupply
          annotation (Placement(transformation(extent={{100,70},{136,106}})));
        Modelica.Blocks.Math.MultiProduct multiProduct(nu=2)
          annotation (Placement(transformation(extent={{74,68},{86,80}})));
        Modelica.Blocks.Interfaces.RealOutput dpreturn
          annotation (Placement(transformation(extent={{102,22},{138,58}})));
        Modelica.Blocks.Interfaces.RealInput dpreturnnominal annotation (
            Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={60,122})));
        Modelica.Blocks.Math.MultiProduct multiProduct1(nu=2)
          annotation (Placement(transformation(extent={{82,26},{94,38}})));
         Modelica.Blocks.Sources.RealExpression occ(y=if calTim.weekDay < 6 and (
              calTim.hour > 6 and calTim.hour < 18) then 0.5 else 0.005)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-48,-6},{-28,14}})));
        Modelica.Blocks.Interfaces.RealInput needheatON annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-120,90})));
        Modelica.Blocks.Interfaces.RealInput needcoolON annotation (Placement(
              transformation(
              extent={{20,-20},{-20,20}},
              rotation=180,
              origin={-120,22})));
        Modelica.Blocks.Logical.Hysteresis true_not_needheat_VN(uLow=0.05, uHigh=
              0.5)
          annotation (Placement(transformation(extent={{-86,50},{-66,70}})));
        Modelica.Blocks.MathBoolean.Not not1
          annotation (Placement(transformation(extent={{-50,56},{-42,64}})));
        Modelica.Blocks.Logical.Hysteresis true_not_needheat_VN1(uLow=0.05, uHigh=
             0.5)
          annotation (Placement(transformation(extent={{-84,10},{-64,30}})));
        Modelica.Blocks.MathBoolean.Not not2
          annotation (Placement(transformation(extent={{-52,16},{-44,24}})));
        Modelica.Blocks.Logical.Switch switchON
          annotation (Placement(transformation(extent={{4,36},{24,56}})));
         Modelica.Blocks.Sources.RealExpression occ1(y=0.5)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-36,72},{-16,92}})));
        Modelica.Blocks.Math.MultiSum multiSum(nu=2)
          annotation (Placement(transformation(extent={{44,-14},{56,-2}})));
        Modelica.Blocks.Logical.Or or1
          annotation (Placement(transformation(extent={{-24,42},{-14,52}})));
         Modelica.Blocks.Sources.RealExpression occ2(y=0.5)
          "Number of occupants present"
           annotation (Placement(transformation(extent={{-46,-26},{-26,-6}})));
        Modelica.Blocks.Interfaces.RealOutput VAV_VN
          annotation (Placement(transformation(extent={{100,-66},{136,-30}})));
        Modelica.Blocks.Interfaces.RealOutput VAV_VS
          annotation (Placement(transformation(extent={{100,-110},{136,-74}})));
        Modelica.Blocks.Math.Gain gain1(k=2)
          annotation (Placement(transformation(extent={{66,-84},{80,-70}})));
        Modelica.Blocks.Math.Gain gain2(k=2)
          annotation (Placement(transformation(extent={{62,-56},{76,-42}})));
      equation
        connect(dpsupplynominal, multiProduct.u[1]) annotation (Line(points={{10,
                122},{10,76.1},{74,76.1}}, color={0,0,127}));
        connect(y, multiProduct.u[2]) annotation (Line(points={{118,-2},{68,-2},{
                68,71.9},{74,71.9}},  color={0,0,127}));
        connect(multiProduct.y, dpsupply) annotation (Line(points={{87.02,74},{
                93.51,74},{93.51,88},{118,88}}, color={0,0,127}));
        connect(y, multiProduct1.u[1]) annotation (Line(points={{118,-2},{82,-2},
                {82,34.1}}, color={0,0,127}));
        connect(dpreturnnominal, multiProduct1.u[2]) annotation (Line(points={{60,
                122},{60,29.9},{82,29.9}}, color={0,0,127}));
        connect(multiProduct1.y, dpreturn) annotation (Line(points={{95.02,32},{
                100,32},{100,40},{120,40}}, color={0,0,127}));
        connect(needheatON, true_not_needheat_VN.u) annotation (Line(points={{
                -120,90},{-100,90},{-100,60},{-88,60}}, color={0,0,127}));
        connect(true_not_needheat_VN.y, not1.u)
          annotation (Line(points={{-65,60},{-51.6,60}}, color={255,0,255}));
        connect(needcoolON, true_not_needheat_VN1.u) annotation (Line(points={{
                -120,22},{-104,22},{-104,20},{-86,20}}, color={0,0,127}));
        connect(true_not_needheat_VN1.y, not2.u) annotation (Line(points={{-63,20},
                {-53.6,20}},                           color={255,0,255}));
        connect(occ.y, switchON.u3) annotation (Line(points={{-27,4},{-27,3},{2,3},
                {2,38}}, color={0,0,127}));
        connect(occ1.y, switchON.u1)
          annotation (Line(points={{-15,82},{2,82},{2,54}}, color={0,0,127}));
        connect(switchON.y, multiSum.u[1]) annotation (Line(points={{25,46},{38,
                46},{38,-5.9},{44,-5.9}}, color={0,0,127}));
        connect(multiSum.y, y) annotation (Line(points={{57.02,-8},{68,-8},{68,-2},
                {118,-2}}, color={0,0,127}));
        connect(not1.y, or1.u1) annotation (Line(points={{-41.2,60},{-34,60},{-34,
                47},{-25,47}}, color={255,0,255}));
        connect(not2.y, or1.u2) annotation (Line(points={{-43.2,20},{-34,20},{-34,
                43},{-25,43}}, color={255,0,255}));
        connect(or1.y, switchON.u2) annotation (Line(points={{-13.5,47},{-6.75,47},
                {-6.75,46},{2,46}}, color={255,0,255}));
        connect(occ2.y, multiSum.u[2]) annotation (Line(points={{-25,-16},{18,-16},
                {18,-10.1},{44,-10.1}}, color={0,0,127}));
        connect(gain2.y, VAV_VN) annotation (Line(points={{76.7,-49},{90.35,-49},
                {90.35,-48},{118,-48}}, color={0,0,127}));
        connect(gain1.y, VAV_VS) annotation (Line(points={{80.7,-77},{91.35,-77},
                {91.35,-92},{118,-92}}, color={0,0,127}));
        connect(occ2.y, gain1.u) annotation (Line(points={{-25,-16},{18,-16},{18,
                -77},{64.6,-77}}, color={0,0,127}));
        connect(switchON.y, gain2.u) annotation (Line(points={{25,46},{25,-49},{
                60.6,-49}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={217,67,180},
                lineThickness=1), Text(
                extent={{-64,56},{50,-48}},
                lineColor={217,67,180},
                lineThickness=1,
                textString="ppm ctrl
")}),   Diagram(coordinateSystem(preserveAspectRatio=false)));
      end ppm_ctrl_O_advanced;
    end Vent_ctrl;

    model E_calc_V "Model to calculate the energy use"
      replaceable IDEAS.Utilities.IO.Files.JSONWriter JSON_HP(
        fileName="HP.json",
        varKeys={"Electrical energy Heat pump [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{136,-192},{156,-172}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_Total_energy(
        fileName="total.json",
        varKeys={"Electrical energy secondary pump [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{144,-90},{156,-78}})));
      Modelica.Blocks.Math.MultiSum TOTAL_E(nu=3)
        annotation (Placement(transformation(extent={{106,-76},{118,-64}})));
      Modelica.Blocks.Continuous.Integrator int_pumpHP(k=1/3600000)
        annotation (Placement(transformation(extent={{-60,126},{-50,136}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpHP(
        fileName="pumpHP.json",
        varKeys={"Electrical energy pump HP [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,142},{158,154}})));
      Modelica.Blocks.Continuous.Integrator int_PumpGH(k=1/3600000)
        annotation (Placement(transformation(extent={{-44,166},{-32,178}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpGH2(
        fileName="PumpGH2.json",
        varKeys={"Electrical energy PumpGH2 [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,166},{160,180}})));
      Modelica.Blocks.Interfaces.RealInput PumpGH
        annotation (Placement(transformation(extent={{-134,154},{-102,186}})));
      Modelica.Blocks.Interfaces.RealInput PumpHP
        annotation (Placement(transformation(extent={{-132,110},{-104,138}})));
      Modelica.Blocks.Interfaces.RealInput pumpVN
        annotation (Placement(transformation(extent={{-130,76},{-102,104}})));
      Modelica.Blocks.Interfaces.RealInput PumpVS
        annotation (Placement(transformation(extent={{-128,40},{-102,66}})));
      Modelica.Blocks.Interfaces.RealInput PumpAHUVN
        annotation (Placement(transformation(extent={{-130,-2},{-100,28}})));
      Modelica.Blocks.Interfaces.RealInput PumpAHUVS
        annotation (Placement(transformation(extent={{-132,-46},{-100,-14}})));
      Modelica.Blocks.Interfaces.RealInput PumpGC
        annotation (Placement(transformation(extent={{-130,-84},{-100,-54}})));
      Modelica.Blocks.Interfaces.RealInput Fansupply
        annotation (Placement(transformation(extent={{-130,-124},{-98,-92}})));
      Modelica.Blocks.Interfaces.RealInput Fanreturn
        annotation (Placement(transformation(extent={{-130,-166},{-100,-136}})));
      Modelica.Blocks.Interfaces.RealInput HP
        annotation (Placement(transformation(extent={{-132,-208},{-104,-180}})));
      Modelica.Blocks.Continuous.Integrator int_HP(k=1/3600000)
        annotation (Placement(transformation(extent={{-36,-188},{-20,-172}})));
      Modelica.Blocks.Continuous.Integrator int_pumpVN(k=1/3600000)
        annotation (Placement(transformation(extent={{-62,96},{-52,106}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpVN(
        fileName="pumVN.json",
        varKeys={"Electrical energy pumpVN [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,120},{158,132}})));
      Modelica.Blocks.Continuous.Integrator int_pumpVS(k=1/3600000)
        annotation (Placement(transformation(extent={{-66,58},{-56,68}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpVS(
        fileName="pumVS.json",
        varKeys={"Electrical energy pumpVS [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,44},{160,56}})));
      Modelica.Blocks.Continuous.Integrator int_pumpAHUVN(k=1/3600000)
        annotation (Placement(transformation(extent={{-68,10},{-58,20}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpAHUVN(
        fileName="pumpAHUVN.json",
        varKeys={"Electrical energy pumpAHUVN [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,22},{160,34}})));
      Modelica.Blocks.Continuous.Integrator int_pumpAHUVS(k=1/3600000)
        annotation (Placement(transformation(extent={{-58,-32},{-48,-22}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpAHUVS(
        fileName="pumpAHUVS.json",
        varKeys={"Electrical energy pumpAHUVS [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,-6},{160,6}})));
      Modelica.Blocks.Continuous.Integrator int_pumpGC(k=1/3600000)
        annotation (Placement(transformation(extent={{-50,-76},{-40,-66}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpGC(
        fileName="pumpGC.json",
        varKeys={"Electrical energy pumpGC [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{148,-34},{160,-22}})));
      Modelica.Blocks.Math.MultiSum Pumps_total(nu=9)
        annotation (Placement(transformation(extent={{78,94},{90,106}})));
      Modelica.Blocks.Continuous.Integrator int_fansupply(k=1/3600000)
        annotation (Placement(transformation(extent={{-58,-114},{-48,-104}})));
      Modelica.Blocks.Continuous.Integrator int_fanreturn(k=1/3600000)
        annotation (Placement(transformation(extent={{-58,-148},{-48,-138}})));
      Modelica.Blocks.Math.MultiSum Fans_total(nu=2)
        annotation (Placement(transformation(extent={{52,-130},{64,-118}})));
      Modelica.Blocks.Math.MultiSum Pumps_and_Fans_total(nu=2)
        annotation (Placement(transformation(extent={{108,62},{120,74}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_allpumps_and_fans(
        fileName="pumsandfans.json",
        varKeys={"Electrical energy all pumps and fans [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,62},{160,74}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_Allpumps(
        fileName="pumps.json",
        varKeys={"Electrical energy all pumps [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{146,92},{158,104}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_All_fans(
        fileName="fans.json",
        varKeys={"Electrical energy all fans [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,-138},{158,-126}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_fansupply(
        fileName="fansupply.json",
        varKeys={"Electrical energy fansupply [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,-118},{156,-106}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_fansreturn(
        fileName="fanreturn.json",
        varKeys={"Electrical energy fanreturn [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,-160},{156,-148}})));
      Modelica.Blocks.Math.Gain permm_E_TOTAL(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{136,-60},{156,-40}})));
      Modelica.Blocks.Math.Gain permm_HP(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{32,-196},{44,-184}})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-84,176},{-70,162}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-90,134},{-76,120}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=300, uMin=0)
        annotation (Placement(transformation(extent={{-88,100},{-74,86}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=300, uMin=0)
        annotation (Placement(transformation(extent={{-92,62},{-78,48}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-92,20},{-78,6}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-88,-20},{-74,-34}})));
      Modelica.Blocks.Nonlinear.Limiter limiter6(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-88,-62},{-74,-76}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=240000, uMin=0)
        annotation (Placement(transformation(extent={{-86,-98},{-72,-112}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-86,-136},{-72,-150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter9(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-72,-176},{-58,-190}})));
      Modelica.Blocks.Interfaces.RealInput PumpBF
        annotation (Placement(transformation(extent={{-130,220},{-98,252}})));
      Modelica.Blocks.Nonlinear.Limiter limiter10(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-78,238},{-64,224}})));
      Modelica.Blocks.Continuous.Integrator int_PumpBF(k=1/3600000)
        annotation (Placement(transformation(extent={{-32,224},{-20,236}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpGH1(
        fileName="PumpGH1.json",
        varKeys={"Electrical energy PumpGH1 [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,212},{158,226}})));
      Modelica.Blocks.Interfaces.RealInput PumpChex
        annotation (Placement(transformation(extent={{-132,190},{-100,222}})));
      Modelica.Blocks.Nonlinear.Limiter limiter11(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-80,212},{-66,198}})));
      Modelica.Blocks.Continuous.Integrator int_Chex(k=1/3600000)
        annotation (Placement(transformation(extent={{-42,200},{-30,212}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpChex(
        fileName="PumpChex.json",
        varKeys={"Electrical energy PumpChex [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,192},{158,206}})));
      Modelica.Blocks.Math.Gain permm_PumpBF(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{0,212},{12,224}})));
      Modelica.Blocks.Math.Gain permm_PumpChex(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-8,190},{4,202}})));
      Modelica.Blocks.Math.Gain permm_PumpGH(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-16,152},{-4,164}})));
      Modelica.Blocks.Math.Gain permm_PumpHP(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-34,134},{-22,146}})));
      Modelica.Blocks.Math.Gain permm_PumpVN(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-36,106},{-24,118}})));
      Modelica.Blocks.Math.Gain permm_PumpVS(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-34,72},{-22,84}})));
      Modelica.Blocks.Math.Gain permm_PumpAHUVN(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-40,24},{-28,36}})));
      Modelica.Blocks.Math.Gain permm_PumpAHUVS(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-34,-20},{-22,-8}})));
      Modelica.Blocks.Math.Gain permm_PumpGC(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-32,-58},{-20,-46}})));
      Modelica.Blocks.Math.Gain permm_Fansupply(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-30,-100},{-18,-88}})));
      Modelica.Blocks.Math.Gain permm_Fanreturn(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{-34,-136},{-22,-124}})));
      Modelica.Blocks.Math.Gain permm_Fans_total(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{74,-146},{86,-134}})));
      Modelica.Blocks.Math.Gain permm_pumps_TOTAL(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{106,106},{118,118}})));
      Modelica.Blocks.Math.Gain permm_pumpsandfans_TOTAL(k=1/(2*3.52*5.35))
        annotation (Placement(transformation(extent={{130,76},{142,88}})));
    equation
      connect(TOTAL_E.y, JSON_Total_energy.u[1]) annotation (Line(points={{119.02,
              -70},{132,-70},{132,-84},{144,-84}}, color={0,0,127}));
      connect(int_pumpHP.y, JSON_pumpHP.u[1]) annotation (Line(points={{-49.5,131},
              {48.5,131},{48.5,148},{146,148}}, color={0,0,127}));
      connect(int_PumpGH.y, JSON_pumpGH2.u[1]) annotation (Line(points={{-31.4,
              172},{46,172},{46,173},{146,173}}, color={0,0,127}));
      connect(int_HP.y, JSON_HP.u[1]) annotation (Line(points={{-19.2,-180},{62,
              -180},{62,-182},{136,-182}}, color={0,0,127}));
      connect(int_pumpVN.y, JSON_pumpVN.u[1]) annotation (Line(points={{-51.5,101},
              {43.25,101},{43.25,126},{146,126}}, color={0,0,127}));
      connect(int_pumpVS.y, JSON_pumpVS.u[1]) annotation (Line(points={{-55.5,63},
              {4.25,63},{4.25,50},{148,50}}, color={0,0,127}));
      connect(int_pumpAHUVN.y, JSON_pumpAHUVN.u[1]) annotation (Line(points={{
              -57.5,15},{36.25,15},{36.25,28},{148,28}}, color={0,0,127}));
      connect(int_pumpAHUVS.y, JSON_pumpAHUVS.u[1]) annotation (Line(points={{
              -47.5,-27},{42.25,-27},{42.25,0},{148,0}}, color={0,0,127}));
      connect(int_pumpGC.y, JSON_pumpGC.u[1]) annotation (Line(points={{-39.5,-71},
              {40.25,-71},{40.25,-28},{148,-28}}, color={0,0,127}));
      connect(int_PumpGH.y, Pumps_total.u[1]) annotation (Line(points={{-31.4,172},
              {16,172},{16,103.733},{78,103.733}}, color={0,0,127}));
      connect(int_pumpHP.y, Pumps_total.u[2]) annotation (Line(points={{-49.5,131},
              {13.25,131},{13.25,102.8},{78,102.8}}, color={0,0,127}));
      connect(int_pumpVN.y, Pumps_total.u[3]) annotation (Line(points={{-51.5,101},
              {13.25,101},{13.25,101.867},{78,101.867}},
                                                     color={0,0,127}));
      connect(int_pumpVS.y, Pumps_total.u[4]) annotation (Line(points={{-55.5,63},
              {11.25,63},{11.25,100.933},{78,100.933}},
                                                color={0,0,127}));
      connect(int_pumpAHUVN.y, Pumps_total.u[5]) annotation (Line(points={{-57.5,
              15},{11.25,15},{11.25,100},{78,100}},   color={0,0,127}));
      connect(int_pumpAHUVS.y, Pumps_total.u[6]) annotation (Line(points={{-47.5,
              -27},{7.25,-27},{7.25,99.0667},{78,99.0667}},
                                                      color={0,0,127}));
      connect(int_pumpGC.y, Pumps_total.u[7]) annotation (Line(points={{-39.5,-71},
              {-39.5,-70},{-18,-70},{-18,-42},{78,-42},{78,98.1333}},
                                                                   color={0,0,127}));
      connect(int_fansupply.y, Fans_total.u[1]) annotation (Line(points={{-47.5,
              -109},{7.25,-109},{7.25,-121.9},{52,-121.9}}, color={0,0,127}));
      connect(int_fanreturn.y, Fans_total.u[2]) annotation (Line(points={{-47.5,
              -143},{4.25,-143},{4.25,-126.1},{52,-126.1}}, color={0,0,127}));
      connect(Pumps_total.y, Pumps_and_Fans_total.u[1]) annotation (Line(points={
              {91.02,100},{100,100},{100,70.1},{108,70.1}}, color={0,0,127}));
      connect(Fans_total.y, Pumps_and_Fans_total.u[2]) annotation (Line(points={{
              65.02,-124},{65.02,58},{108,58},{108,65.9}}, color={0,0,127}));
      connect(Pumps_and_Fans_total.y, JSON_allpumps_and_fans.u[1])
        annotation (Line(points={{121.02,68},{148,68}}, color={0,0,127}));
      connect(Pumps_total.y, JSON_Allpumps.u[1]) annotation (Line(points={{91.02,
              100},{120,100},{120,98},{146,98}}, color={0,0,127}));
      connect(Fans_total.y, JSON_All_fans.u[1]) annotation (Line(points={{65.02,
              -124},{106,-124},{106,-132},{146,-132}}, color={0,0,127}));
      connect(Fans_total.y, TOTAL_E.u[1]) annotation (Line(points={{65.02,-124},{
              86,-124},{86,-67.2},{106,-67.2}}, color={0,0,127}));
      connect(int_HP.y, TOTAL_E.u[2]) annotation (Line(points={{-19.2,-180},{94,
              -180},{94,-70},{106,-70}}, color={0,0,127}));
      connect(Pumps_total.y, TOTAL_E.u[3]) annotation (Line(points={{91.02,100},{
              98,100},{98,-72.8},{106,-72.8}}, color={0,0,127}));
      connect(int_fansupply.y, JSON_fansupply.u[1]) annotation (Line(points={{
              -47.5,-109},{38.25,-109},{38.25,-112},{144,-112}}, color={0,0,127}));
      connect(int_fanreturn.y, JSON_fansreturn.u[1]) annotation (Line(points={{
              -47.5,-143},{36.25,-143},{36.25,-154},{144,-154}}, color={0,0,127}));
      connect(TOTAL_E.y, permm_E_TOTAL.u) annotation (Line(points={{119.02,-70},{
              119.02,-60},{134,-60},{134,-50}}, color={0,0,127}));
      connect(int_HP.y, permm_HP.u) annotation (Line(points={{-19.2,-180},{10,
              -180},{10,-190},{30.8,-190}}, color={0,0,127}));
      connect(PumpGH, limiter.u) annotation (Line(points={{-118,170},{-100,170},{
              -100,169},{-85.4,169}}, color={0,0,127}));
      connect(limiter.y, int_PumpGH.u) annotation (Line(points={{-69.3,169},{
              -56.65,169},{-56.65,172},{-45.2,172}}, color={0,0,127}));
      connect(PumpHP, limiter1.u) annotation (Line(points={{-118,124},{-106,124},
              {-106,127},{-91.4,127}}, color={0,0,127}));
      connect(limiter1.y, int_pumpHP.u) annotation (Line(points={{-75.3,127},{
              -71.65,127},{-71.65,131},{-61,131}}, color={0,0,127}));
      connect(pumpVN, limiter2.u) annotation (Line(points={{-116,90},{-104,90},{
              -104,93},{-89.4,93}}, color={0,0,127}));
      connect(limiter2.y, int_pumpVN.u) annotation (Line(points={{-73.3,93},{
              -68.65,93},{-68.65,101},{-63,101}}, color={0,0,127}));
      connect(PumpVS, limiter3.u) annotation (Line(points={{-115,53},{-103.5,53},
              {-103.5,55},{-93.4,55}}, color={0,0,127}));
      connect(limiter3.y, int_pumpVS.u) annotation (Line(points={{-77.3,55},{
              -77.3,59.5},{-67,59.5},{-67,63}}, color={0,0,127}));
      connect(PumpAHUVN, limiter4.u)
        annotation (Line(points={{-115,13},{-93.4,13}}, color={0,0,127}));
      connect(limiter4.y, int_pumpAHUVN.u) annotation (Line(points={{-77.3,13},{
              -72.65,13},{-72.65,15},{-69,15}}, color={0,0,127}));
      connect(PumpAHUVS, limiter5.u) annotation (Line(points={{-116,-30},{-102,
              -30},{-102,-27},{-89.4,-27}}, color={0,0,127}));
      connect(limiter5.y, int_pumpAHUVS.u) annotation (Line(points={{-73.3,-27},{
              -66.65,-27},{-66.65,-27},{-59,-27}}, color={0,0,127}));
      connect(PumpGC, limiter6.u) annotation (Line(points={{-115,-69},{-103.5,-69},
              {-103.5,-69},{-89.4,-69}}, color={0,0,127}));
      connect(limiter6.y, int_pumpGC.u) annotation (Line(points={{-73.3,-69},{
              -61.65,-69},{-61.65,-71},{-51,-71}}, color={0,0,127}));
      connect(Fansupply, limiter7.u) annotation (Line(points={{-114,-108},{-100,
              -108},{-100,-105},{-87.4,-105}}, color={0,0,127}));
      connect(limiter7.y, int_fansupply.u) annotation (Line(points={{-71.3,-105},
              {-64.65,-105},{-64.65,-109},{-59,-109}}, color={0,0,127}));
      connect(Fanreturn, limiter8.u) annotation (Line(points={{-115,-151},{-101.5,
              -151},{-101.5,-143},{-87.4,-143}}, color={0,0,127}));
      connect(limiter8.y, int_fanreturn.u) annotation (Line(points={{-71.3,-143},
              {-65.65,-143},{-65.65,-143},{-59,-143}}, color={0,0,127}));
      connect(HP, limiter9.u) annotation (Line(points={{-118,-194},{-96,-194},{
              -96,-183},{-73.4,-183}}, color={0,0,127}));
      connect(limiter9.y, int_HP.u) annotation (Line(points={{-57.3,-183},{-43.65,
              -183},{-43.65,-180},{-37.6,-180}}, color={0,0,127}));
      connect(PumpBF, limiter10.u) annotation (Line(points={{-114,236},{-100,236},
              {-100,231},{-79.4,231}}, color={0,0,127}));
      connect(limiter10.y, int_PumpBF.u) annotation (Line(points={{-63.3,231},{
              -48.65,231},{-48.65,230},{-33.2,230}}, color={0,0,127}));
      connect(int_PumpBF.y, JSON_pumpGH1.u[1]) annotation (Line(points={{-19.4,
              230},{62,230},{62,219},{144,219}}, color={0,0,127}));
      connect(int_PumpBF.y, Pumps_total.u[8]) annotation (Line(points={{-19.4,230},
              {28,230},{28,97.2},{78,97.2}}, color={0,0,127}));
      connect(PumpChex, limiter11.u) annotation (Line(points={{-116,206},{-100,
              206},{-100,205},{-81.4,205}}, color={0,0,127}));
      connect(limiter11.y, int_Chex.u) annotation (Line(points={{-65.3,205},{
              -54.65,205},{-54.65,206},{-43.2,206}}, color={0,0,127}));
      connect(int_Chex.y, JSON_pumpChex.u[1]) annotation (Line(points={{-29.4,206},
              {56,206},{56,199},{144,199}}, color={0,0,127}));
      connect(int_Chex.y, Pumps_total.u[9]) annotation (Line(points={{-29.4,206},
              {26,206},{26,96.2667},{78,96.2667}}, color={0,0,127}));
      connect(int_PumpBF.y, permm_PumpBF.u) annotation (Line(points={{-19.4,230},
              {-10,230},{-10,218},{-1.2,218}}, color={0,0,127}));
      connect(int_Chex.y, permm_PumpChex.u) annotation (Line(points={{-29.4,206},
              {-20,206},{-20,196},{-9.2,196}}, color={0,0,127}));
      connect(int_PumpGH.y, permm_PumpGH.u) annotation (Line(points={{-31.4,172},
              {-24,172},{-24,158},{-17.2,158}}, color={0,0,127}));
      connect(int_pumpHP.y, permm_PumpHP.u) annotation (Line(points={{-49.5,131},
              {-41.75,131},{-41.75,140},{-35.2,140}}, color={0,0,127}));
      connect(int_pumpVN.y, permm_PumpVN.u) annotation (Line(points={{-51.5,101},
              {-44.75,101},{-44.75,112},{-37.2,112}}, color={0,0,127}));
      connect(int_pumpVS.y, permm_PumpVS.u) annotation (Line(points={{-55.5,63},{
              -45.75,63},{-45.75,78},{-35.2,78}}, color={0,0,127}));
      connect(int_pumpAHUVN.y, permm_PumpAHUVN.u) annotation (Line(points={{-57.5,
              15},{-49.75,15},{-49.75,30},{-41.2,30}}, color={0,0,127}));
      connect(int_pumpAHUVS.y, permm_PumpAHUVS.u) annotation (Line(points={{-47.5,
              -27},{-40.75,-27},{-40.75,-14},{-35.2,-14}}, color={0,0,127}));
      connect(int_pumpGC.y, permm_PumpGC.u) annotation (Line(points={{-39.5,-71},
              {-39.5,-61.5},{-33.2,-61.5},{-33.2,-52}}, color={0,0,127}));
      connect(int_fansupply.y, permm_Fansupply.u) annotation (Line(points={{-47.5,
              -109},{-31.2,-109},{-31.2,-94}}, color={0,0,127}));
      connect(int_fanreturn.y, permm_Fanreturn.u) annotation (Line(points={{-47.5,
              -143},{-47.5,-135.5},{-35.2,-135.5},{-35.2,-130}}, color={0,0,127}));
      connect(Fans_total.y, permm_Fans_total.u) annotation (Line(points={{65.02,
              -124},{68,-124},{68,-140},{72.8,-140}}, color={0,0,127}));
      connect(Pumps_total.y, permm_pumps_TOTAL.u) annotation (Line(points={{91.02,
              100},{98,100},{98,112},{104.8,112}}, color={0,0,127}));
      connect(Pumps_and_Fans_total.y, permm_pumpsandfans_TOTAL.u) annotation (
          Line(points={{121.02,68},{124,68},{124,82},{128.8,82}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -200},{160,240}}), graphics={Rectangle(
              extent={{-100,240},{160,-200}},
              lineColor={0,140,72},
              lineThickness=1), Text(
              extent={{-36,74},{112,-136}},
              lineColor={0,140,72},
              lineThickness=1,
              textString="E_calc
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-200},{
                160,240}})));
    end E_calc_V;

    model Office "Two Office building envelopes"
      import Occupancy;
      replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});
      import Vaartstraat;
      TDC.TDC tDCON(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCON.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{-54,30},{-78,50}})));
      TDC.TDC tDCOS(redeclare IDEAS.Utilities.IO.Files.JSONWriter TDC_Json(
          fileName="TDCOS.json",
          varKeys={"Thermal_Discomfort[Ks]"},
          outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
          nin=1))
        annotation (Placement(transformation(extent={{30,-36},{54,-16}})));
      inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
            Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
        annotation (Placement(transformation(extent={{-100,74},{-80,94}})));
       IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
         annotation (Placement(transformation(extent={{-76,56},{-60,72}})));
      IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
        annotation (Placement(transformation(extent={{-50,50},{-30,70}})));
      Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b gainemb_ON
        annotation (Placement(transformation(extent={{-120,-88},{-94,-62}})));
      Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b gainemb_OS
        annotation (Placement(transformation(extent={{92,-90},{118,-64}})));
      Modelica.Blocks.Interfaces.RealOutput TSensor_ON
        annotation (Placement(transformation(extent={{-102,58},{-132,88}})));
      Modelica.Blocks.Interfaces.RealOutput TSensor_OS
        annotation (Placement(transformation(extent={{100,70},{128,98}})));
      Modelica.Blocks.Interfaces.RealOutput ppmSensor_ON
        annotation (Placement(transformation(extent={{-100,-16},{-130,14}})));
      Modelica.Blocks.Interfaces.RealOutput ppmSensor_OS
        annotation (Placement(transformation(extent={{100,-16},{130,14}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_ONin(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{-78,94},{-58,114}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_ONout(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{-54,94},{-34,114}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_OSin1(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{18,94},{38,114}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_OSout(redeclare package Medium
          = Medium)
        annotation (Placement(transformation(extent={{48,94},{68,114}})));
      TDC.TDCppm tDCppmON(TDC_Json(fileName="TDCairON.json", varKeys={
              "air discomfort VS [ppmh]"}))
        annotation (Placement(transformation(extent={{-54,-26},{-78,-6}})));
      TDC.TDCppm tDCppmOS(TDC_Json(fileName="TDCairOS.json", varKeys={
              "air discomfort VS [ppmh]"}))
        annotation (Placement(transformation(extent={{18,-100},{42,-80}})));
      IDEAS.Buildings.Components.RectangularZoneTemplate ON(
        redeclare package Medium = Medium,
        n50=0.5,
        T_start=295.15,
        redeclare Occupancy.OccSched_Office occNum(k=2),
        redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinA=true,
        hasInt=true,
        aziA=IDEAS.Types.Azimuth.N,
        l=4,
        w=4,
        lInt=1,
        h=2.7,
        A_winA=1*1,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingA,
        redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
          shaTypA,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypA,
        hasEmb=true)
                   "North parth of the zone"
        annotation (Placement(transformation(extent={{2,4},{-26,38}})));

      IDEAS.Buildings.Components.RectangularZoneTemplate OS(
        redeclare package Medium = Medium,
        n50=0.5,
        T_start=295.15,
        redeclare IDEAS.Buildings.Components.Occupants.Fixed occNum(nOccFix=1),
        redeclare IDEAS.Buildings.Components.OccupancyType.OfficeWork occTyp,
        redeclare IDEAS.Buildings.Components.RoomType.Office rooTyp,
        redeclare IDEAS.Buildings.Components.LightingType.LED ligTyp,
        redeclare IDEAS.Buildings.Components.LightingControl.OccupancyBased
          ligCtr,
        bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
        bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
        bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
        hasWinC=true,
        hasInt=true,
        aziA=IDEAS.Types.Azimuth.N,
        l=4,
        w=4,
        lInt=1,
        h=2.7,
        A_winC=1*1,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypA,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypB,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypC,
        redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyWall conTypD,
        redeclare IDEAS.Buildings.Data.Constructions.TABS conTypFlo,
        redeclare Vaartstraat.Walls.Inner_wall_neighbour conTypInt,
        redeclare IDEAS.Buildings.Data.Glazing.EpcDouble glazingC,
        redeclare IDEAS.Buildings.Components.Shading.Interfaces.ShadingProperties
          shaTypC,
        redeclare IDEAS.Buildings.Data.Frames.Vaartstraat_frame fraTypC,
        hasEmb=true)
                   "South part of the zone"
        annotation (Placement(transformation(extent={{-26,-70},{2,-38}})));

    equation
      connect(ON.proBusFlo,ON. proBusCei) annotation (Line(
          points={{-12,10.8},{-11.72,10.8},{-11.72,31.2}},
          color={255,204,51},
          thickness=0.5));
      connect(OS.proBusA,ON. proBusC) annotation (Line(
          points={{-20.4,-39.6},{-20.4,-13.5},{-21.52,-13.5},{-21.52,4.34}},
          color={255,204,51},
          thickness=0.5));
      connect(OS.proBusCei,OS. proBusFlo) annotation (Line(
          points={{-12.28,-44.4},{-12,-44.4},{-12,-63.6}},
          color={255,204,51},
          thickness=0.5));
      connect(port_ONin, ON.port_a) annotation (Line(points={{-68,104},{-68,78},{
              -16,78},{-16,38},{-14.8,38}}, color={0,127,255}));
      connect(ON.port_b, port_ONout) annotation (Line(points={{-9.2,38},{-9.2,82},
              {-44,82},{-44,104}}, color={0,127,255}));
      connect(ON.TSensor, tDCON.a) annotation (Line(points={{-27.4,24.4},{-38.7,
              24.4},{-38.7,40},{-52,40}}, color={0,0,127}));
      connect(ON.ppm, tDCppmON.a) annotation (Line(points={{-27.4,21},{-27.4,20.5},
              {-52,20.5},{-52,-16}}, color={0,0,127}));
      connect(ON.ppm, ppmSensor_ON) annotation (Line(points={{-27.4,21},{-69.7,21},
              {-69.7,-1},{-115,-1}}, color={0,0,127}));
      connect(ON.TSensor, TSensor_ON) annotation (Line(points={{-27.4,24.4},{
              -66.7,24.4},{-66.7,73},{-117,73}}, color={0,0,127}));
      connect(ON.gainEmb[1], gainemb_ON) annotation (Line(points={{-26,5.7},{-64,
              5.7},{-64,-75},{-107,-75}}, color={191,0,0}));
      connect(OS.TSensor, tDCOS.a) annotation (Line(points={{3.4,-50.8},{3.4,
              -39.4},{28,-39.4},{28,-26}}, color={0,0,127}));
      connect(OS.TSensor, TSensor_OS) annotation (Line(points={{3.4,-50.8},{3.4,
              16.6},{114,16.6},{114,84}}, color={0,0,127}));
      connect(OS.ppm, tDCppmOS.a) annotation (Line(points={{3.4,-54},{10,-54},{10,
              -90},{16,-90}}, color={0,0,127}));
      connect(OS.ppm, ppmSensor_OS) annotation (Line(points={{3.4,-54},{64,-54},{
              64,-1},{115,-1}}, color={0,0,127}));
      connect(OS.gainEmb[1], gainemb_OS) annotation (Line(points={{2,-68.4},{54,
              -68.4},{54,-77},{105,-77}},            color={191,0,0}));
      connect(OS.port_a, port_OSin1) annotation (Line(points={{-9.2,-38},{10,-38},
              {10,104},{28,104}}, color={0,127,255}));
      connect(OS.port_b, port_OSout) annotation (Line(points={{-14.8,-38},{-14.8,
              -6},{58,-6},{58,104}}, color={0,127,255}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
              Rectangle(
              extent={{-100,100},{100,-100}},
              lineColor={162,29,33},
              lineThickness=1), Text(
              extent={{-40,42},{54,-50}},
              lineColor={162,29,33},
              lineThickness=1,
              textString="ON_OS
")}),                                                                Diagram(
            coordinateSystem(preserveAspectRatio=false)),
        experiment(
          StartTime=21286800,
          StopTime=31536000,
          __Dymola_NumberOfIntervals=5000,
          __Dymola_Algorithm="Dassl"));
    end Office;

    model E_calc_O "Model to calculate the energy use"
      replaceable IDEAS.Utilities.IO.Files.JSONWriter JSON_HP(
        fileName="HP.json",
        varKeys={"Electrical energy Heat pump [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{136,-192},{156,-172}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_Total_energy(
        fileName="total.json",
        varKeys={"Electrical energy secondary pump [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{144,-90},{156,-78}})));
      Modelica.Blocks.Math.MultiSum TOTAL_E(nu=3)
        annotation (Placement(transformation(extent={{106,-76},{118,-64}})));
      Modelica.Blocks.Continuous.Integrator int_pumpHP(k=1/3600000)
        annotation (Placement(transformation(extent={{-60,126},{-50,136}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpHP(
        fileName="pumpHP.json",
        varKeys={"Electrical energy pump HP [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,142},{158,154}})));
      Modelica.Blocks.Continuous.Integrator int_PumpGH(k=1/3600000)
        annotation (Placement(transformation(extent={{-44,166},{-32,178}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpGH2(
        fileName="PumpGH2.json",
        varKeys={"Electrical energy PumpGH2 [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,166},{160,180}})));
      Modelica.Blocks.Interfaces.RealInput PumpGH
        annotation (Placement(transformation(extent={{-134,154},{-102,186}})));
      Modelica.Blocks.Interfaces.RealInput PumpHP
        annotation (Placement(transformation(extent={{-132,110},{-104,138}})));
      Modelica.Blocks.Interfaces.RealInput pumpVN
        annotation (Placement(transformation(extent={{-130,76},{-102,104}})));
      Modelica.Blocks.Interfaces.RealInput PumpVS
        annotation (Placement(transformation(extent={{-128,40},{-102,66}})));
      Modelica.Blocks.Interfaces.RealInput PumpAHUVN
        annotation (Placement(transformation(extent={{-130,-2},{-100,28}})));
      Modelica.Blocks.Interfaces.RealInput PumpAHUVS
        annotation (Placement(transformation(extent={{-132,-46},{-100,-14}})));
      Modelica.Blocks.Interfaces.RealInput PumpGC
        annotation (Placement(transformation(extent={{-130,-84},{-100,-54}})));
      Modelica.Blocks.Interfaces.RealInput Fansupply
        annotation (Placement(transformation(extent={{-130,-124},{-98,-92}})));
      Modelica.Blocks.Interfaces.RealInput Fanreturn
        annotation (Placement(transformation(extent={{-130,-166},{-100,-136}})));
      Modelica.Blocks.Interfaces.RealInput HP
        annotation (Placement(transformation(extent={{-132,-208},{-104,-180}})));
      Modelica.Blocks.Continuous.Integrator int_HP(k=1/3600000)
        annotation (Placement(transformation(extent={{-36,-188},{-20,-172}})));
      Modelica.Blocks.Continuous.Integrator int_pumpVN(k=1/3600000)
        annotation (Placement(transformation(extent={{-62,96},{-52,106}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpVN(
        fileName="pumVN.json",
        varKeys={"Electrical energy pumpVN [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,120},{158,132}})));
      Modelica.Blocks.Continuous.Integrator int_pumpVS(k=1/3600000)
        annotation (Placement(transformation(extent={{-66,58},{-56,68}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpVS(
        fileName="pumVS.json",
        varKeys={"Electrical energy pumpVS [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,44},{160,56}})));
      Modelica.Blocks.Continuous.Integrator int_pumpAHUVN(k=1/3600000)
        annotation (Placement(transformation(extent={{-68,10},{-58,20}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpAHUVN(
        fileName="pumpAHUVN.json",
        varKeys={"Electrical energy pumpAHUVN [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,22},{160,34}})));
      Modelica.Blocks.Continuous.Integrator int_pumpAHUVS(k=1/3600000)
        annotation (Placement(transformation(extent={{-58,-32},{-48,-22}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpAHUVS(
        fileName="pumpAHUVS.json",
        varKeys={"Electrical energy pumpAHUVS [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,-6},{160,6}})));
      Modelica.Blocks.Continuous.Integrator int_pumpGC(k=1/3600000)
        annotation (Placement(transformation(extent={{-50,-76},{-40,-66}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpGC(
        fileName="pumpGC.json",
        varKeys={"Electrical energy pumpGC [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{148,-34},{160,-22}})));
      Modelica.Blocks.Math.MultiSum Pumps_total(nu=9)
        annotation (Placement(transformation(extent={{78,94},{90,106}})));
      Modelica.Blocks.Continuous.Integrator int_fansupply(k=1/3600000)
        annotation (Placement(transformation(extent={{-58,-114},{-48,-104}})));
      Modelica.Blocks.Continuous.Integrator int_fanreturn(k=1/3600000)
        annotation (Placement(transformation(extent={{-58,-148},{-48,-138}})));
      Modelica.Blocks.Math.MultiSum Fans_total(nu=2)
        annotation (Placement(transformation(extent={{52,-130},{64,-118}})));
      Modelica.Blocks.Math.MultiSum Pumps_and_Fans_total(nu=2)
        annotation (Placement(transformation(extent={{108,62},{120,74}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_allpumps_and_fans(
        fileName="pumsandfans.json",
        varKeys={"Electrical energy all pumps and fans [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{148,62},{160,74}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_Allpumps(
        fileName="pumps.json",
        varKeys={"Electrical energy all pumps [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1) annotation (Placement(transformation(extent={{146,92},{158,104}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_All_fans(
        fileName="fans.json",
        varKeys={"Electrical energy all fans [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{146,-138},{158,-126}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_fansupply(
        fileName="fansupply.json",
        varKeys={"Electrical energy fansupply [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,-118},{156,-106}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_fansreturn(
        fileName="fanreturn.json",
        varKeys={"Electrical energy fanreturn [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,-160},{156,-148}})));
      Modelica.Blocks.Math.Gain permm_E_TOTAL(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{136,-60},{156,-40}})));
      Modelica.Blocks.Math.Gain permm_HP(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{32,-196},{44,-184}})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-84,176},{-70,162}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-90,134},{-76,120}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=300, uMin=0)
        annotation (Placement(transformation(extent={{-88,100},{-74,86}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=300, uMin=0)
        annotation (Placement(transformation(extent={{-92,62},{-78,48}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=50,   uMin=0)
        annotation (Placement(transformation(extent={{-92,20},{-78,6}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=50,   uMin=0)
        annotation (Placement(transformation(extent={{-88,-20},{-74,-34}})));
      Modelica.Blocks.Nonlinear.Limiter limiter6(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-88,-62},{-74,-76}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=240000, uMin=0)
        annotation (Placement(transformation(extent={{-86,-98},{-72,-112}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-86,-136},{-72,-150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter9(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-72,-176},{-58,-190}})));
      Modelica.Blocks.Interfaces.RealInput PumpBF
        annotation (Placement(transformation(extent={{-130,220},{-98,252}})));
      Modelica.Blocks.Nonlinear.Limiter limiter10(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-78,238},{-64,224}})));
      Modelica.Blocks.Continuous.Integrator int_PumpBF(k=1/3600000)
        annotation (Placement(transformation(extent={{-32,224},{-20,236}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpGH1(
        fileName="PumpGH1.json",
        varKeys={"Electrical energy PumpGH1 [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,212},{158,226}})));
      Modelica.Blocks.Interfaces.RealInput PumpChex
        annotation (Placement(transformation(extent={{-132,190},{-100,222}})));
      Modelica.Blocks.Nonlinear.Limiter limiter11(uMax=1000, uMin=0)
        annotation (Placement(transformation(extent={{-80,212},{-66,198}})));
      Modelica.Blocks.Continuous.Integrator int_Chex(k=1/3600000)
        annotation (Placement(transformation(extent={{-42,200},{-30,212}})));
      IDEAS.Utilities.IO.Files.JSONWriter JSON_pumpChex(
        fileName="PumpChex.json",
        varKeys={"Electrical energy PumpChex [kWh]"},
        outputTime=IDEAS.Utilities.IO.Files.BaseClasses.OutputTime.Terminal,
        nin=1)
        annotation (Placement(transformation(extent={{144,192},{158,206}})));
      Modelica.Blocks.Math.Gain permm_PumpBF(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{0,212},{12,224}})));
      Modelica.Blocks.Math.Gain permm_PumpChex(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-8,190},{4,202}})));
      Modelica.Blocks.Math.Gain permm_PumpGH(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-16,152},{-4,164}})));
      Modelica.Blocks.Math.Gain permm_PumpHP(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-34,134},{-22,146}})));
      Modelica.Blocks.Math.Gain permm_PumpVN(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-36,106},{-24,118}})));
      Modelica.Blocks.Math.Gain permm_PumpVS(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-34,72},{-22,84}})));
      Modelica.Blocks.Math.Gain permm_PumpAHUVN(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-40,24},{-28,36}})));
      Modelica.Blocks.Math.Gain permm_PumpAHUVS(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-34,-20},{-22,-8}})));
      Modelica.Blocks.Math.Gain permm_PumpGC(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-32,-58},{-20,-46}})));
      Modelica.Blocks.Math.Gain permm_Fansupply(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-30,-100},{-18,-88}})));
      Modelica.Blocks.Math.Gain permm_Fanreturn(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{-34,-136},{-22,-124}})));
      Modelica.Blocks.Math.Gain permm_Fans_total(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{74,-146},{86,-134}})));
      Modelica.Blocks.Math.Gain permm_pumps_TOTAL(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{106,106},{118,118}})));
      Modelica.Blocks.Math.Gain permm_pumpsandfans_TOTAL(k=1/(2*4*4))
        annotation (Placement(transformation(extent={{130,76},{142,88}})));
    equation
      connect(TOTAL_E.y, JSON_Total_energy.u[1]) annotation (Line(points={{119.02,
              -70},{132,-70},{132,-84},{144,-84}}, color={0,0,127}));
      connect(int_pumpHP.y, JSON_pumpHP.u[1]) annotation (Line(points={{-49.5,131},
              {48.5,131},{48.5,148},{146,148}}, color={0,0,127}));
      connect(int_PumpGH.y, JSON_pumpGH2.u[1]) annotation (Line(points={{-31.4,
              172},{46,172},{46,173},{146,173}}, color={0,0,127}));
      connect(int_HP.y, JSON_HP.u[1]) annotation (Line(points={{-19.2,-180},{62,-180},
              {62,-182},{136,-182}},       color={0,0,127}));
      connect(int_pumpVN.y, JSON_pumpVN.u[1]) annotation (Line(points={{-51.5,101},
              {43.25,101},{43.25,126},{146,126}}, color={0,0,127}));
      connect(int_pumpVS.y, JSON_pumpVS.u[1]) annotation (Line(points={{-55.5,63},
              {4.25,63},{4.25,50},{148,50}}, color={0,0,127}));
      connect(int_pumpAHUVN.y, JSON_pumpAHUVN.u[1]) annotation (Line(points={{
              -57.5,15},{36.25,15},{36.25,28},{148,28}}, color={0,0,127}));
      connect(int_pumpAHUVS.y, JSON_pumpAHUVS.u[1]) annotation (Line(points={{
              -47.5,-27},{42.25,-27},{42.25,0},{148,0}}, color={0,0,127}));
      connect(int_pumpGC.y, JSON_pumpGC.u[1]) annotation (Line(points={{-39.5,-71},
              {40.25,-71},{40.25,-28},{148,-28}}, color={0,0,127}));
      connect(int_PumpGH.y, Pumps_total.u[1]) annotation (Line(points={{-31.4,172},
              {16,172},{16,103.733},{78,103.733}}, color={0,0,127}));
      connect(int_pumpHP.y, Pumps_total.u[2]) annotation (Line(points={{-49.5,131},
              {13.25,131},{13.25,102.8},{78,102.8}}, color={0,0,127}));
      connect(int_pumpVN.y, Pumps_total.u[3]) annotation (Line(points={{-51.5,101},
              {13.25,101},{13.25,101.867},{78,101.867}},
                                                     color={0,0,127}));
      connect(int_pumpVS.y, Pumps_total.u[4]) annotation (Line(points={{-55.5,63},
              {11.25,63},{11.25,100.933},{78,100.933}},
                                                color={0,0,127}));
      connect(int_pumpAHUVN.y, Pumps_total.u[5]) annotation (Line(points={{-57.5,
              15},{11.25,15},{11.25,100},{78,100}},   color={0,0,127}));
      connect(int_pumpAHUVS.y, Pumps_total.u[6]) annotation (Line(points={{-47.5,
              -27},{7.25,-27},{7.25,99.0667},{78,99.0667}},
                                                      color={0,0,127}));
      connect(int_pumpGC.y, Pumps_total.u[7]) annotation (Line(points={{-39.5,-71},
              {-39.5,-70},{-18,-70},{-18,-42},{78,-42},{78,98.1333}},
                                                                   color={0,0,127}));
      connect(int_fansupply.y, Fans_total.u[1]) annotation (Line(points={{-47.5,
              -109},{7.25,-109},{7.25,-121.9},{52,-121.9}}, color={0,0,127}));
      connect(int_fanreturn.y, Fans_total.u[2]) annotation (Line(points={{-47.5,
              -143},{4.25,-143},{4.25,-126.1},{52,-126.1}}, color={0,0,127}));
      connect(Pumps_total.y, Pumps_and_Fans_total.u[1]) annotation (Line(points={
              {91.02,100},{100,100},{100,70.1},{108,70.1}}, color={0,0,127}));
      connect(Fans_total.y, Pumps_and_Fans_total.u[2]) annotation (Line(points={{
              65.02,-124},{65.02,58},{108,58},{108,65.9}}, color={0,0,127}));
      connect(Pumps_and_Fans_total.y, JSON_allpumps_and_fans.u[1])
        annotation (Line(points={{121.02,68},{148,68}}, color={0,0,127}));
      connect(Pumps_total.y, JSON_Allpumps.u[1]) annotation (Line(points={{91.02,
              100},{120,100},{120,98},{146,98}}, color={0,0,127}));
      connect(Fans_total.y, JSON_All_fans.u[1]) annotation (Line(points={{65.02,
              -124},{106,-124},{106,-132},{146,-132}}, color={0,0,127}));
      connect(Fans_total.y, TOTAL_E.u[1]) annotation (Line(points={{65.02,-124},{
              86,-124},{86,-67.2},{106,-67.2}}, color={0,0,127}));
      connect(int_HP.y, TOTAL_E.u[2]) annotation (Line(points={{-19.2,-180},{94,-180},
              {94,-70},{106,-70}},       color={0,0,127}));
      connect(Pumps_total.y, TOTAL_E.u[3]) annotation (Line(points={{91.02,100},{
              98,100},{98,-72.8},{106,-72.8}}, color={0,0,127}));
      connect(int_fansupply.y, JSON_fansupply.u[1]) annotation (Line(points={{
              -47.5,-109},{38.25,-109},{38.25,-112},{144,-112}}, color={0,0,127}));
      connect(int_fanreturn.y, JSON_fansreturn.u[1]) annotation (Line(points={{
              -47.5,-143},{36.25,-143},{36.25,-154},{144,-154}}, color={0,0,127}));
      connect(TOTAL_E.y, permm_E_TOTAL.u) annotation (Line(points={{119.02,-70},{119.02,
              -60},{134,-60},{134,-50}}, color={0,0,127}));
      connect(int_HP.y, permm_HP.u) annotation (Line(points={{-19.2,-180},{10,-180},
              {10,-190},{30.8,-190}}, color={0,0,127}));
      connect(PumpGH, limiter.u) annotation (Line(points={{-118,170},{-100,170},{
              -100,169},{-85.4,169}}, color={0,0,127}));
      connect(limiter.y, int_PumpGH.u) annotation (Line(points={{-69.3,169},{
              -56.65,169},{-56.65,172},{-45.2,172}}, color={0,0,127}));
      connect(PumpHP, limiter1.u) annotation (Line(points={{-118,124},{-106,124},
              {-106,127},{-91.4,127}}, color={0,0,127}));
      connect(limiter1.y, int_pumpHP.u) annotation (Line(points={{-75.3,127},{
              -71.65,127},{-71.65,131},{-61,131}}, color={0,0,127}));
      connect(pumpVN, limiter2.u) annotation (Line(points={{-116,90},{-104,90},{
              -104,93},{-89.4,93}}, color={0,0,127}));
      connect(limiter2.y, int_pumpVN.u) annotation (Line(points={{-73.3,93},{
              -68.65,93},{-68.65,101},{-63,101}}, color={0,0,127}));
      connect(PumpVS, limiter3.u) annotation (Line(points={{-115,53},{-103.5,53},
              {-103.5,55},{-93.4,55}}, color={0,0,127}));
      connect(limiter3.y, int_pumpVS.u) annotation (Line(points={{-77.3,55},{
              -77.3,59.5},{-67,59.5},{-67,63}}, color={0,0,127}));
      connect(PumpAHUVN, limiter4.u)
        annotation (Line(points={{-115,13},{-93.4,13}}, color={0,0,127}));
      connect(limiter4.y, int_pumpAHUVN.u) annotation (Line(points={{-77.3,13},{
              -72.65,13},{-72.65,15},{-69,15}}, color={0,0,127}));
      connect(PumpAHUVS, limiter5.u) annotation (Line(points={{-116,-30},{-102,
              -30},{-102,-27},{-89.4,-27}}, color={0,0,127}));
      connect(limiter5.y, int_pumpAHUVS.u) annotation (Line(points={{-73.3,-27},{
              -66.65,-27},{-66.65,-27},{-59,-27}}, color={0,0,127}));
      connect(PumpGC, limiter6.u) annotation (Line(points={{-115,-69},{-103.5,-69},
              {-103.5,-69},{-89.4,-69}}, color={0,0,127}));
      connect(limiter6.y, int_pumpGC.u) annotation (Line(points={{-73.3,-69},{
              -61.65,-69},{-61.65,-71},{-51,-71}}, color={0,0,127}));
      connect(Fansupply, limiter7.u) annotation (Line(points={{-114,-108},{-100,
              -108},{-100,-105},{-87.4,-105}}, color={0,0,127}));
      connect(limiter7.y, int_fansupply.u) annotation (Line(points={{-71.3,-105},
              {-64.65,-105},{-64.65,-109},{-59,-109}}, color={0,0,127}));
      connect(Fanreturn, limiter8.u) annotation (Line(points={{-115,-151},{-101.5,
              -151},{-101.5,-143},{-87.4,-143}}, color={0,0,127}));
      connect(limiter8.y, int_fanreturn.u) annotation (Line(points={{-71.3,-143},
              {-65.65,-143},{-65.65,-143},{-59,-143}}, color={0,0,127}));
      connect(HP, limiter9.u) annotation (Line(points={{-118,-194},{-96,-194},{
              -96,-183},{-73.4,-183}}, color={0,0,127}));
      connect(limiter9.y, int_HP.u) annotation (Line(points={{-57.3,-183},{-43.65,-183},
              {-43.65,-180},{-37.6,-180}},       color={0,0,127}));
      connect(PumpBF, limiter10.u) annotation (Line(points={{-114,236},{-100,236},
              {-100,231},{-79.4,231}}, color={0,0,127}));
      connect(limiter10.y, int_PumpBF.u) annotation (Line(points={{-63.3,231},{
              -48.65,231},{-48.65,230},{-33.2,230}}, color={0,0,127}));
      connect(int_PumpBF.y, JSON_pumpGH1.u[1]) annotation (Line(points={{-19.4,
              230},{62,230},{62,219},{144,219}}, color={0,0,127}));
      connect(int_PumpBF.y, Pumps_total.u[8]) annotation (Line(points={{-19.4,230},
              {28,230},{28,97.2},{78,97.2}}, color={0,0,127}));
      connect(PumpChex, limiter11.u) annotation (Line(points={{-116,206},{-100,
              206},{-100,205},{-81.4,205}}, color={0,0,127}));
      connect(limiter11.y, int_Chex.u) annotation (Line(points={{-65.3,205},{
              -54.65,205},{-54.65,206},{-43.2,206}}, color={0,0,127}));
      connect(int_Chex.y, JSON_pumpChex.u[1]) annotation (Line(points={{-29.4,206},
              {56,206},{56,199},{144,199}}, color={0,0,127}));
      connect(int_Chex.y, Pumps_total.u[9]) annotation (Line(points={{-29.4,206},
              {26,206},{26,96.2667},{78,96.2667}}, color={0,0,127}));
      connect(int_PumpBF.y, permm_PumpBF.u) annotation (Line(points={{-19.4,230},{-10,
              230},{-10,218},{-1.2,218}}, color={0,0,127}));
      connect(int_Chex.y, permm_PumpChex.u) annotation (Line(points={{-29.4,206},{-20,
              206},{-20,196},{-9.2,196}}, color={0,0,127}));
      connect(int_PumpGH.y, permm_PumpGH.u) annotation (Line(points={{-31.4,172},{-24,
              172},{-24,158},{-17.2,158}}, color={0,0,127}));
      connect(int_pumpHP.y, permm_PumpHP.u) annotation (Line(points={{-49.5,131},{-41.75,
              131},{-41.75,140},{-35.2,140}}, color={0,0,127}));
      connect(int_pumpVN.y, permm_PumpVN.u) annotation (Line(points={{-51.5,101},{-44.75,
              101},{-44.75,112},{-37.2,112}}, color={0,0,127}));
      connect(int_pumpVS.y, permm_PumpVS.u) annotation (Line(points={{-55.5,63},{-45.75,
              63},{-45.75,78},{-35.2,78}}, color={0,0,127}));
      connect(int_pumpAHUVN.y, permm_PumpAHUVN.u) annotation (Line(points={{-57.5,15},
              {-49.75,15},{-49.75,30},{-41.2,30}}, color={0,0,127}));
      connect(int_pumpAHUVS.y, permm_PumpAHUVS.u) annotation (Line(points={{-47.5,-27},
              {-40.75,-27},{-40.75,-14},{-35.2,-14}}, color={0,0,127}));
      connect(int_pumpGC.y, permm_PumpGC.u) annotation (Line(points={{-39.5,-71},{-39.5,
              -61.5},{-33.2,-61.5},{-33.2,-52}}, color={0,0,127}));
      connect(int_fansupply.y, permm_Fansupply.u) annotation (Line(points={{-47.5,-109},
              {-31.2,-109},{-31.2,-94}}, color={0,0,127}));
      connect(int_fanreturn.y, permm_Fanreturn.u) annotation (Line(points={{-47.5,-143},
              {-47.5,-135.5},{-35.2,-135.5},{-35.2,-130}}, color={0,0,127}));
      connect(Fans_total.y, permm_Fans_total.u) annotation (Line(points={{65.02,-124},
              {68,-124},{68,-140},{72.8,-140}}, color={0,0,127}));
      connect(Pumps_total.y, permm_pumps_TOTAL.u) annotation (Line(points={{91.02,100},
              {98,100},{98,112},{104.8,112}}, color={0,0,127}));
      connect(Pumps_and_Fans_total.y, permm_pumpsandfans_TOTAL.u) annotation (Line(
            points={{121.02,68},{124,68},{124,82},{128.8,82}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -200},{160,240}}), graphics={Rectangle(
              extent={{-100,240},{160,-200}},
              lineColor={0,140,72},
              lineThickness=1), Text(
              extent={{-36,74},{112,-136}},
              lineColor={0,140,72},
              lineThickness=1,
              textString="E_calc
")}),   Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-200},{
                160,240}})));
    end E_calc_O;

    package TRet_ctrl
      "Controller to keep the return temperature constant"
      model TRet_ctrl_VN
        "Model to control 3wayvalve in order to keep the return temperature constant for the Vaartstraat case"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-38},{-26,-18}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput VNus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={15,115})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 23.5)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={78,30})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 22)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={80,70})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm -
              273.15) - 10)/5)          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={82,48})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T1.u)
          annotation (Line(points={{-33.4,88},{38,88},{38,56}}, color={0,0,127}));
        connect(switch_VN_T1.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},{18,
                50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_VN_T1.y) annotation (Line(points={{-4,-28},{-4,22},{27,
                22},{27,44}}, color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},{-16,
                -40}}, color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-40},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-28},{-36,-28},
                {-36,-8},{-46,-8}}, color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_VN_T1.y, VNus) annotation (Line(points={{27,44},{22,44},{
                22,115},{15,115}}, color={0,0,127}));
        connect(TSetW.y, switch_VN_T1.a) annotation (Line(points={{69,70},{62,70},{62,
                52},{50,52}}, color={0,0,127}));
        connect(TSetW1.y, switch_VN_T1.b) annotation (Line(points={{71,48},{58,48},{58,
                44},{50,44}}, color={0,0,127}));
        connect(TsetS.y, switch_VN_T1.c) annotation (Line(points={{67,30},{60,30},{60,
                36},{50,36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="TRet_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end TRet_ctrl_VN;

      model TRet_ctrl_VS
        "Model to control 3wayvalve in order to keep the return temperature constant for the Office case"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_VN_T1 annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-38},{-26,-18}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput VSus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={15,115})));
         Modelica.Blocks.Sources.RealExpression TSetW2(y=273.15 + 22)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={86,58})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 23)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={84,18})));
         Modelica.Blocks.Sources.RealExpression TSetW3(y=273.15 + (22 - 0.5) + 2.5*((
              TRM.TRm - 273.15) - 10)/5)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={86,40})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_VN_T1.u)
          annotation (Line(points={{-33.4,88},{38,88},{38,56}}, color={0,0,127}));
        connect(switch_VN_T1.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},{18,
                50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_VN_T1.y) annotation (Line(points={{-4,-28},{-4,22},{27,
                22},{27,44}}, color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},{-16,
                -40}}, color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-40},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-28},{-36,-28},
                {-36,-8},{-46,-8}}, color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_VN_T1.y,VSus)  annotation (Line(points={{27,44},{22,44},{
                22,115},{15,115}}, color={0,0,127}));
        connect(TSetW2.y, switch_VN_T1.a) annotation (Line(points={{75,58},{64,58},{64,
                52},{50,52}}, color={0,0,127}));
        connect(TSetW3.y, switch_VN_T1.b) annotation (Line(points={{75,40},{60,40},{60,
                44},{50,44}}, color={0,0,127}));
        connect(TsetS1.y, switch_VN_T1.c) annotation (Line(points={{73,18},{62,18},{62,
                36},{50,36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="TRet_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end TRet_ctrl_VS;

      model TRet_ctrl_ON
        "Model to control 3wayvalve in order to keep the return temperature constant for ON"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_ON_T annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-38},{-26,-18}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput ONus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={15,115})));
         Modelica.Blocks.Sources.RealExpression TsetS(y=273.15 + 24.5)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={78,22})));
         Modelica.Blocks.Sources.RealExpression TSetW(y=273.15 + 24)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={84,72})));
         Modelica.Blocks.Sources.RealExpression TSetW1(y=273.15 + 22 + 2.5*((TRM.TRm
               - 273.15) - 10)/5)       annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={78,48})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_ON_T.u) annotation (Line(points={{-33.4,88},{38,
                88},{38,56}}, color={0,0,127}));
        connect(switch_ON_T.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},
                {18,50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_ON_T.y) annotation (Line(points={{-4,-28},{-4,22},
                {27,22},{27,44}}, color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},{-16,
                -40}}, color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-40},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-28},{-36,-28},
                {-36,-8},{-46,-8}}, color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_ON_T.y, ONus) annotation (Line(points={{27,44},{22,44},{22,
                115},{15,115}}, color={0,0,127}));
        connect(switch_ON_T.a, TSetW.y) annotation (Line(points={{50,52},{62,52},
                {62,72},{73,72}}, color={0,0,127}));
        connect(TSetW1.y, switch_ON_T.b) annotation (Line(points={{67,48},{58,48},
                {58,44},{50,44}}, color={0,0,127}));
        connect(TsetS.y, switch_ON_T.c) annotation (Line(points={{67,22},{58,22},
                {58,36},{50,36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="TRet_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end TRet_ctrl_ON;

      model TRet_ctrl_OS
        "Model to control 3wayvalve in order to keep the return temperature constant for OS"
        import TABS_1;

        Modelica.Blocks.Interfaces.RealInput u1
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={0,-120})));
        Modelica.Blocks.Logical.Switch switch_H_C_mode
          annotation (Placement(transformation(extent={{-48,-10},{-68,10}})));
        TABS_1.BaseClasses.Switch_3 switch_ON_T annotation (Placement(
              transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={38,44})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{-100,-14},{-130,16}})));
        IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
          annotation (Placement(transformation(extent={{-54,78},{-34,98}})));
        inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
              Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
          annotation (Placement(transformation(extent={{-104,80},{-84,100}})));
         IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
           annotation (Placement(transformation(extent={{-78,82},{-62,98}})));

        IDEAS.Controls.Continuous.LimPID PIDH(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,40},{-26,60}})));
        IDEAS.Controls.Continuous.LimPID PIDC(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=-1/5,
          Ti=2*3600,
          yMax=1,
          yMin=0) annotation (Placement(transformation(extent={{-6,-38},{-26,-18}})));
        Modelica.Blocks.Interfaces.BooleanInput u
          annotation (Placement(transformation(extent={{140,-20},{100,20}})));
        Modelica.Blocks.Interfaces.RealOutput OSus annotation (Placement(
              transformation(
              extent={{15,-15},{-15,15}},
              rotation=-90,
              origin={15,115})));
         Modelica.Blocks.Sources.RealExpression TSetW2(y=273.15 + 23)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={80,64})));
         Modelica.Blocks.Sources.RealExpression TsetS1(y=273.15 + 23)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={74,20})));
         Modelica.Blocks.Sources.RealExpression TSetW3(y=273.15 + (22 - 0.5) +
              2.5*((TRM.TRm - 273.15) - 10)/5)
                                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={76,40})));
      equation
        connect(switch_H_C_mode.y, y) annotation (Line(points={{-69,0},{-84,0},{-84,1},
                {-115,1}}, color={0,0,127}));
        connect(TRM.TRm, switch_ON_T.u) annotation (Line(points={{-33.4,88},{38,
                88},{38,56}}, color={0,0,127}));
        connect(switch_ON_T.y, PIDH.u_s) annotation (Line(points={{27,44},{18,44},
                {18,50},{-4,50}}, color={0,0,127}));
        connect(PIDC.u_s, switch_ON_T.y) annotation (Line(points={{-4,-28},{-4,22},
                {27,22},{27,44}}, color={0,0,127}));
        connect(u1, PIDC.u_m) annotation (Line(points={{0,-120},{0,-80},{-16,-80},{-16,
                -40}}, color={0,0,127}));
        connect(PIDC.u_m, PIDH.u_m)
          annotation (Line(points={{-16,-40},{-16,38}}, color={0,0,127}));
        connect(PIDC.y, switch_H_C_mode.u3) annotation (Line(points={{-27,-28},{-36,-28},
                {-36,-8},{-46,-8}}, color={0,0,127}));
        connect(PIDH.y, switch_H_C_mode.u1) annotation (Line(points={{-27,50},{-36,50},
                {-36,8},{-46,8}}, color={0,0,127}));
        connect(switch_H_C_mode.u2, u)
          annotation (Line(points={{-46,0},{120,0}}, color={255,0,255}));
        connect(switch_ON_T.y, OSus) annotation (Line(points={{27,44},{22,44},{22,
                115},{15,115}}, color={0,0,127}));
        connect(TSetW2.y, switch_ON_T.a) annotation (Line(points={{69,64},{62,64},
                {62,52},{50,52}}, color={0,0,127}));
        connect(TSetW3.y, switch_ON_T.b) annotation (Line(points={{65,40},{58,40},
                {58,44},{50,44}}, color={0,0,127}));
        connect(TsetS1.y, switch_ON_T.c) annotation (Line(points={{63,20},{58,20},
                {58,36},{50,36}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={238,46,47},
                lineThickness=1), Text(
                extent={{-94,78},{86,-70}},
                lineColor={238,46,47},
                lineThickness=1,
                textString="TRet_ctrl")}),
            Diagram(coordinateSystem(preserveAspectRatio=false)));
      end TRet_ctrl_OS;
    end TRet_ctrl;

    package Cold_ST
      model CST_ctrl "only use the cold storage tank in heating + passive cooling mode"
        Modelica.Blocks.Interfaces.RealInput HP_on
          annotation (Placement(transformation(extent={{-140,34},{-100,74}})));
        Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(
            threshold=0.25)
          annotation (Placement(transformation(extent={{-80,44},{-60,64}})));
        Modelica.Blocks.Interfaces.RealInput pumpGCon
          annotation (Placement(transformation(extent={{-142,-76},{-102,-36}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{-22,-6},{-2,14}})));
        Modelica.Blocks.Logical.Switch switch1
          annotation (Placement(transformation(extent={{30,-6},{50,14}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=0)
          annotation (Placement(transformation(extent={{-2,34},{18,54}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=1)
          annotation (Placement(transformation(extent={{-14,-50},{6,-30}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=25, uHigh=200)
          annotation (Placement(transformation(extent={{-76,-34},{-56,-14}})));
        Modelica.Blocks.Interfaces.RealOutput y1
          annotation (Placement(transformation(extent={{104,-54},{124,-34}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=1 - y)
          annotation (Placement(transformation(extent={{64,-56},{84,-36}})));
      equation
        connect(HP_on, greaterEqualThreshold.u)
          annotation (Line(points={{-120,54},{-82,54}}, color={0,0,127}));
        connect(greaterEqualThreshold.y, and1.u1) annotation (Line(points={{-59,
                54},{-40,54},{-40,4},{-24,4}}, color={255,0,255}));
        connect(and1.y, switch1.u2)
          annotation (Line(points={{-1,4},{28,4}}, color={255,0,255}));
        connect(realExpression1.y, switch1.u3) annotation (Line(points={{7,-40},{
                7,-21},{28,-21},{28,-4}}, color={0,0,127}));
        connect(realExpression.y, switch1.u1) annotation (Line(points={{19,44},{
                22,44},{22,12},{28,12}}, color={0,0,127}));
        connect(switch1.y, y) annotation (Line(points={{51,4},{76,4},{76,0},{110,
                0}}, color={0,0,127}));
        connect(pumpGCon, hysteresis.u) annotation (Line(points={{-122,-56},{-98,
                -56},{-98,-24},{-78,-24}}, color={0,0,127}));
        connect(hysteresis.y, and1.u2) annotation (Line(points={{-55,-24},{-24,
                -24},{-24,-4}}, color={255,0,255}));
        connect(realExpression2.y, y1) annotation (Line(points={{85,-46},{96,-46},
                {96,-44},{114,-44}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid), Text(
                extent={{-72,66},{72,-68}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="CST_ctrl")}),                              Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end CST_ctrl;

      model noCST_ctrl
        "Controller that controls the 3wayvalves for the BF in order to determine that the BF is connected
  to the HP or to PumpGC"
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{30,10},{50,30}})));
        Modelica.Blocks.Logical.Switch switch_H_C1
          annotation (Placement(transformation(extent={{66,-8},{86,12}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-140,10},{-100,50}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,-46},{-100,-6}})));
        Modelica.Blocks.Interfaces.RealOutput y
          annotation (Placement(transformation(extent={{100,-8},{120,12}})));
        Modelica.Blocks.Sources.RealExpression both(y=0.2)
          annotation (Placement(transformation(extent={{-80,-2},{-60,18}})));
        Modelica.Blocks.Sources.RealExpression on(y=1)
          annotation (Placement(transformation(extent={{-36,36},{-16,56}})));
        Modelica.Blocks.Logical.Switch switch_HP1
          annotation (Placement(transformation(extent={{28,-82},{48,-62}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-62,-94},{-42,-74}})));
        Modelica.Blocks.Logical.Switch switch_pumpBF
          annotation (Placement(transformation(extent={{-16,-44},{4,-24}})));
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-140,-96},{-100,-56}})));
        Modelica.Blocks.Sources.RealExpression on1(y=0.8)
          annotation (Placement(transformation(extent={{-48,-76},{-28,-56}})));
        Modelica.Blocks.Logical.LessEqualThreshold lessEqualThreshold(threshold=-50)
          annotation (Placement(transformation(extent={{-74,-62},{-54,-42}})));
      equation
        connect(VS_needH, switch_H_C1.u2) annotation (Line(points={{-120,-26},{
                -70,-26},{-70,2},{64,2}}, color={255,0,255}));
        connect(VN_needH, switch_HP.u2) annotation (Line(points={{-120,30},{-64,
                30},{-64,20},{28,20}}, color={255,0,255}));
        connect(switch_HP.y, switch_H_C1.u1) annotation (Line(points={{51,20},{56,
                20},{56,10},{64,10}}, color={0,0,127}));
        connect(switch_H_C1.y, y)
          annotation (Line(points={{87,2},{110,2}}, color={0,0,127}));
        connect(VN_needH, switch_HP1.u2) annotation (Line(points={{-120,30},{-82,
                30},{-82,-72},{26,-72}}, color={255,0,255}));
        connect(switch_HP1.y, switch_H_C1.u3) annotation (Line(points={{49,-72},{
                54,-72},{54,-6},{64,-6}}, color={0,0,127}));
        connect(on.y, switch_HP.u1) annotation (Line(points={{-15,46},{22,46},{22,
                28},{28,28}}, color={0,0,127}));
        connect(off.y, switch_HP1.u3) annotation (Line(points={{-41,-84},{22,-84},
                {22,-80},{26,-80}}, color={0,0,127}));
        connect(both.y, switch_pumpBF.u1) annotation (Line(points={{-59,8},{-36,8},
                {-36,-26},{-18,-26}}, color={0,0,127}));
        connect(switch_pumpBF.y, switch_HP1.u1) annotation (Line(points={{5,-34},
                {18,-34},{18,-64},{26,-64}}, color={0,0,127}));
        connect(switch_pumpBF.y, switch_HP.u3) annotation (Line(points={{5,-34},{
                18,-34},{18,12},{28,12}}, color={0,0,127}));
        connect(on1.y, switch_pumpBF.u3) annotation (Line(points={{-27,-66},{-22,
                -66},{-22,-42},{-18,-42}}, color={0,0,127}));
        connect(u, lessEqualThreshold.u) annotation (Line(points={{-120,-76},{
                -100,-76},{-100,-52},{-76,-52}}, color={0,0,127}));
        connect(lessEqualThreshold.y, switch_pumpBF.u2) annotation (Line(points={
                {-53,-52},{-34,-52},{-34,-34},{-18,-34}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Rectangle(
                extent={{-100,100},{100,-100}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid), Text(
                extent={{-72,66},{72,-68}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="noCST_ctrl")}),                            Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end noCST_ctrl;

      model noCST_ctrl2 "Controller that controls the 3wayvalves for the BF in order to determine that the BF is connected
  to the HP or to PumpGC"
        Modelica.Blocks.Logical.Switch switch_VNH
          annotation (Placement(transformation(extent={{100,-26},{120,-6}})));
        Modelica.Blocks.Logical.Switch switch_VSH
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.BooleanInput VN_needH
          annotation (Placement(transformation(extent={{-142,68},{-102,108}})));
        Modelica.Blocks.Interfaces.BooleanInput VS_needH
          annotation (Placement(transformation(extent={{-140,6},{-100,46}})));
        Modelica.Blocks.Interfaces.RealOutput yH
          annotation (Placement(transformation(extent={{180,-60},{220,-20}})));
        Modelica.Blocks.Sources.RealExpression on(y=1)
          annotation (Placement(transformation(extent={{16,-14},{36,6}})));
        Modelica.Blocks.Logical.Switch switch_VNH1
          annotation (Placement(transformation(extent={{92,-90},{112,-70}})));
        Modelica.Blocks.Sources.RealExpression off(y=0)
          annotation (Placement(transformation(extent={{-18,-106},{2,-86}})));
        Modelica.Blocks.Logical.Switch switch_pumpBF
          annotation (Placement(transformation(extent={{54,-56},{74,-36}})));
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-142,-50},{-102,-10}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-142,134},{-102,174}})));
        Modelica.Blocks.Interfaces.RealOutput yBF
          annotation (Placement(transformation(extent={{180,112},{220,152}})));
        Modelica.Blocks.Interfaces.RealInput mHP annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-6,240})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=20000,
          Ti=300,
          yMax=20000,
          yMin=0) annotation (Placement(transformation(extent={{138,144},{158,124}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={148,238})));
        Modelica.Blocks.Logical.Switch switch_VSH1
          annotation (Placement(transformation(extent={{98,126},{118,146}})));
        Modelica.Blocks.Logical.Switch switch_VNH2
          annotation (Placement(transformation(extent={{44,152},{64,172}})));
        Modelica.Blocks.Logical.Switch switch_HP1
          annotation (Placement(transformation(extent={{0,176},{20,196}})));
        Modelica.Blocks.Sources.RealExpression off1(y=0)
          annotation (Placement(transformation(extent={{-88,168},{-68,188}})));
        Modelica.Blocks.Logical.Switch switch_HP2
          annotation (Placement(transformation(extent={{16,118},{36,138}})));
        Modelica.Blocks.Logical.Switch switch_GC
          annotation (Placement(transformation(extent={{-16,94},{4,114}})));
        Modelica.Blocks.Logical.Switch switch_GC1
          annotation (Placement(transformation(extent={{-26,134},{-6,154}})));
        Modelica.Blocks.Interfaces.RealInput mHP_mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-92,242})));
        Modelica.Blocks.Interfaces.RealInput mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={78,240})));
        Modelica.Blocks.Logical.Switch switch_VNH3
          annotation (Placement(transformation(extent={{54,68},{74,88}})));
        Modelica.Blocks.Logical.Switch switch_GC2
          annotation (Placement(transformation(extent={{6,40},{26,60}})));
        Modelica.Blocks.Interfaces.RealOutput yC
          annotation (Placement(transformation(extent={{182,26},{218,62}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{78,40},{98,60}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC
          annotation (Placement(transformation(extent={{146,34},{166,54}})));
        Modelica.Blocks.Sources.RealExpression on1(y=1)
          annotation (Placement(transformation(extent={{118,62},{138,82}})));
        Modelica.Blocks.Logical.And and2
          annotation (Placement(transformation(extent={{36,12},{56,32}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC1
          annotation (Placement(transformation(extent={{104,4},{124,24}})));
        Modelica.Blocks.Logical.Not not1
          annotation (Placement(transformation(extent={{-4,22},{4,30}})));
        Modelica.Blocks.Logical.Not not2
          annotation (Placement(transformation(extent={{-2,8},{6,16}})));
        Modelica.Blocks.Sources.RealExpression offC(y=0)
          annotation (Placement(transformation(extent={{82,26},{94,38}})));
        Modelica.Blocks.Sources.RealExpression C(y=1 - yH)
          annotation (Placement(transformation(extent={{64,0},{76,16}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=25, uHigh=200)
          annotation (Placement(transformation(extent={{-80,-36},{-60,-16}})));
      equation
        connect(VS_needH, switch_VSH.u2) annotation (Line(points={{-120,26},{-82,
                26},{-82,-40},{138,-40}}, color={255,0,255}));
        connect(VN_needH, switch_VNH.u2) annotation (Line(points={{-122,88},{-64,
                88},{-64,-16},{98,-16}}, color={255,0,255}));
        connect(switch_VNH.y, switch_VSH.u1) annotation (Line(points={{121,-16},{
                128,-16},{128,-32},{138,-32}}, color={0,0,127}));
        connect(switch_VSH.y, yH)
          annotation (Line(points={{161,-40},{200,-40}}, color={0,0,127}));
        connect(VN_needH, switch_VNH1.u2) annotation (Line(points={{-122,88},{-82,
                88},{-82,-80},{90,-80}}, color={255,0,255}));
        connect(switch_VNH1.y, switch_VSH.u3) annotation (Line(points={{113,-80},
                {120,-80},{120,-48},{138,-48}}, color={0,0,127}));
        connect(off.y, switch_VNH1.u3) annotation (Line(points={{3,-96},{22,-96},
                {22,-88},{90,-88}}, color={0,0,127}));
        connect(switch_pumpBF.y, switch_VNH1.u1) annotation (Line(points={{75,-46},
                {88,-46},{88,-72},{90,-72}}, color={0,0,127}));
        connect(switch_pumpBF.y, switch_VNH.u3) annotation (Line(points={{75,-46},
                {88,-46},{88,-24},{98,-24}}, color={0,0,127}));
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{148,146},{148,238}}, color={0,0,127}));
        connect(PIDBF.y, yBF) annotation (Line(points={{159,134},{170,134},{170,
                132},{200,132}}, color={0,0,127}));
        connect(switch_VSH1.y, PIDBF.u_s) annotation (Line(points={{119,136},{126,
                136},{126,134},{136,134}}, color={0,0,127}));
        connect(VS_needH, switch_VSH1.u2) annotation (Line(points={{-120,26},{-44,
                26},{-44,136},{96,136}}, color={255,0,255}));
        connect(switch_VNH2.y, switch_VSH1.u1) annotation (Line(points={{65,162},
                {80,162},{80,144},{96,144}}, color={0,0,127}));
        connect(VN_needH, switch_VNH2.u2) annotation (Line(points={{-122,88},{-90,
                88},{-90,162},{42,162}}, color={255,0,255}));
        connect(switch_HP1.u2, HPon) annotation (Line(points={{-2,186},{-60,186},
                {-60,154},{-122,154}}, color={255,0,255}));
        connect(switch_HP1.y, switch_VNH2.u1) annotation (Line(points={{21,186},{
                32,186},{32,170},{42,170}}, color={0,0,127}));
        connect(mHP, switch_HP1.u1) annotation (Line(points={{-6,240},{-6,194},{
                -2,194}}, color={0,0,127}));
        connect(on.y, switch_VNH.u1) annotation (Line(points={{37,-4},{84,-4},{84,
                -8},{98,-8}}, color={0,0,127}));
        connect(off1.y, switch_HP1.u3)
          annotation (Line(points={{-67,178},{-2,178}}, color={0,0,127}));
        connect(HPon, switch_HP2.u2) annotation (Line(points={{-122,154},{-60,154},
                {-60,128},{14,128}}, color={255,0,255}));
        connect(switch_HP2.y, switch_VNH2.u3) annotation (Line(points={{37,128},{
                42,128},{42,154}}, color={0,0,127}));
        connect(switch_GC1.y, switch_HP2.u1) annotation (Line(points={{-5,144},{
                -2,144},{-2,136},{14,136}}, color={0,0,127}));
        connect(switch_GC.y, switch_HP2.u3)
          annotation (Line(points={{5,104},{14,104},{14,120}}, color={0,0,127}));
        connect(yH, yH)
          annotation (Line(points={{200,-40},{200,-40}}, color={0,0,127}));
        connect(mHP_mGC, switch_GC1.u1) annotation (Line(points={{-92,242},{-90,
                242},{-90,152},{-28,152}}, color={0,0,127}));
        connect(mHP, switch_GC1.u3) annotation (Line(points={{-6,240},{-6,135},{
                -28,135},{-28,136}}, color={0,0,127}));
        connect(switch_GC.u1, mGC) annotation (Line(points={{-18,112},{78,112},{
                78,240}}, color={0,0,127}));
        connect(switch_GC.u3, off1.y) annotation (Line(points={{-18,96},{-52,96},
                {-52,178},{-67,178}}, color={0,0,127}));
        connect(switch_VNH3.y, switch_VSH1.u3) annotation (Line(points={{75,78},{
                84,78},{84,128},{96,128}}, color={0,0,127}));
        connect(VN_needH, switch_VNH3.u2) annotation (Line(points={{-122,88},{-37,
                88},{-37,78},{52,78}}, color={255,0,255}));
        connect(switch_HP2.y, switch_VNH3.u1) annotation (Line(points={{37,128},{
                40,128},{40,86},{52,86}}, color={0,0,127}));
        connect(switch_GC2.y, switch_VNH3.u3) annotation (Line(points={{27,50},{
                34,50},{34,70},{52,70}}, color={0,0,127}));
        connect(mGC, switch_GC2.u1)
          annotation (Line(points={{78,240},{78,58},{4,58}}, color={0,0,127}));
        connect(off1.y, switch_GC2.u3) annotation (Line(points={{-67,178},{-32,
                178},{-32,42},{4,42}}, color={0,0,127}));
        connect(HPon, switch_pumpBF.u2) annotation (Line(points={{-122,154},{-36,
                154},{-36,-46},{52,-46}}, color={255,0,255}));
        connect(on.y, switch_pumpBF.u1) annotation (Line(points={{37,-4},{46,-4},
                {46,-38},{52,-38}}, color={0,0,127}));
        connect(off.y, switch_pumpBF.u3) annotation (Line(points={{3,-96},{12.5,
                -96},{12.5,-54},{52,-54}}, color={0,0,127}));
        connect(HPon, and1.u1) annotation (Line(points={{-122,154},{-17,154},{-17,
                50},{76,50}}, color={255,0,255}));
        connect(and1.y, switch_HPandGC.u2) annotation (Line(points={{99,50},{130,
                50},{130,44},{144,44}}, color={255,0,255}));
        connect(on1.y, switch_HPandGC.u1) annotation (Line(points={{139,72},{139,
                60},{144,60},{144,52}}, color={0,0,127}));
        connect(switch_HPandGC.y, yC)
          annotation (Line(points={{167,44},{200,44}}, color={0,0,127}));
        connect(switch_HPandGC1.y, switch_HPandGC.u3) annotation (Line(points={{
                125,14},{134,14},{134,36},{144,36}}, color={0,0,127}));
        connect(not1.y, and2.u1) annotation (Line(points={{4.4,26},{26,26},{26,22},
                {34,22}}, color={255,0,255}));
        connect(HPon, not1.u) annotation (Line(points={{-122,154},{-40,154},{-40,
                26},{-4.8,26}}, color={255,0,255}));
        connect(not2.y, and2.u2) annotation (Line(points={{6.4,12},{26,12},{26,14},
                {34,14}}, color={255,0,255}));
        connect(and2.y, switch_HPandGC1.u2) annotation (Line(points={{57,22},{92,
                22},{92,14},{102,14}}, color={255,0,255}));
        connect(offC.y, switch_HPandGC1.u1) annotation (Line(points={{94.6,32},{
                98,32},{98,22},{102,22}}, color={0,0,127}));
        connect(C.y, switch_HPandGC1.u3) annotation (Line(points={{76.6,8},{88,8},
                {88,6},{102,6}}, color={0,0,127}));
        connect(u, hysteresis.u) annotation (Line(points={{-122,-30},{-100,-30},{
                -100,-26},{-82,-26}}, color={0,0,127}));
        connect(hysteresis.y, switch_GC.u2) annotation (Line(points={{-59,-26},{
                -36,-26},{-36,104},{-18,104}}, color={255,0,255}));
        connect(hysteresis.y, switch_GC1.u2) annotation (Line(points={{-59,-26},{
                -40,-26},{-40,144},{-28,144}}, color={255,0,255}));
        connect(hysteresis.y, switch_GC2.u2) annotation (Line(points={{-59,-26},{
                -59,-7},{4,-7},{4,50}}, color={255,0,255}));
        connect(hysteresis.y, not2.u) annotation (Line(points={{-59,-26},{-2.8,
                -26},{-2.8,12}}, color={255,0,255}));
        connect(hysteresis.y, and1.u2) annotation (Line(points={{-59,-26},{12,-26},
                {12,42},{76,42}}, color={255,0,255}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -100,-100},{180,220}}),                             graphics={
                Rectangle(
                extent={{-98,220},{180,-100}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid), Text(
                extent={{-103.5,95.5},{103.5,-95.5}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="noCST_ctrl2
",              origin={54.5,54.5},
                rotation=90)}),                                        Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  180,220}})));
      end noCST_ctrl2;

      model noCST_ctrl5 "Controller that controls the 3wayvalves and the BF pump for improvement Ihyrdr_5"
        Modelica.Blocks.Interfaces.RealOutput ydg
          annotation (Placement(transformation(extent={{182,-36},{222,4}})));
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-142,42},{-102,82}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-142,134},{-102,174}})));
        Modelica.Blocks.Interfaces.RealOutput yBF
          annotation (Placement(transformation(extent={{180,156},{220,196}})));
        Modelica.Blocks.Interfaces.RealInput mHP annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-6,240})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=50000,
          Ti=60,
          yMax=40000,
          yMin=0) annotation (Placement(transformation(extent={{138,144},{158,124}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={148,238})));
        Modelica.Blocks.Logical.Switch switch_VSH1
          annotation (Placement(transformation(extent={{98,126},{118,146}})));
        Modelica.Blocks.Logical.Switch switch_VNH2
          annotation (Placement(transformation(extent={{44,156},{64,176}})));
        Modelica.Blocks.Interfaces.RealInput mHP_mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-92,242})));
        Modelica.Blocks.Interfaces.RealInput mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={78,240})));
        Modelica.Blocks.Logical.Switch switch_VNH3
          annotation (Placement(transformation(extent={{56,92},{76,112}})));
        Modelica.Blocks.Interfaces.RealOutput yabfhij
          annotation (Placement(transformation(extent={{180,64},{216,100}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{68,40},{88,60}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC
          annotation (Placement(transformation(extent={{146,34},{166,54}})));
        Modelica.Blocks.Sources.RealExpression off2(y=0)
          annotation (Placement(transformation(extent={{100,12},{120,32}})));
        Modelica.Blocks.Sources.RealExpression offBF(y=0)
          annotation (Placement(transformation(extent={{20,78},{32,90}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=25, uHigh=200)
          annotation (Placement(transformation(extent={{-78,52},{-58,72}})));
        Modelica.Blocks.Sources.RealExpression on2(y=1)
          annotation (Placement(transformation(extent={{108,58},{128,78}})));
        Modelica.Blocks.Interfaces.RealOutput yck
          annotation (Placement(transformation(extent={{180,-94},{220,-54}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC1
          annotation (Placement(transformation(extent={{138,-78},{158,-58}})));
        Modelica.Blocks.Logical.Switch switch_GC
          annotation (Placement(transformation(extent={{78,-94},{98,-74}})));
        Modelica.Blocks.Sources.RealExpression on1(y=1)
          annotation (Placement(transformation(extent={{24,-68},{44,-48}})));
        Modelica.Blocks.Sources.RealExpression off1(y=0)
          annotation (Placement(transformation(extent={{14,-104},{34,-84}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC2
          annotation (Placement(transformation(extent={{142,-30},{162,-10}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{102,-58},{122,-38}})));
      equation
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{148,146},{148,238}}, color={0,0,127}));
        connect(PIDBF.y, yBF) annotation (Line(points={{159,134},{170,134},{170,
                176},{200,176}}, color={0,0,127}));
        connect(switch_VSH1.y, PIDBF.u_s) annotation (Line(points={{119,136},{126,
                136},{126,134},{136,134}}, color={0,0,127}));
        connect(switch_VNH2.y, switch_VSH1.u1) annotation (Line(points={{65,166},
                {80,166},{80,144},{96,144}}, color={0,0,127}));
        connect(switch_VNH3.y, switch_VSH1.u3) annotation (Line(points={{77,102},
                {84,102},{84,128},{96,128}},
                                           color={0,0,127}));
        connect(HPon, and1.u1) annotation (Line(points={{-122,154},{-17,154},{-17,
                50},{66,50}}, color={255,0,255}));
        connect(and1.y, switch_HPandGC.u2) annotation (Line(points={{89,50},{130,
                50},{130,44},{144,44}}, color={255,0,255}));
        connect(switch_HPandGC.y, yabfhij) annotation (Line(points={{167,44},{184,
                44},{184,82},{198,82}}, color={0,0,127}));
        connect(u, hysteresis.u)
          annotation (Line(points={{-122,62},{-80,62}}, color={0,0,127}));
        connect(hysteresis.y, and1.u2) annotation (Line(points={{-57,62},{44,62},
                {44,42},{66,42}}, color={255,0,255}));
        connect(on2.y, switch_HPandGC.u1) annotation (Line(points={{129,68},{136,
                68},{136,52},{144,52}}, color={0,0,127}));
        connect(off2.y, switch_HPandGC.u3) annotation (Line(points={{121,22},{140,
                22},{140,36},{144,36}}, color={0,0,127}));
        connect(HPon, switch_VSH1.u2) annotation (Line(points={{-122,154},{58,154},
                {58,136},{96,136}}, color={255,0,255}));
        connect(hysteresis.y, switch_VNH2.u2) annotation (Line(points={{-57,62},{
                8,62},{8,166},{42,166}}, color={255,0,255}));
        connect(mHP_mGC, switch_VNH2.u1) annotation (Line(points={{-92,242},{-26,
                242},{-26,174},{42,174}}, color={0,0,127}));
        connect(mHP, switch_VNH2.u3) annotation (Line(points={{-6,240},{-6,160},{
                42,160},{42,158}}, color={0,0,127}));
        connect(hysteresis.y, switch_VNH3.u2) annotation (Line(points={{-57,62},{
                2,62},{2,102},{54,102}}, color={255,0,255}));
        connect(mGC, switch_VNH3.u1) annotation (Line(points={{78,240},{78,123},{
                54,123},{54,110}}, color={0,0,127}));
        connect(offBF.y, switch_VNH3.u3) annotation (Line(points={{32.6,84},{42,
                84},{42,94},{54,94}}, color={0,0,127}));
        connect(switch_HPandGC1.y, yck) annotation (Line(points={{159,-68},{178,
                -68},{178,-74},{200,-74}}, color={0,0,127}));
        connect(switch_HPandGC1.u2, and1.y) annotation (Line(points={{136,-68},{
                136,-67},{89,-67},{89,50}}, color={255,0,255}));
        connect(off2.y, switch_HPandGC1.u1) annotation (Line(points={{121,22},{
                128,22},{128,-60},{136,-60}}, color={0,0,127}));
        connect(hysteresis.y, switch_GC.u2) annotation (Line(points={{-57,62},{0,
                62},{0,-84},{76,-84}}, color={255,0,255}));
        connect(switch_GC.y, switch_HPandGC1.u3) annotation (Line(points={{99,-84},
                {118,-84},{118,-76},{136,-76}}, color={0,0,127}));
        connect(on1.y, switch_GC.u1) annotation (Line(points={{45,-58},{61.5,-58},
                {61.5,-76},{76,-76}}, color={0,0,127}));
        connect(off1.y, switch_GC.u3) annotation (Line(points={{35,-94},{64,-94},
                {64,-92},{76,-92}}, color={0,0,127}));
        connect(switch_HPandGC2.y, ydg) annotation (Line(points={{163,-20},{174,
                -20},{174,-16},{202,-16}}, color={0,0,127}));
        connect(switch_HPandGC2.u2, and1.y) annotation (Line(points={{140,-20},{
                90,-20},{90,50},{89,50}}, color={255,0,255}));
        connect(off2.y, switch_HPandGC2.u1) annotation (Line(points={{121,22},{
                121,4},{140,4},{140,-12}}, color={0,0,127}));
        connect(switch_HP.y, switch_HPandGC2.u3) annotation (Line(points={{123,
                -48},{140,-48},{140,-28}}, color={0,0,127}));
        connect(HPon, switch_HP.u2) annotation (Line(points={{-122,154},{-50,154},
                {-50,-48},{100,-48}}, color={255,0,255}));
        connect(on1.y, switch_HP.u1) annotation (Line(points={{45,-58},{80,-58},{
                80,-40},{100,-40}}, color={0,0,127}));
        connect(off1.y, switch_HP.u3) annotation (Line(points={{35,-94},{68,-94},
                {68,-56},{100,-56}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -100,-100},{180,220}}),                             graphics={
                Rectangle(
                extent={{-98,220},{180,-100}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid), Text(
                extent={{-103.5,95.5},{103.5,-95.5}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                origin={54.5,54.5},
                rotation=90,
                textString="noCST_ctrl5

")}),                                                                  Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  180,220}})));
      end noCST_ctrl5;

      model noCST_ctrl5_OV
        "Controller that controls the 3wayvalves and the BF pump for improvement Ihyrdr_5"
        Modelica.Blocks.Interfaces.RealOutput ycdgk
          annotation (Placement(transformation(extent={{182,-36},{222,4}})));
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-142,42},{-102,82}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-142,134},{-102,174}})));
        Modelica.Blocks.Interfaces.RealOutput yBF
          annotation (Placement(transformation(extent={{180,156},{220,196}})));
        Modelica.Blocks.Interfaces.RealInput mHP annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-6,240})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=50000,
          Ti=60,
          yMax=40000,
          yMin=0) annotation (Placement(transformation(extent={{138,144},{158,124}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={148,238})));
        Modelica.Blocks.Logical.Switch switch_VSH1
          annotation (Placement(transformation(extent={{98,126},{118,146}})));
        Modelica.Blocks.Logical.Switch switch_VNH2
          annotation (Placement(transformation(extent={{44,156},{64,176}})));
        Modelica.Blocks.Interfaces.RealInput mHP_mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-92,242})));
        Modelica.Blocks.Interfaces.RealInput mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={78,240})));
        Modelica.Blocks.Logical.Switch switch_VNH3
          annotation (Placement(transformation(extent={{56,92},{76,112}})));
        Modelica.Blocks.Interfaces.RealOutput yabfhij
          annotation (Placement(transformation(extent={{180,64},{216,100}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{68,40},{88,60}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC
          annotation (Placement(transformation(extent={{146,34},{166,54}})));
        Modelica.Blocks.Sources.RealExpression off2(y=0)
          annotation (Placement(transformation(extent={{100,12},{120,32}})));
        Modelica.Blocks.Sources.RealExpression offBF(y=0)
          annotation (Placement(transformation(extent={{20,78},{32,90}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=25, uHigh=200)
          annotation (Placement(transformation(extent={{-78,52},{-58,72}})));
        Modelica.Blocks.Sources.RealExpression on2(y=1)
          annotation (Placement(transformation(extent={{108,58},{128,78}})));
        Modelica.Blocks.Sources.RealExpression off1(y=1 - yabfhij)
          annotation (Placement(transformation(extent={{124,-24},{144,-4}})));
      equation
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{148,146},{148,238}}, color={0,0,127}));
        connect(PIDBF.y, yBF) annotation (Line(points={{159,134},{170,134},{170,
                176},{200,176}}, color={0,0,127}));
        connect(switch_VSH1.y, PIDBF.u_s) annotation (Line(points={{119,136},{126,
                136},{126,134},{136,134}}, color={0,0,127}));
        connect(switch_VNH2.y, switch_VSH1.u1) annotation (Line(points={{65,166},
                {80,166},{80,144},{96,144}}, color={0,0,127}));
        connect(switch_VNH3.y, switch_VSH1.u3) annotation (Line(points={{77,102},
                {84,102},{84,128},{96,128}},
                                           color={0,0,127}));
        connect(HPon, and1.u1) annotation (Line(points={{-122,154},{-17,154},{-17,
                50},{66,50}}, color={255,0,255}));
        connect(and1.y, switch_HPandGC.u2) annotation (Line(points={{89,50},{130,
                50},{130,44},{144,44}}, color={255,0,255}));
        connect(switch_HPandGC.y, yabfhij) annotation (Line(points={{167,44},{184,
                44},{184,82},{198,82}}, color={0,0,127}));
        connect(u, hysteresis.u)
          annotation (Line(points={{-122,62},{-80,62}}, color={0,0,127}));
        connect(hysteresis.y, and1.u2) annotation (Line(points={{-57,62},{44,62},
                {44,42},{66,42}}, color={255,0,255}));
        connect(on2.y, switch_HPandGC.u1) annotation (Line(points={{129,68},{136,
                68},{136,52},{144,52}}, color={0,0,127}));
        connect(off2.y, switch_HPandGC.u3) annotation (Line(points={{121,22},{140,
                22},{140,36},{144,36}}, color={0,0,127}));
        connect(HPon, switch_VSH1.u2) annotation (Line(points={{-122,154},{58,154},
                {58,136},{96,136}}, color={255,0,255}));
        connect(hysteresis.y, switch_VNH2.u2) annotation (Line(points={{-57,62},{
                8,62},{8,166},{42,166}}, color={255,0,255}));
        connect(mHP_mGC, switch_VNH2.u1) annotation (Line(points={{-92,242},{-26,
                242},{-26,174},{42,174}}, color={0,0,127}));
        connect(mHP, switch_VNH2.u3) annotation (Line(points={{-6,240},{-6,160},{
                42,160},{42,158}}, color={0,0,127}));
        connect(hysteresis.y, switch_VNH3.u2) annotation (Line(points={{-57,62},{
                2,62},{2,102},{54,102}}, color={255,0,255}));
        connect(mGC, switch_VNH3.u1) annotation (Line(points={{78,240},{78,123},{
                54,123},{54,110}}, color={0,0,127}));
        connect(offBF.y, switch_VNH3.u3) annotation (Line(points={{32.6,84},{42,
                84},{42,94},{54,94}}, color={0,0,127}));
        connect(off1.y, ycdgk) annotation (Line(points={{145,-14},{167.5,-14},{
                167.5,-16},{202,-16}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -100,-100},{180,220}}),                             graphics={
                Rectangle(
                extent={{-98,220},{180,-100}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid), Text(
                extent={{-103.5,95.5},{103.5,-95.5}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                origin={54.5,54.5},
                rotation=90,
                textString="noCST_ctrl5

")}),                                                                  Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  180,220}})));
      end noCST_ctrl5_OV;

      model noCST_ctrl_Ihydr8
        "Controller that controls the 3wayvalves and the BF pump for improvement Ihyrdr_5"
        Modelica.Blocks.Interfaces.RealOutput ydg
          annotation (Placement(transformation(extent={{182,-36},{222,4}})));
        Modelica.Blocks.Interfaces.RealInput u
          annotation (Placement(transformation(extent={{-142,42},{-102,82}})));
        Modelica.Blocks.Interfaces.BooleanInput HPon
          annotation (Placement(transformation(extent={{-142,134},{-102,174}})));
        Modelica.Blocks.Interfaces.RealOutput yBF
          annotation (Placement(transformation(extent={{180,156},{220,196}})));
        Modelica.Blocks.Interfaces.RealInput mHP annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-6,240})));
        IDEAS.Controls.Continuous.LimPID PIDBF(
          controllerType=Modelica.Blocks.Types.SimpleController.PI,
          k=25000,
          Ti=60,
          yMax=15000,
          yMin=0) annotation (Placement(transformation(extent={{138,144},{158,124}})));
        Modelica.Blocks.Interfaces.RealInput BFm annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={148,238})));
        Modelica.Blocks.Logical.Switch switch_VSH1
          annotation (Placement(transformation(extent={{98,126},{118,146}})));
        Modelica.Blocks.Logical.Switch switch_VNH2
          annotation (Placement(transformation(extent={{44,156},{64,176}})));
        Modelica.Blocks.Interfaces.RealInput mHP_mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={-92,242})));
        Modelica.Blocks.Interfaces.RealInput mGC annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=-90,
              origin={78,240})));
        Modelica.Blocks.Logical.Switch switch_VNH3
          annotation (Placement(transformation(extent={{56,92},{76,112}})));
        Modelica.Blocks.Interfaces.RealOutput yabfhij
          annotation (Placement(transformation(extent={{180,64},{216,100}})));
        Modelica.Blocks.Logical.And and1
          annotation (Placement(transformation(extent={{68,40},{88,60}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC
          annotation (Placement(transformation(extent={{146,34},{166,54}})));
        Modelica.Blocks.Sources.RealExpression off2(y=0)
          annotation (Placement(transformation(extent={{100,12},{120,32}})));
        Modelica.Blocks.Sources.RealExpression offBF(y=0)
          annotation (Placement(transformation(extent={{20,78},{32,90}})));
        Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=25, uHigh=300)
          annotation (Placement(transformation(extent={{-78,52},{-58,72}})));
        Modelica.Blocks.Sources.RealExpression on2(y=1)
          annotation (Placement(transformation(extent={{108,58},{128,78}})));
        Modelica.Blocks.Interfaces.RealOutput yck
          annotation (Placement(transformation(extent={{180,-94},{220,-54}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC1
          annotation (Placement(transformation(extent={{138,-78},{158,-58}})));
        Modelica.Blocks.Logical.Switch switch_GC
          annotation (Placement(transformation(extent={{78,-94},{98,-74}})));
        Modelica.Blocks.Sources.RealExpression on1(y=1)
          annotation (Placement(transformation(extent={{24,-68},{44,-48}})));
        Modelica.Blocks.Sources.RealExpression off1(y=0)
          annotation (Placement(transformation(extent={{14,-104},{34,-84}})));
        Modelica.Blocks.Logical.Switch switch_HPandGC2
          annotation (Placement(transformation(extent={{142,-30},{162,-10}})));
        Modelica.Blocks.Logical.Switch switch_HP
          annotation (Placement(transformation(extent={{102,-58},{122,-38}})));
      equation
        connect(PIDBF.u_m, BFm)
          annotation (Line(points={{148,146},{148,238}}, color={0,0,127}));
        connect(PIDBF.y, yBF) annotation (Line(points={{159,134},{170,134},{170,
                176},{200,176}}, color={0,0,127}));
        connect(switch_VSH1.y, PIDBF.u_s) annotation (Line(points={{119,136},{126,
                136},{126,134},{136,134}}, color={0,0,127}));
        connect(switch_VNH2.y, switch_VSH1.u1) annotation (Line(points={{65,166},
                {80,166},{80,144},{96,144}}, color={0,0,127}));
        connect(switch_VNH3.y, switch_VSH1.u3) annotation (Line(points={{77,102},
                {84,102},{84,128},{96,128}},
                                           color={0,0,127}));
        connect(HPon, and1.u1) annotation (Line(points={{-122,154},{-17,154},{-17,
                50},{66,50}}, color={255,0,255}));
        connect(and1.y, switch_HPandGC.u2) annotation (Line(points={{89,50},{130,
                50},{130,44},{144,44}}, color={255,0,255}));
        connect(switch_HPandGC.y, yabfhij) annotation (Line(points={{167,44},{184,
                44},{184,82},{198,82}}, color={0,0,127}));
        connect(u, hysteresis.u)
          annotation (Line(points={{-122,62},{-80,62}}, color={0,0,127}));
        connect(hysteresis.y, and1.u2) annotation (Line(points={{-57,62},{44,62},
                {44,42},{66,42}}, color={255,0,255}));
        connect(on2.y, switch_HPandGC.u1) annotation (Line(points={{129,68},{136,
                68},{136,52},{144,52}}, color={0,0,127}));
        connect(off2.y, switch_HPandGC.u3) annotation (Line(points={{121,22},{140,
                22},{140,36},{144,36}}, color={0,0,127}));
        connect(HPon, switch_VSH1.u2) annotation (Line(points={{-122,154},{58,154},
                {58,136},{96,136}}, color={255,0,255}));
        connect(hysteresis.y, switch_VNH2.u2) annotation (Line(points={{-57,62},{
                8,62},{8,166},{42,166}}, color={255,0,255}));
        connect(mHP_mGC, switch_VNH2.u1) annotation (Line(points={{-92,242},{-26,
                242},{-26,174},{42,174}}, color={0,0,127}));
        connect(mHP, switch_VNH2.u3) annotation (Line(points={{-6,240},{-6,160},{
                42,160},{42,158}}, color={0,0,127}));
        connect(hysteresis.y, switch_VNH3.u2) annotation (Line(points={{-57,62},{
                2,62},{2,102},{54,102}}, color={255,0,255}));
        connect(mGC, switch_VNH3.u1) annotation (Line(points={{78,240},{78,123},{
                54,123},{54,110}}, color={0,0,127}));
        connect(offBF.y, switch_VNH3.u3) annotation (Line(points={{32.6,84},{42,
                84},{42,94},{54,94}}, color={0,0,127}));
        connect(switch_HPandGC1.y, yck) annotation (Line(points={{159,-68},{178,
                -68},{178,-74},{200,-74}}, color={0,0,127}));
        connect(switch_HPandGC1.u2, and1.y) annotation (Line(points={{136,-68},{
                136,-67},{89,-67},{89,50}}, color={255,0,255}));
        connect(off2.y, switch_HPandGC1.u1) annotation (Line(points={{121,22},{
                128,22},{128,-60},{136,-60}}, color={0,0,127}));
        connect(hysteresis.y, switch_GC.u2) annotation (Line(points={{-57,62},{0,
                62},{0,-84},{76,-84}}, color={255,0,255}));
        connect(switch_GC.y, switch_HPandGC1.u3) annotation (Line(points={{99,-84},
                {118,-84},{118,-76},{136,-76}}, color={0,0,127}));
        connect(on1.y, switch_GC.u1) annotation (Line(points={{45,-58},{61.5,-58},
                {61.5,-76},{76,-76}}, color={0,0,127}));
        connect(off1.y, switch_GC.u3) annotation (Line(points={{35,-94},{64,-94},
                {64,-92},{76,-92}}, color={0,0,127}));
        connect(switch_HPandGC2.y, ydg) annotation (Line(points={{163,-20},{174,
                -20},{174,-16},{202,-16}}, color={0,0,127}));
        connect(switch_HPandGC2.u2, and1.y) annotation (Line(points={{140,-20},{
                90,-20},{90,50},{89,50}}, color={255,0,255}));
        connect(off2.y, switch_HPandGC2.u1) annotation (Line(points={{121,22},{
                121,4},{140,4},{140,-12}}, color={0,0,127}));
        connect(switch_HP.y, switch_HPandGC2.u3) annotation (Line(points={{123,
                -48},{140,-48},{140,-28}}, color={0,0,127}));
        connect(HPon, switch_HP.u2) annotation (Line(points={{-122,154},{-50,154},
                {-50,-48},{100,-48}}, color={255,0,255}));
        connect(on1.y, switch_HP.u1) annotation (Line(points={{45,-58},{80,-58},{
                80,-40},{100,-40}}, color={0,0,127}));
        connect(off1.y, switch_HP.u3) annotation (Line(points={{35,-94},{68,-94},
                {68,-56},{100,-56}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                  -100,-100},{180,220}}),                             graphics={
                Rectangle(
                extent={{-98,220},{180,-100}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid), Text(
                extent={{-103.5,95.5},{103.5,-95.5}},
                lineColor={217,67,180},
                lineThickness=1,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                origin={54.5,54.5},
                rotation=90,
                textString="noCST_ctrl_Ihydr8


")}),                                                                  Diagram(
              coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{
                  180,220}})));
      end noCST_ctrl_Ihydr8;
    end Cold_ST;
    annotation ();
  end Controllers;

  model BaseCase_V_HCCC
    "Vaartstraat case with heating curve/cooling curve control"
    import Controllers;
      replaceable package Medium = IDEAS.Media.Air(extraPropertiesNames={"CO2"});

      parameter Real a=20000 "pressure rise pumpVS during cooling";

      parameter Modelica.SIunits.Temperature TGro = 283.15
      "Ground temperature";

     IDEAS.Utilities.Time.CalendarTime calTim(zerTim=IDEAS.Utilities.Time.Types.ZeroTime.NY2019)
       annotation (Placement(transformation(extent={{-402,376},{-386,392}})));
    IDEAS.Controls.ControlHeating.RunningMeanTemperatureEN15251 TRM
      annotation (Placement(transformation(extent={{-368,374},{-348,394}})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpHP(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=0.022,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Stages,
      addPowerToMedium=false,
      dp_nominal=HP.dp1_nominal,
      heads={HP.dp1_nominal},
      prescribeSystemPressure=false)      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-234,-44})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval1VN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,-5},{6,5}},
          rotation=-90,
          origin={-97,100})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval3VN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{10,-10},{-10,10}},
          rotation=-90,
          origin={-140,38})));
    IDEAS.Fluid.Sources.Boundary_pT bou_VN(redeclare package Medium =
          IDEAS.Media.Water,
        nPorts=1)            annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=-90,
          origin={-94,-128})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={-94,-42})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=0.1505,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=TABSVN.dp_nominal + _3wayVN.res3.dp_nominal,
      prescribeSystemPressure=true)                           annotation (
        Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=90,
          origin={-94,20})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval2_VN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(transformation(
          extent={{-6,-5},{6,5}},
          rotation=-90,
          origin={-95,46})));
    IDEAS.Fluid.Actuators.Valves.ThreeWayLinear _3wayVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=0.1505,
      dpValve_nominal=100) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={-96,72})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TsupH(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=0.0077,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,5},{6,-5}},
          rotation=0,
          origin={-157,142})));
    Modelica.Blocks.Logical.Hysteresis H_CVN(uLow=-1, uHigh=1)
      annotation (Placement(transformation(extent={{32,32},{12,52}})));
    Modelica.Blocks.Sources.RealExpression eVN(y=V.tDCVN.Tset.y - (V.TSensor_VN -
          273.15))
      annotation (Placement(transformation(extent={{12,52},{26,70}})));
    IDEAS.Fluid.HeatPumps.ScrollWaterToWater HP(
      redeclare package Medium1 = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      redeclare package Medium2 = IDEAS.Media.Water,
      m1_flow_nominal=0.0015 + pumpHP.m_flow_nominal,
      m2_flow_nominal=0.0015 + pumpHP.m_flow_nominal,
      dp1_nominal=13000,
      dp2_nominal=13000,
      redeclare package ref = IDEAS.Media.Refrigerants.R410A,
      enable_variable_speed=true,
      scaling_factor=0.015,
      datHeaPum=
          IDEAS.Fluid.HeatPumps.Data.ScrollWaterToWater.Heating.Viessmann_BW301A21_28kW_5_94COP_R410A())
              annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={-240,26})));
    IDEAS.Fluid.Sources.Boundary_pT Ground_H(redeclare package Medium =
          IDEAS.Media.Antifreeze.PropyleneGlycolWater (property_T=293.15, X_a=0.40),
      nPorts=1) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-276,-22})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpGH(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=HP.m2_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Stages,
      addPowerToMedium=false,
      dp_nominal=HP.dp2_nominal,
      heads={HP.dp2_nominal}) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=0,
          origin={-286,68})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TretHP(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=0.0077,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{6,-5},{-6,5}},
          rotation=-90,
          origin={-233,0})));
    IDEAS.Fluid.HeatExchangers.DryCoilEffectivenessNTU hex(
      redeclare package Medium1 = IDEAS.Media.Water,
      redeclare package Medium2 = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m1_flow_nominal=0.6,
      m2_flow_nominal=0.6,
      dp1_nominal=35000,
      dp2_nominal=35000,
      configuration=IDEAS.Fluid.Types.HeatExchangerConfiguration.CounterFlow,
      Q_flow_nominal=680,
      T_a1_nominal=296.15,
      T_a2_nominal=290.15) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={470,30})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpGC(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=hex.m2_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=hex.dp2_nominal,
      heads={hex.dp2_nominal})    annotation (Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=90,
          origin={480,92})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TsupC(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{6,5},{-6,-5}},
          rotation=-90,
          origin={463,60})));
    Modelica.Blocks.Math.BooleanToReal booleanToRealVNH(realTrue=1, realFalse=0)
      annotation (Placement(transformation(extent={{-36,162},{-52,178}})));
    Modelica.Blocks.Math.BooleanToReal booleanToRealVNC(realTrue=0, realFalse=1)
      annotation (Placement(transformation(extent={{-18,118},{-34,134}})));
    Controllers.dp_ctrl.dp_ctrl_mSOMMOS_VN dp_ctrl_mSOMMOS_VN
      annotation (Placement(transformation(extent={{-66,28},{-42,58}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_CH(y=20)
      annotation (Placement(transformation(extent={{-10,32},{-20,46}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_N1(y=756)
      annotation (Placement(transformation(extent={{-10,26},{-20,38}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_C1(y=2740)
      annotation (Placement(transformation(extent={{-18,18},{-26,32}})));
    Controllers.Vaartstraat V
      annotation (Placement(transformation(extent={{-34,-48},{2,-16}})));
    IDEAS.Fluid.Storage.Stratified ST_hot(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=0.0077,
      VTan=0.0153,
      hTan=0.0135,
      dIns=0.2,
      nSeg=3,
      T_start=298.15)
      annotation (Placement(transformation(extent={{-186,26},{-166,46}})));
    Modelica.Blocks.Sources.RealExpression STT11(y=ST_hot.heaPorVol[1].T)
      annotation (Placement(transformation(extent={{-332,-44},{-318,-56}})));
    Modelica.Blocks.Sources.RealExpression STT3(y=ST_hot.heaPorVol[3].T)
      annotation (Placement(transformation(extent={{-332,-80},{-318,-92}})));
    Modelica.Blocks.Sources.BooleanExpression booleanExpression1(y=H_CVN.y)
      annotation (Placement(transformation(
          extent={{-7,-7},{7,7}},
          rotation=0,
          origin={-323,-65})));
    Controllers.HCCC_ctrl.HCCC_ctrl_VN hCCC_ctrl_VN
      annotation (Placement(transformation(extent={{-48,86},{-28,106}})));
    Modelica.Blocks.Sources.RealExpression TinVN(y=TABSVN.Tin[1]) annotation (
        Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=0,
          origin={-8,78})));
    IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVS(
      redeclare package Medium = IDEAS.Media.Water,
      redeclare
        IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
        RadSlaCha,
      allowFlowReversal=false,
      computeFlowResistance=true,
      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
      nDiscr=1,
      A_floor=3.52*5.35,
      nParCir=2,
      m_flow_nominal=0.9783) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=270,
          origin={74,-12})));
    Modelica.Blocks.Sources.RealExpression eVS(y=V.tDCVS.Tset.y - (V.TSensor_VS -
          273.15))
      annotation (Placement(transformation(extent={{160,40},{174,58}})));
    Modelica.Blocks.Logical.Hysteresis H_CVS(uLow=-1, uHigh=1)
      annotation (Placement(transformation(extent={{200,16},{180,36}})));
    Modelica.Blocks.Math.BooleanToReal booleanToRealVSH(realTrue=1, realFalse=0)
      annotation (Placement(transformation(
          extent={{8,-8},{-8,8}},
          rotation=0,
          origin={92,174})));
    Modelica.Blocks.Math.BooleanToReal booleanToRealVSC(realTrue=0, realFalse=1)
      annotation (Placement(transformation(extent={{154,168},{138,184}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval1VS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,-5},{6,5}},
          rotation=-90,
          origin={73,96})));
    IDEAS.Fluid.Actuators.Valves.ThreeWayLinear _3wayVS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=TABSVS.m_flow_nominal,
      dpValve_nominal=100) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={74,72})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval2_VS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,-5},{6,5}},
          rotation=-90,
          origin={75,46})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpVS(
      redeclare package Medium = IDEAS.Media.Water,
      allowFlowReversal=false,
      m_flow_nominal=TABSVS.m_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=TABSVN.dp_nominal + _3wayVN.res3.dp_nominal,
      prescribeSystemPressure=true)                           annotation (
        Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=90,
          origin={74,24})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_VS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-9,-8},{9,8}},
          rotation=-90,
          origin={74,-39})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval3VS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{8,-7},{-8,7}},
          rotation=-90,
          origin={45,42})));
    Controllers.HCCC_ctrl.HCCC_ctrl_VS hCCC_ctrl_VS
      annotation (Placement(transformation(extent={{108,112},{128,132}})));
    Modelica.Blocks.Sources.RealExpression TinVS(y=TABSVS.Tin[1]) annotation (
        Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=0,
          origin={148,108})));
    Controllers.dp_ctrl.dp_ctrl_mSOMMOS_VN dp_ctrl_mSOMMOS_VS
      annotation (Placement(transformation(extent={{106,10},{130,40}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_HH(y=20)
      annotation (Placement(transformation(extent={{-20,62},{-32,74}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_HN(y=756)
      annotation (Placement(transformation(extent={{-14,54},{-26,66}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_HC(y=2740)
      annotation (Placement(transformation(extent={{-8,42},{-22,56}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVS_HH(y=107)
      annotation (Placement(transformation(extent={{154,44},{142,56}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVS_HN(y=4945)
      annotation (Placement(transformation(extent={{160,34},{148,46}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVS_HC(y=20000)
      annotation (Placement(transformation(extent={{162,24},{150,36}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_CH1(y=107)
      annotation (Placement(transformation(extent={{162,12},{152,26}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_CN(y=4945)
      annotation (Placement(transformation(extent={{164,4},{154,18}})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_CN1(y=20000)
      annotation (Placement(transformation(extent={{154,-4},{144,10}})));
    IDEAS.Fluid.HeatExchangers.RadiantSlab.EmbeddedPipe TABSVN(
      redeclare package Medium = IDEAS.Media.Water,
      redeclare
        IDEAS.Fluid.HeatExchangers.RadiantSlab.BaseClasses.FH_ValidationEmpa4_6
        RadSlaCha,
      allowFlowReversal=false,
      m_flow_nominal=0.1505,
      A_floor=3.52*5.35,
      nParCir=2) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={-94,-12})));
    IDEAS.Fluid.Sensors.RelativePressure
                             senRelPre(redeclare package Medium =
          IDEAS.Media.Water)
      "Pressure difference across air system"
      annotation (Placement(transformation(extent={{10,11},{-10,-11}},
          rotation=90,
          origin={-54,7})));
    IDEAS.Fluid.Sensors.RelativePressure
                             senRelPre1(redeclare package Medium =
          IDEAS.Media.Water)
      "Pressure difference across air system"
      annotation (Placement(transformation(extent={{10,11},{-10,-11}},
          rotation=90,
          origin={112,55})));
    IDEAS.Fluid.Sensors.MassFlowRate mH(redeclare package Medium =
          IDEAS.Media.Water)
      annotation (Placement(transformation(extent={{-124,-94},{-144,-114}})));
    IDEAS.Fluid.Sensors.MassFlowRate mC(redeclare package Medium =
          IDEAS.Media.Water)
      annotation (Placement(transformation(extent={{394,-82},{414,-102}})));
    Modelica.Fluid.Valves.ValveLinear valVNH(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=TABSVN.m_flow_nominal) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={-98,126})));
    Modelica.Fluid.Valves.ValveLinear valVNC(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=TABSVN.m_flow_nominal) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={-50,128})));
    Modelica.Fluid.Valves.ValveLinear valVSH(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=TABSVS.m_flow_nominal) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={54,124})));
    Modelica.Fluid.Valves.ValveLinear valVSC(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=TABSVS.m_flow_nominal) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={92,124})));
    Modelica.Blocks.Sources.BooleanExpression booleanExpression2(y=H_CVS.y)
      annotation (Placement(transformation(
          extent={{-7,-6},{7,6}},
          rotation=0,
          origin={-323,-76})));
    IDEAS.Fluid.Sensors.MassFlowRate mVN(redeclare package Medium =
          IDEAS.Media.Water)
      annotation (Placement(transformation(extent={{-10,10},{10,-10}},
          rotation=-90,
          origin={-94,-70})));
    IDEAS.Fluid.Sensors.MassFlowRate mVS(redeclare package Medium =
          IDEAS.Media.Water) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=-90,
          origin={74,-70})));
    inner IDEAS.BoundaryConditions.SimInfoManager sim(filNam=
          Modelica.Utilities.Files.loadResource(
          "modelica://IDEAS/Resources/weatherdata/Uccle.TMY"))
      annotation (Placement(transformation(extent={{-268,296},{-252,312}})));
  IDEAS.Fluid.Sources.Outside out(
      redeclare package Medium = Medium,
      use_C_in=true,
      nPorts=3)
      annotation (Placement(transformation(extent={{-230,270},{-210,290}})));
    IDEAS.Fluid.Actuators.Dampers.PressureIndependent VAVsupply1(
      redeclare package Medium = Medium,
      m_flow_nominal=54*1.2/3600,
      dp_nominal=50,
      dpFixed_nominal=50)
      annotation (Placement(transformation(extent={{-96,336},{-76,356}})));
    IDEAS.Fluid.HeatExchangers.ConstantEffectiveness hex1(
      redeclare package Medium1 = Medium,
      redeclare package Medium2 = Medium,
      m1_flow_nominal=fansupply.m_flow_nominal,
      m2_flow_nominal=fanreturn.m_flow_nominal,
      dp1_nominal=300,
      dp2_nominal=300,
      eps=0.9)
      annotation (Placement(transformation(extent={{-164,268},{-144,288}})));
    IDEAS.Fluid.Actuators.Dampers.PressureIndependent VAVreturn1(
      redeclare package Medium = Medium,
      m_flow_nominal=54*1.2/3600,
      dp_nominal=50,
      dpFixed_nominal=50)
      annotation (Placement(transformation(extent={{-74,298},{-94,318}})));
    IDEAS.Fluid.Actuators.Dampers.PressureIndependent VAVsupply2(
      redeclare package Medium = Medium,
      m_flow_nominal=54*1.2/3600,
      dp_nominal=50,
      dpFixed_nominal=50)
      annotation (Placement(transformation(extent={{-102,252},{-82,272}})));
    IDEAS.Fluid.Actuators.Dampers.PressureIndependent VAVreturn2(
      redeclare package Medium = Medium,
      m_flow_nominal=54*1.2/3600,
      dp_nominal=50,
      dpFixed_nominal=50)
      annotation (Placement(transformation(extent={{-76,212},{-96,232}})));
    IDEAS.Fluid.Movers.FlowControlled_dp fansupply(
      redeclare package Medium = Medium,
      m_flow_nominal=VAVsupply1.m_flow_nominal + VAVsupply2.m_flow_nominal,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
      addPowerToMedium=false,
      dp_nominal=300,
      heads={425,325})
      annotation (Placement(transformation(extent={{-134,306},{-114,326}})));
    IDEAS.Fluid.Movers.FlowControlled_dp fanreturn(
      redeclare package Medium = Medium,
      m_flow_nominal=VAVreturn1.m_flow_nominal + VAVreturn2.m_flow_nominal,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
      addPowerToMedium=false,
      dp_nominal=600)
      annotation (Placement(transformation(extent={{-114,232},{-134,252}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TLVN(redeclare package Medium =
          Medium, m_flow_nominal=VAVsupply1.m_flow_nominal)
      annotation (Placement(transformation(extent={{-14,354},{6,334}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TLVS(redeclare package Medium =
          Medium, m_flow_nominal=VAVsupply1.m_flow_nominal)
      annotation (Placement(transformation(extent={{-18,258},{2,278}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort ALVN(redeclare package Medium =
          Medium, m_flow_nominal=VAVsupply1.m_flow_nominal)
      annotation (Placement(transformation(extent={{-22,328},{-42,308}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort ALVS(redeclare package Medium =
          Medium, m_flow_nominal=VAVsupply1.m_flow_nominal)
      annotation (Placement(transformation(extent={{-16,246},{-36,226}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tincoil_VN(redeclare package Medium
        =        Medium, m_flow_nominal=VAVsupply1.m_flow_nominal)
      annotation (Placement(transformation(extent={{-72,354},{-58,340}})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TincoilVS(redeclare package Medium
        = Medium, m_flow_nominal=VAVsupply1.m_flow_nominal)
      annotation (Placement(transformation(extent={{-76,270},{-64,256}})));
    IDEAS.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
          transformation(extent={{-278,258},{-238,298}}),iconTransformation(
            extent={{-306,24},{-286,44}})));
    IDEAS.Fluid.Actuators.Valves.TwoWayLinear nonbypass(
      redeclare package Medium = Medium,
      m_flow_nominal=VAVsupply1.m_flow_nominal + VAVsupply2.m_flow_nominal,
      dpValve_nominal=1)
      annotation (Placement(transformation(extent={{-192,268},{-172,288}})));
    IDEAS.Fluid.Actuators.Valves.TwoWayLinear bypass(
      redeclare package Medium = Medium,
      m_flow_nominal=VAVsupply1.m_flow_nominal + VAVsupply2.m_flow_nominal,
      dpValve_nominal=1)
      annotation (Placement(transformation(extent={{-196,304},{-176,324}})));
    Modelica.Blocks.Sources.RealExpression ebypass7(y=sim.Te - Tair_ret.T)
      annotation (Placement(transformation(extent={{-300,332},{-280,352}})));
    Controllers.Vent_ctrl.bypass_ctrl bypass_ctrl
      annotation (Placement(transformation(extent={{-260,324},{-240,344}})));
    Modelica.Fluid.Valves.ValveLinear valAHUVNH(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=hexAHUVN.m1_flow_nominal) annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={232,126})));
    IDEAS.Fluid.HeatExchangers.ConstantEffectiveness hexAHUVN(
      redeclare package Medium1 = IDEAS.Media.Water,
      redeclare package Medium2 = Medium,
      allowFlowReversal1=true,
      allowFlowReversal2=true,
      m1_flow_nominal=0.002,
      m2_flow_nominal=VAVsupply1.m_flow_nominal,
      dp1_nominal=10000,
      dp2_nominal=100,
      eps=0.9) annotation (Placement(transformation(
          extent={{14,-15},{-14,15}},
          rotation=90,
          origin={253,-8})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval1AHUVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,-5},{6,5}},
          rotation=-90,
          origin={243,106})));
    Modelica.Fluid.Valves.ValveLinear valAHUVNC(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=hexAHUVN.m1_flow_nominal) annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={268,126})));
    IDEAS.Fluid.Actuators.Valves.ThreeWayLinear _3wayAHUVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=hexAHUVN.m1_flow_nominal,
      dpValve_nominal=100) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={244,84})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval2_AHUVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,5},{6,-5}},
          rotation=-90,
          origin={245,64})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpAHUVN(
      redeclare package Medium = IDEAS.Media.Water,
      allowFlowReversal=false,
      m_flow_nominal=hexAHUVN.m1_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=hexAHUVN.dp1_nominal,
      prescribeSystemPressure=true) annotation (Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=90,
          origin={246,36})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_AHUVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-9,-8},{9,8}},
          rotation=-90,
          origin={244,-45})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval3AHUVN(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{8,7},{-8,-7}},
          rotation=-90,
          origin={219,62})));
    IDEAS.Fluid.Sensors.MassFlowRate mAHUVN(redeclare package Medium =
          IDEAS.Media.Water) annotation (Placement(transformation(
          extent={{-8,8},{8,-8}},
          rotation=-90,
          origin={244,-70})));
    IDEAS.Fluid.Sensors.RelativePressure
                             senRelPre2(redeclare package Medium =
          IDEAS.Media.Water)
      "Pressure difference across air system"
      annotation (Placement(transformation(extent={{10,11},{-10,-11}},
          rotation=90,
          origin={280,47})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVS_HH1(y=if valAHUVNH.opening <
          0.01 and valAHUVNC.opening < 0.01 then 0.0001 else 10000)
      annotation (Placement(transformation(extent={{300,16},{288,28}})));
    Modelica.Blocks.Sources.RealExpression Expr_Tincoil(y=Tincoil_VN.T)
      annotation (Placement(transformation(extent={{36,252},{56,272}})));
    Modelica.Blocks.Sources.BooleanExpression booleanExpression3(y=H_CVN.y)
      annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=0,
          origin={47,271})));
    Modelica.Blocks.Sources.BooleanExpression booleanExpression4(y=H_CVS.y)
      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={46,252})));
    Modelica.Blocks.Sources.RealExpression eVNheat(y=(V.TSensor_VN - 273.15) - V.tDCVN.Tlow.y)
      annotation (Placement(transformation(extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={75,309})));
    Modelica.Blocks.Sources.RealExpression eVNheat1(y=273.15 + V.tDCVN.Tlow.y + 1)
      annotation (Placement(transformation(extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={87,311})));
    Modelica.Blocks.Sources.RealExpression eVSheat(y=(V.TSensor_VS - 273.15) - V.tDCVS.Tlow.y)
      annotation (Placement(transformation(extent={{-7,-9},{7,9}},
          rotation=90,
          origin={83,215})));
    Modelica.Blocks.Sources.RealExpression eVNheat2(y=273.15 + V.tDCVS.Tlow.y + 1)
      annotation (Placement(transformation(extent={{-7,-9},{7,9}},
          rotation=90,
          origin={101,217})));
    Modelica.Blocks.Sources.RealExpression eVNcool(y=V.tDCVN.Tup.y - (V.TSensor_VN
           - 273.15)) annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={105,309})));
    Modelica.Blocks.Sources.RealExpression eVNcool1(y=273.15 + V.tDCVN.Tup.y - 1)
      annotation (Placement(transformation(extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={125,311})));
    Modelica.Blocks.Sources.RealExpression eVScool(y=V.tDCVS.Tup.y - (V.TSensor_VS
           - 273.15)) annotation (Placement(transformation(
          extent={{7,-9},{-7,9}},
          rotation=-90,
          origin={115,211})));
    Modelica.Blocks.Sources.RealExpression eVScool1(y=273.15 + V.tDCVS.Tup.y - 1)
      annotation (Placement(transformation(extent={{7,-9},{-7,9}},
          rotation=-90,
          origin={133,215})));
    Modelica.Blocks.Sources.RealExpression eneedcool_extra(y=(Tincoil_VN.T - 273.15)
           - (V.tDCVN.Tup.y - 1))
                                annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=0,
          origin={67,229})));
    Modelica.Blocks.Sources.RealExpression eneedheat_extra(y=V.tDCVN.Tlow.y + 1 -
          (Tincoil_VN.T - 273.15)) annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=0,
          origin={57,283})));
    Controllers.Vent_ctrl.group_AHU_ctrl group_AHU_ctrl
      annotation (Placement(transformation(extent={{90,244},{126,276}})));
    Modelica.Fluid.Valves.ValveLinear valAHUVSC(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=hexAHUVS.m1_flow_nominal) annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={364,126})));
    Modelica.Fluid.Valves.ValveLinear valAHUVSH(
      redeclare package Medium = IDEAS.Media.Water,
      dp_nominal(displayUnit="Pa") = 100,
      m_flow_nominal=hexAHUVS.m1_flow_nominal) annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={320,126})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval1AHUVS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,-5},{6,5}},
          rotation=-90,
          origin={341,104})));
    IDEAS.Fluid.Actuators.Valves.ThreeWayLinear _3wayAHUVS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=hexAHUVS.m1_flow_nominal,
      dpValve_nominal=100) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={342,82})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval2_AHUVS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,5},{6,-5}},
          rotation=-90,
          origin={343,58})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpAHUVS(
      redeclare package Medium = IDEAS.Media.Water,
      allowFlowReversal=false,
      m_flow_nominal=hexAHUVS.m1_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=hexAHUVS.dp1_nominal,
      prescribeSystemPressure=true) annotation (Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=90,
          origin={342,36})));
    IDEAS.Fluid.HeatExchangers.ConstantEffectiveness hexAHUVS(
      redeclare package Medium1 = IDEAS.Media.Water,
      redeclare package Medium2 = Medium,
      allowFlowReversal1=true,
      allowFlowReversal2=true,
      m1_flow_nominal=0.003,
      m2_flow_nominal=VAVsupply2.m_flow_nominal,
      dp1_nominal=10000,
      dp2_nominal=100,
      eps=0.9) annotation (Placement(transformation(
          extent={{14,-15},{-14,15}},
          rotation=90,
          origin={353,0})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tout_AHUVS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-9,-8},{9,8}},
          rotation=-90,
          origin={344,-33})));
    IDEAS.Fluid.Sensors.MassFlowRate mAHUVS(redeclare package Medium =
          IDEAS.Media.Water) annotation (Placement(transformation(
          extent={{-8,8},{8,-8}},
          rotation=-90,
          origin={344,-68})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tval3AHUVS(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{8,7},{-8,-7}},
          rotation=-90,
          origin={317,62})));
    IDEAS.Fluid.Sensors.RelativePressure
                             senRelPre4(redeclare package Medium =
          IDEAS.Media.Water)
      "Pressure difference across air system"
      annotation (Placement(transformation(extent={{10,11},{-10,-11}},
          rotation=90,
          origin={386,35})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVS_HH2(y=if valAHUVSH.opening <
          0.01 and valAHUVSC.opening < 0.01 then 0.0001 else 10000)
      annotation (Placement(transformation(extent={{386,2},{374,14}})));
    Modelica.Blocks.Sources.RealExpression P_pumpGH(y=pumpGH.P) annotation (
        Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-392,186})));
    Modelica.Blocks.Sources.RealExpression P_HP(y=HP.P) annotation (Placement(
          transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-260,192})));
    Modelica.Blocks.Sources.RealExpression P_pumpHP(y=pumpHP.P) annotation (
        Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-380,188})));
    Modelica.Blocks.Sources.RealExpression P_pumpVN(y=pumpVN.P) annotation (
        Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-368,190})));
    Modelica.Blocks.Sources.RealExpression P_pumpVS(y=pumpVS.P) annotation (
        Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-354,192})));
    Modelica.Blocks.Sources.RealExpression P_pumpAHUVN(y=pumpAHUVN.P) annotation (
       Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-342,192})));
    Modelica.Blocks.Sources.RealExpression P_pumpAHUVS(y=pumpAHUVS.P) annotation (
       Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-326,190})));
    Modelica.Blocks.Sources.RealExpression P_pumpGC(y=pumpGC.P) annotation (
        Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-310,188})));
    Modelica.Blocks.Sources.RealExpression P_fansupply(y=fansupply.P) annotation (
       Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-290,194})));
    Modelica.Blocks.Sources.RealExpression P_fanreturn(y=fanreturn.P) annotation (
       Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-274,194})));
    Controllers.E_calc_V E_calc_V annotation (Placement(transformation(
          extent={{-25,-82},{25,82}},
          rotation=90,
          origin={-336,241})));
    Modelica.Blocks.Continuous.Integrator duration_HP(k=1/3600)
                                                      annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={-248,-96})));
    IDEAS.Fluid.Geothermal.Borefields.OneUTube borFieUTub(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      borFieDat=borFieDat,
      tLoaAgg=5000,
      dynFil=false,
      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
      TExt0_start=TGro)
      "Borefield with a U-tube borehole configuration"
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-380,56})));
    IDEAS.Fluid.Storage.Stratified ST_cold(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=HP.m2_flow_nominal,
      VTan=0.25,
      hTan=0.0135,
      dIns=0.2,
      nSeg=4,
      T_start=283.15)
      annotation (Placement(transformation(extent={{-338,28},{-318,48}})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpBF(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=HP.m2_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=borFieDat.conDat.dp_nominal,
      heads={borFieDat.conDat.dp_nominal}) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={-382,2})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Teva_in(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=HP.m2_flow_nominal,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,5},{6,-5}},
          rotation=0,
          origin={-259,68})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tbor_in(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=HP.m2_flow_nominal,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,5},{6,-5}},
          rotation=90,
          origin={-381,32})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tbor_out(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=HP.m2_flow_nominal,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-6,5},{6,-5}},
          rotation=90,
          origin={-381,84})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tcin(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-9,-8},{9,8}},
          rotation=-90,
          origin={478,63})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort TretC(
      redeclare package Medium = IDEAS.Media.Water,
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{9,8},{-9,-8}},
          rotation=-90,
          origin={464,-57})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tcout(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      m_flow_nominal=1,
      initType=Modelica.Blocks.Types.Init.InitialState) annotation (Placement(
          transformation(
          extent={{-9,-8},{9,8}},
          rotation=-90,
          origin={476,-3})));
    Modelica.Fluid.Valves.ValveLinear valC(
      redeclare package Medium = IDEAS.Media.Antifreeze.PropyleneGlycolWater (
            property_T=293.15, X_a=0.40),
      dp_nominal(displayUnit="Pa") = 1,
      m_flow_nominal=TABSVS.m_flow_nominal) annotation (Placement(transformation(
          extent={{-6,-6},{6,6}},
          rotation=-90,
          origin={476,-68})));
    Modelica.Blocks.Sources.RealExpression dpin_pumpVN_CN2(y=1)
      annotation (Placement(transformation(extent={{504,-78},{494,-64}})));
    Modelica.Blocks.Sources.RealExpression P_pumpBF(y=pumpBF.P) annotation (
        Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-416,188})));
    Controllers.dp_ctrl.dp_ctrl_TsupC dp_ctrl_TsupC
      annotation (Placement(transformation(extent={{444,220},{468,240}})));
    Modelica.Blocks.Sources.RealExpression Tsupc(y=TsupC.T)
      annotation (Placement(transformation(extent={{490,246},{478,258}})));
    Modelica.Blocks.Sources.RealExpression valahuvsc(y=valAHUVSC.opening)
      annotation (Placement(transformation(
          extent={{-6,-6},{6,6}},
          rotation=90,
          origin={446,202})));
    Modelica.Blocks.Sources.RealExpression valahuvNc(y=valAHUVNC.opening)
      annotation (Placement(transformation(
          extent={{-6,-6},{6,6}},
          rotation=90,
          origin={460,202})));
    Modelica.Blocks.Sources.RealExpression valvsc(y=valVSC.opening)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=90,
          origin={458,258})));
    Modelica.Blocks.Sources.RealExpression valvnc(y=valVNC.opening)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=90,
          origin={442,268})));
    Modelica.Blocks.Sources.RealExpression tabsvnus(y=hCCC_ctrl_VN.VNus)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=180,
          origin={422,248})));
    Modelica.Blocks.Sources.RealExpression tabsvsus(y=hCCC_ctrl_VS.VSus)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=180,
          origin={422,236})));
    Modelica.Blocks.Sources.RealExpression ahuvnus(y=group_AHU_ctrl.VNus)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=180,
          origin={422,226})));
    Modelica.Blocks.Sources.RealExpression ahuvsus(y=group_AHU_ctrl.VSus)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=180,
          origin={424,210})));
    Modelica.Blocks.Sources.RealExpression noccVN(y=V.VN.occNum.nOcc) annotation (
       Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={-251,365})));
    Modelica.Blocks.Sources.RealExpression eVNheatlimit(y=sim.Te - (273.15 + V.tDCVN.Tup.y
           + 2)) annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={-269,361})));
    Modelica.Blocks.Sources.RealExpression eVNcoollimit(y=(273.15 + V.tDCVN.Tlow.y
           - 2) - sim.Te) annotation (Placement(transformation(
          extent={{7,-9},{-7,9}},
          rotation=-90,
          origin={-279,299})));
    Controllers.Vent_ctrl.ppm_ctrl_V ppm_ctrl_V
      annotation (Placement(transformation(extent={{-158,340},{-138,360}})));
    Modelica.Blocks.Sources.RealExpression eVNheat3(y=(V.TSensor_VN - 273.15) - V.tDCVN.Tlow.y)
      annotation (Placement(transformation(extent={{-7,-9},{7,9}},
          rotation=0,
          origin={-197,365})));
    Modelica.Blocks.Sources.RealExpression eVNcool2(y=V.tDCVN.Tup.y - (V.TSensor_VN
           - 273.15)) annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=0,
          origin={-199,351})));
    Modelica.Blocks.Sources.RealExpression dpsupplynominal(y=fansupply.dp_nominal)
      annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={-153,381})));
    Modelica.Blocks.Sources.RealExpression dpreturnnominal(y=fanreturn.dp_nominal)
      annotation (Placement(transformation(
          extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={-137,383})));
    IDEAS.Fluid.Sensors.TemperatureTwoPort Tair_ret(redeclare package Medium =
          Medium, m_flow_nominal=VAVsupply1.m_flow_nominal) annotation (Placement(
          transformation(
          extent={{7,7},{-7,-7}},
          rotation=-90,
          origin={-143,259})));
    Modelica.Blocks.Sources.RealExpression eair_ret(y=V.tDCVN.Tset.y - (Tair_ret.T
           - 273.15))
      annotation (Placement(transformation(extent={{-364,300},{-350,318}})));
    Modelica.Blocks.Logical.Hysteresis H_Cair(uLow=-1, uHigh=1)
      annotation (Placement(transformation(extent={{-328,310},{-308,330}})));
    IDEAS.Fluid.Movers.FlowControlled_dp pumpCHEX(
      redeclare package Medium = IDEAS.Media.Water,
      allowFlowReversal=false,
      m_flow_nominal=hex.m1_flow_nominal,
      redeclare IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos25slash1to4 per,
      inputType=IDEAS.Fluid.Types.InputType.Continuous,
      addPowerToMedium=false,
      dp_nominal=hex.dp1_nominal,
      prescribeSystemPressure=false) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={462,-16})));
    Controllers.dp_ctrl.dp_ctrl_pumpcoolinghex dp_ctrl_pumpcoolinghex
      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=-90,
          origin={430,20})));
    Modelica.Blocks.Sources.RealExpression hexdp1(y=hex.dp1)
      annotation (Placement(transformation(extent={{460,8},{448,20}})));
    Modelica.Blocks.Sources.RealExpression valahuvsc_Chex(y=valAHUVSC.opening)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=90,
          origin={418,46})));
    Modelica.Blocks.Sources.RealExpression valahuvnc_Chex(y=valAHUVNC.opening)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=90,
          origin={426,46})));
    Modelica.Blocks.Sources.RealExpression valvnc_Chex(y=valVNC.opening)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=90,
          origin={444,48})));
    Modelica.Blocks.Sources.RealExpression valvsc_Chex(y=valVSC.opening)
      annotation (Placement(transformation(
          extent={{6,-6},{-6,6}},
          rotation=90,
          origin={436,46})));
    Modelica.Blocks.Sources.RealExpression P_pumpChex(y=pumpCHEX.P)
      annotation (Placement(transformation(
          extent={{-8,-6},{8,6}},
          rotation=90,
          origin={-406,176})));
    Controllers.dp_ctrl.dp_ctrl_pumpBF_real dp_ctrl_pumpBF_real annotation (
        Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={-370,-48})));
    Controllers.HP_ctrl.HP_ctrl_stages_V27 HP_ctrl_stages_V27
      annotation (Placement(transformation(extent={{-288,-76},{-258,-40}})));
    Modelica.Blocks.Sources.RealExpression _3VN(y=_3wayVN.y)
      annotation (Placement(transformation(extent={{-332,-34},{-318,-46}})));
    Modelica.Blocks.Sources.RealExpression _3VS(y=_3wayVS.y)
      annotation (Placement(transformation(extent={{-330,-22},{-316,-34}})));
    Modelica.Blocks.Sources.RealExpression VAV_VN(y=1) annotation (Placement(
          transformation(
          extent={{-7,-9},{7,9}},
          rotation=-90,
          origin={-107,381})));
    Modelica.Blocks.Sources.RealExpression eVNheat4(y=(V.TSensor_VS - 273.15) - V.tDCVS.Tlow.y)
      annotation (Placement(transformation(extent={{-6,-8},{6,8}},
          rotation=0,
          origin={-184,342})));
    Modelica.Blocks.Sources.RealExpression eVScool3(y=V.tDCVS.Tup.y - (V.TSensor_VS
           - 273.15)) annotation (Placement(transformation(
          extent={{-5,-8},{5,8}},
          rotation=0,
          origin={-173,332})));
    parameter IDEAS.Fluid.Geothermal.Borefields.Data.Borefield.Example_RG_V
      borFieDat(conDat=
          IDEAS.Fluid.Geothermal.Borefields.Data.Configuration.Example_RG_V())
      annotation (Placement(transformation(extent={{-418,42},{-398,62}})));
    Modelica.Blocks.Sources.RealExpression realExpression1(y=dp_ctrl_TsupC.y)
      annotation (Placement(transformation(
          extent={{7,9},{-7,-9}},
          rotation=-90,
          origin={-395,-87})));
  equation
    connect(Tout_VN.port_b,bou_VN. ports[1])
      annotation (Line(points={{-94,-52},{-94,-118}},color={0,127,255}));
    connect(Tval2_VN.port_b, pumpVN.port_a)
      annotation (Line(points={{-95,40},{-94,40},{-94,30}}, color={0,127,255}));
    connect(_3wayVN.port_2, Tval2_VN.port_a)
      annotation (Line(points={{-96,62},{-96,52},{-95,52}}, color={0,127,255}));
    connect(Tout_VN.port_b, Tval3VN.port_a) annotation (Line(points={{-94,-52},{-140,
            -52},{-140,28}}, color={0,127,255}));
    connect(Tval3VN.port_b, _3wayVN.port_3) annotation (Line(points={{-140,48},{-140,
            72},{-106,72}}, color={0,127,255}));
    connect(_3wayVN.port_1, Tval1VN.port_b) annotation (Line(points={{-96,82},{-96,
            88},{-97,88},{-97,94}}, color={0,127,255}));
    connect(eVN.y, H_CVN.u) annotation (Line(points={{26.7,61},{36,61},{36,42},{34,
            42}}, color={0,0,127}));
    connect(HP.port_b2, Ground_H.ports[1]) annotation (Line(points={{-246,16},
            {-246,-2},{-276,-2},{-276,-12}},
                                      color={0,127,255}));
    connect(TsupH.port_a, HP.port_b1) annotation (Line(points={{-163,142},{
            -234,142},{-234,36}},
                        color={0,127,255}));
    connect(TretHP.port_b, HP.port_a1) annotation (Line(points={{-233,6},{
            -233,15},{-234,15},{-234,16}},
                                  color={0,127,255}));
    connect(TretHP.port_a, pumpHP.port_b) annotation (Line(points={{-233,-6},{-234,
            -6},{-234,-34}},color={0,127,255}));
    connect(H_CVN.y, booleanToRealVNH.u) annotation (Line(points={{11,42},{6,42},{
            6,170},{-34.4,170}}, color={255,0,255}));
    connect(booleanToRealVNC.u, H_CVN.y) annotation (Line(points={{-16.4,126},{6,126},
            {6,42},{11,42}}, color={255,0,255}));
    connect(pumpVN.dp_in, dp_ctrl_mSOMMOS_VN.y) annotation (Line(points={{-82,
            20},{-72,20},{-72,42.85},{-67.8,42.85}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VN.u, H_CVN.y) annotation (Line(points={{-39.84,43},{-19.92,
            43},{-19.92,42},{11,42}}, color={255,0,255}));
    connect(dp_ctrl_mSOMMOS_VN.u4, dpin_pumpVN_CH.y) annotation (Line(points={{
            -39.6,38.8},{-20.5,38.8},{-20.5,39}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VN.u5, dpin_pumpVN_N1.y) annotation (Line(points={{
            -39.6,34},{-28,34},{-28,32},{-20.5,32}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VN.u6, dpin_pumpVN_C1.y) annotation (Line(points={{
            -39.36,29.5},{-32.68,29.5},{-32.68,25},{-26.4,25}}, color={0,0,127}));
    connect(pumpHP.port_a, ST_hot.fluPorVol[3]) annotation (Line(points={{-234,
            -54},{-234,-78},{-180,-78},{-180,36.6667},{-178.6,36.6667}},
                                                                    color={0,127,255}));
    connect(hCCC_ctrl_VN.y, _3wayVN.y) annotation (Line(points={{-49.5,96.1},{-65.75,
            96.1},{-65.75,72},{-84,72}}, color={0,0,127}));
    connect(TinVN.y, hCCC_ctrl_VN.u1) annotation (Line(points={{-19,78},{-26,78},{
            -26,84},{-38,84}}, color={0,0,127}));
    connect(hCCC_ctrl_VN.u, H_CVN.y) annotation (Line(points={{-26,96},{6,96},{6,42},
            {11,42}}, color={255,0,255}));
    connect(TABSVS.heatPortEmb[1], V.gainemb_VS) annotation (Line(points={{64,-12},
            {56,-12},{56,-44.32},{2.9,-44.32}},color={191,0,0}));
    connect(eVS.y, H_CVS.u) annotation (Line(points={{174.7,49},{205.65,49},{205.65,
            26},{202,26}}, color={0,0,127}));
    connect(Tval1VS.port_b, _3wayVS.port_1)
      annotation (Line(points={{73,90},{74,90},{74,82}}, color={0,127,255}));
    connect(_3wayVS.port_2, Tval2_VS.port_a)
      annotation (Line(points={{74,62},{74,52},{75,52}}, color={0,127,255}));
    connect(Tval2_VS.port_b, pumpVS.port_a)
      annotation (Line(points={{75,40},{74,40},{74,34}}, color={0,127,255}));
    connect(pumpVS.port_b, TABSVS.port_a)
      annotation (Line(points={{74,14},{74,-2}}, color={0,127,255}));
    connect(TABSVS.port_b, Tout_VS.port_a)
      annotation (Line(points={{74,-22},{74,-30}}, color={0,127,255}));
    connect(Tout_VS.port_b, Tval3VS.port_a) annotation (Line(points={{74,-48},{46,
            -48},{46,34},{45,34}}, color={0,127,255}));
    connect(Tval3VS.port_b, _3wayVS.port_3) annotation (Line(points={{45,50},{44.5,
            50},{44.5,72},{64,72}}, color={0,127,255}));
    connect(booleanToRealVSC.u, H_CVS.y) annotation (Line(points={{155.6,176},{179,
            176},{179,26}}, color={255,0,255}));
    connect(booleanToRealVSC.u, booleanToRealVSH.u) annotation (Line(points={{155.6,
            176},{128,176},{128,174},{101.6,174}}, color={255,0,255}));
    connect(H_CVS.y, hCCC_ctrl_VS.u) annotation (Line(points={{179,26},{178,26},{178,
            122},{130,122}}, color={255,0,255}));
    connect(TinVS.y, hCCC_ctrl_VS.u1) annotation (Line(points={{137,108},{132,108},
            {132,110},{118,110}}, color={0,0,127}));
    connect(hCCC_ctrl_VS.y, _3wayVS.y) annotation (Line(points={{106.5,122.1},{103.25,
            122.1},{103.25,72},{86,72}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VS.y, pumpVS.dp_in) annotation (Line(points={{104.2,24.85},
            {101.1,24.85},{101.1,24},{86,24}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VN.u3, dpin_pumpVN_HC.y) annotation (Line(points={{-39.6,
            47.5},{-30.8,47.5},{-30.8,49},{-22.7,49}}, color={0,0,127}));
    connect(dpin_pumpVN_HN.y, dp_ctrl_mSOMMOS_VN.u2) annotation (Line(points={{-26.6,
            60},{-34,60},{-34,52.3},{-39.6,52.3}}, color={0,0,127}));
    connect(dpin_pumpVN_HH.y, dp_ctrl_mSOMMOS_VN.u1) annotation (Line(points={{-32.6,
            68},{-36,68},{-36,56.8},{-39.6,56.8}}, color={0,0,127}));
    connect(dpin_pumpVS_HH.y, dp_ctrl_mSOMMOS_VS.u1) annotation (Line(points={{141.4,
            50},{138,50},{138,38.8},{132.4,38.8}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VS.u2, dpin_pumpVS_HN.y) annotation (Line(points={{132.4,
            34.3},{140.2,34.3},{140.2,40},{147.4,40}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VS.u3, dpin_pumpVS_HC.y) annotation (Line(points={{132.4,
            29.5},{142.2,29.5},{142.2,30},{149.4,30}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VS.u, H_CVS.y) annotation (Line(points={{132.16,25},{147.08,
            25},{147.08,26},{179,26}}, color={255,0,255}));
    connect(dpin_pumpVN_CH1.y, dp_ctrl_mSOMMOS_VS.u4) annotation (Line(points={{151.5,
            19},{142.75,19},{142.75,20.8},{132.4,20.8}}, color={0,0,127}));
    connect(dp_ctrl_mSOMMOS_VS.u5, dpin_pumpVN_CN.y) annotation (Line(points={{132.4,
            16},{144,16},{144,11},{153.5,11}}, color={0,0,127}));
    connect(dpin_pumpVN_CN1.y, dp_ctrl_mSOMMOS_VS.u6) annotation (Line(points={{143.5,
            3},{138.75,3},{138.75,11.5},{132.64,11.5}}, color={0,0,127}));
    connect(pumpVN.port_b, TABSVN.port_a)
      annotation (Line(points={{-94,10},{-94,-2}}, color={0,127,255}));
    connect(TABSVN.port_b, Tout_VN.port_a)
      annotation (Line(points={{-94,-22},{-94,-32}}, color={0,127,255}));
    connect(TABSVN.heatPortEmb[1], V.gainemb_VN) annotation (Line(points={{-84,-12},
            {-58,-12},{-58,-44},{-35.26,-44}},    color={191,0,0}));
    connect(TABSVN.port_b, senRelPre.port_b) annotation (Line(points={{-94,-22},{-56,
            -22},{-56,-3},{-54,-3}}, color={0,127,255}));
    connect(senRelPre.p_rel, pumpVN.dpMea) annotation (Line(points={{-63.9,7},{-63.9,
            18.5},{-82,18.5},{-82,28}}, color={0,0,127}));
    connect(TABSVS.port_b, senRelPre1.port_b) annotation (Line(points={{74,-22},{100,
            -22},{100,45},{112,45}},color={0,127,255}));
    connect(senRelPre1.p_rel, pumpVS.dpMea) annotation (Line(points={{102.1,55},{102.1,
            43.5},{86,43.5},{86,32}}, color={0,0,127}));
    connect(TABSVN.port_a, senRelPre.port_a) annotation (Line(points={{-94,-2},{-74,
            -2},{-74,17},{-54,17}}, color={0,127,255}));
    connect(TABSVS.port_a, senRelPre1.port_a) annotation (Line(points={{74,-2},{94,
            -2},{94,65},{112,65}}, color={0,127,255}));
    connect(mH.port_b, ST_hot.port_b) annotation (Line(points={{-144,-104},{-166,-104},
            {-166,36}}, color={0,127,255}));
    connect(TsupH.port_b, valVNH.port_a) annotation (Line(points={{-151,142},{-98,
            142},{-98,136}}, color={0,127,255}));
    connect(valVNH.port_b, Tval1VN.port_a) annotation (Line(points={{-98,116},{-98,
            106},{-97,106}}, color={0,127,255}));
    connect(booleanToRealVNH.y, valVNH.opening) annotation (Line(points={{-52.8,170},
            {-70,170},{-70,126},{-90,126}}, color={0,0,127}));
    connect(valVNC.port_b, Tval1VN.port_a) annotation (Line(points={{-50,118},{-50,
            106},{-97,106}}, color={0,127,255}));
    connect(booleanToRealVNC.y, valVNC.opening) annotation (Line(points={{-34.8,126},
            {-38.4,126},{-38.4,128},{-42,128}}, color={0,0,127}));
    connect(booleanToRealVSH.y, valVSH.opening) annotation (Line(points={{83.2,174},
            {74,174},{74,124},{62,124}}, color={0,0,127}));
    connect(TsupH.port_b, valVSH.port_a) annotation (Line(points={{-151,142},{54,142},
            {54,134}}, color={0,127,255}));
    connect(booleanToRealVSC.y, valVSC.opening) annotation (Line(points={{137.2,176},
            {118,176},{118,124},{100,124}},color={0,0,127}));
    connect(valVSC.port_b, Tval1VS.port_a) annotation (Line(points={{92,114},{80,114},
            {80,102},{73,102}}, color={0,127,255}));
    connect(valVSH.port_b, Tval1VS.port_a) annotation (Line(points={{54,114},{64,114},
            {64,102},{73,102}}, color={0,127,255}));
    connect(Tout_VN.port_b, mVN.port_a)
      annotation (Line(points={{-94,-52},{-94,-60}}, color={0,127,255}));
    connect(mVN.port_b, mH.port_a) annotation (Line(points={{-94,-80},{-94,-104},{
            -124,-104}}, color={0,127,255}));
    connect(Tout_VS.port_b, mVS.port_a)
      annotation (Line(points={{74,-48},{74,-60}}, color={0,127,255}));
    connect(mH.port_a, mVS.port_b) annotation (Line(points={{-124,-104},{74,-104},
            {74,-80}}, color={0,127,255}));
    connect(out.weaBus,sim. weaDatBus) annotation (Line(
        points={{-230,280.2},{-230,304},{-252.08,304}},
        color={255,204,51},
        thickness=0.5));
    connect(out.C_in[1],weaBus. CEnv) annotation (Line(points={{-232,272},{-258,272},
            {-258,278}},          color={0,0,127}), Text(
        string="%second",
        index=1,
        extent={{-6,3},{-6,3}},
        horizontalAlignment=TextAlignment.Right));
    connect(weaBus,out. weaBus) annotation (Line(
        points={{-258,278},{-230,278},{-230,280.2}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}},
        horizontalAlignment=TextAlignment.Right));
    connect(fansupply.port_b,VAVsupply1. port_a) annotation (Line(points={{-114,316},
            {-102,316},{-102,346},{-96,346}},
                                            color={0,127,255}));
    connect(fansupply.port_b,VAVsupply2. port_a) annotation (Line(points={{-114,316},
            {-102,316},{-102,262}},         color={0,127,255}));
    connect(out.ports[1], hex1.port_b2) annotation (Line(points={{-210,282.667},
            {-198,282.667},{-198,250},{-164,250},{-164,272}},
                                              color={0,127,255}));
    connect(hex1.port_b1, fansupply.port_a) annotation (Line(points={{-144,284},{-144,
            316},{-134,316}},                       color={0,127,255}));
    connect(VAVsupply1.y,VAVreturn1. y)
      annotation (Line(points={{-86,358},{-86,340},{-84,340},{-84,320}},
                                                               color={0,0,127}));
    connect(VAVsupply2.y,VAVreturn2. y)
      annotation (Line(points={{-92,274},{-92,254},{-86,254},{-86,234}},
                                                     color={0,0,127}));
    connect(fanreturn.port_a,VAVreturn2. port_b) annotation (Line(points={{-114,242},
            {-110,242},{-110,222},{-96,222}},       color={0,127,255}));
    connect(VAVreturn1.port_b,VAVreturn2. port_b) annotation (Line(points={{-94,308},
            {-110,308},{-110,222},{-96,222}},     color={0,127,255}));
    connect(ALVN.port_b, VAVreturn1.port_a) annotation (Line(points={{-42,318},
            {-58,318},{-58,308},{-74,308}}, color={0,127,255}));
    connect(ALVS.port_b, VAVreturn2.port_a) annotation (Line(points={{-36,236},
            {-56,236},{-56,222},{-76,222}}, color={0,127,255}));
    connect(VAVsupply1.port_b, Tincoil_VN.port_a) annotation (Line(points={{
            -76,346},{-74,346},{-74,347},{-72,347}}, color={0,127,255}));
    connect(VAVsupply2.port_b, TincoilVS.port_a) annotation (Line(points={{
            -82,262},{-80,262},{-80,263},{-76,263}}, color={0,127,255}));
    connect(V.port_VNin, TLVN.port_b) annotation (Line(points={{-28.24,-15.36},{-28.24,
            202.32},{6,202.32},{6,344}},         color={0,127,255}));
    connect(V.port_VNout, ALVN.port_a) annotation (Line(points={{-23.92,-15.36},{-23.92,
            151.32},{-22,151.32},{-22,318}},                 color={0,127,255}));
    connect(TLVS.port_b, V.port_VSin1) annotation (Line(points={{2,268},{20,268},{
            20,-15.36},{-10.96,-15.36}},       color={0,127,255}));
    connect(ALVS.port_a, V.port_VSout) annotation (Line(points={{-16,236},{-4,236},
            {-4,-15.36},{-5.56,-15.36}},      color={0,127,255}));
    connect(out.ports[2], nonbypass.port_a) annotation (Line(points={{-210,280},{-202,
            280},{-202,278},{-192,278}}, color={0,127,255}));
    connect(nonbypass.port_b, hex1.port_a1) annotation (Line(points={{-172,278},{-172,
            284},{-164,284}}, color={0,127,255}));
    connect(out.ports[3], bypass.port_a) annotation (Line(points={{-210,277.333},
            {-204,277.333},{-204,314},{-196,314}},color={0,127,255}));
    connect(bypass.port_b, fansupply.port_a)
      annotation (Line(points={{-176,314},{-156,314},{-156,316},{-134,316}},
                                                       color={0,127,255}));
    connect(ebypass7.y, bypass_ctrl.u1) annotation (Line(points={{-279,342},{
            -272,342},{-272,336.364},{-261.333,336.364}},
                                             color={0,0,127}));
    connect(bypass_ctrl.y1, nonbypass.y) annotation (Line(points={{-239.067,
            329.455},{-209.3,329.455},{-209.3,290},{-182,290}},
                                                    color={0,0,127}));
    connect(bypass_ctrl.y, bypass.y) annotation (Line(points={{-239.067,337.091},
            {-187.3,337.091},{-187.3,326},{-186,326}},
                                             color={0,0,127}));
    connect(valVSH.port_a, valAHUVNH.port_a) annotation (Line(points={{54,134},{54,
            142},{232,142},{232,136}}, color={0,127,255}));
    connect(valAHUVNH.port_b, Tval1AHUVN.port_a) annotation (Line(points={{232,116},
            {238,116},{238,112},{243,112}}, color={0,127,255}));
    connect(valAHUVNC.port_b, Tval1AHUVN.port_a) annotation (Line(points={{268,116},
            {268,112},{243,112}}, color={0,127,255}));
    connect(Tval1AHUVN.port_b, _3wayAHUVN.port_1) annotation (Line(points={{243,100},
            {244,100},{244,94}}, color={0,127,255}));
    connect(_3wayAHUVN.port_2, Tval2_AHUVN.port_a)
      annotation (Line(points={{244,74},{244,70},{245,70}}, color={0,127,255}));
    connect(Tval2_AHUVN.port_b, pumpAHUVN.port_a)
      annotation (Line(points={{245,58},{246,58},{246,46}}, color={0,127,255}));
    connect(hexAHUVN.port_b1, Tout_AHUVN.port_a)
      annotation (Line(points={{244,-22},{244,-36}}, color={0,127,255}));
    connect(Tout_AHUVN.port_b, Tval3AHUVN.port_a) annotation (Line(points={{244,-54},
            {220,-54},{220,54},{219,54}}, color={0,127,255}));
    connect(Tval3AHUVN.port_b, _3wayAHUVN.port_3) annotation (Line(points={{219,70},
            {219,83},{234,83},{234,84}}, color={0,127,255}));
    connect(Tout_AHUVN.port_b, mAHUVN.port_a)
      annotation (Line(points={{244,-54},{244,-62}}, color={0,127,255}));
    connect(mVN.port_b, mC.port_a) annotation (Line(points={{-94,-80},{-94,
            -92},{394,-92}},
                   color={0,127,255}));
    connect(mVS.port_b, mC.port_a)
      annotation (Line(points={{74,-80},{74,-92},{394,-92}}, color={0,127,255}));
    connect(mAHUVN.port_b, mC.port_a) annotation (Line(points={{244,-78},{244,
            -92},{394,-92}},
                        color={0,127,255}));
    connect(mAHUVN.port_b, mH.port_a) annotation (Line(points={{244,-78},{244,-104},
            {-124,-104}}, color={0,127,255}));
    connect(senRelPre2.port_a, hexAHUVN.port_a1) annotation (Line(points={{280,57},
            {268,57},{268,10},{256,10},{256,6},{244,6}}, color={0,127,255}));
    connect(hexAHUVN.port_b1, senRelPre2.port_b) annotation (Line(points={{244,-22},
            {254,-22},{254,-36},{280,-36},{280,37}}, color={0,127,255}));
    connect(senRelPre2.p_rel, pumpAHUVN.dpMea) annotation (Line(points={{270.1,
            47},{263.05,47},{263.05,44},{258,44}},
                                               color={0,0,127}));
    connect(hexAHUVN.port_a2, Tincoil_VN.port_b) annotation (Line(points={{262,-22},
            {262,-54},{302,-54},{302,376},{-58,376},{-58,347}}, color={0,127,255}));
    connect(hexAHUVN.port_b2, TLVN.port_a) annotation (Line(points={{262,6},{262,362},
            {-20,362},{-20,344},{-14,344}}, color={0,127,255}));
    connect(TLVN.T, group_AHU_ctrl.TLVN) annotation (Line(points={{-4,333},{116,
            333},{116,277.778},{117.086,277.778}},
                                    color={0,0,127}));
    connect(eVNcool1.y, group_AHU_ctrl.Tcool_ventVN) annotation (Line(points={{125,
            303.3},{125,295.65},{110.229,295.65},{110.229,277.6}},
                                                               color={0,0,127}));
    connect(eVNcool.y, group_AHU_ctrl.eVNcool) annotation (Line(points={{105,
            301.3},{105,292.65},{104.571,292.65},{104.571,277.6}},
                                                    color={0,0,127}));
    connect(eVNheat1.y, group_AHU_ctrl.Theat_ventVN) annotation (Line(points={{87,
            303.3},{87,292.65},{97.2,292.65},{97.2,277.6}},    color={0,0,127}));
    connect(eVNheat.y, group_AHU_ctrl.eVNheat) annotation (Line(points={{75,
            301.3},{75,289.65},{92.0571,289.65},{92.0571,277.956}},
                                                        color={0,0,127}));
    connect(eneedheat_extra.y, group_AHU_ctrl.e_vent_VNheat) annotation (Line(
          points={{64.7,283},{72.65,283},{72.65,273.867},{88.4571,273.867}},
                                                                          color={0,
            0,127}));
    connect(group_AHU_ctrl.HCVN, booleanExpression3.y) annotation (Line(points={{88.2857,
            268.889},{88.2857,271},{54.7,271}},    color={255,0,255}));
    connect(Expr_Tincoil.y, group_AHU_ctrl.Tincoil_VN)
      annotation (Line(points={{57,262},{72,262},{72,263.556},{88.2857,263.556}},
                                                     color={0,0,127}));
    connect(booleanExpression4.y, group_AHU_ctrl.HCVS) annotation (Line(points={{57,252},
            {68,252},{68,258.222},{88.2857,258.222}},
                                                 color={255,0,255}));
    connect(eneedcool_extra.y, group_AHU_ctrl.e_vent_VNcool) annotation (Line(
          points={{74.7,229},{88.2857,229},{88.2857,253.778}},
                                                    color={0,0,127}));
    connect(eVSheat.y, group_AHU_ctrl.eVSheat) annotation (Line(points={{83,
            222.7},{92.5,222.7},{92.5,242.044},{91.7143,242.044}},
                                                  color={0,0,127}));
    connect(eVNheat2.y, group_AHU_ctrl.Theat_ventVS) annotation (Line(points={{101,
            224.7},{101,231.35},{98.2286,231.35},{98.2286,242.044}},
                                                             color={0,0,127}));
    connect(eVScool.y, group_AHU_ctrl.eVScool) annotation (Line(points={{115,
            218.7},{115,230.35},{104.743,230.35},{104.743,242.044}},
                                                      color={0,0,127}));
    connect(eVScool1.y, group_AHU_ctrl.Tcool_ventVS) annotation (Line(points={{133,
            222.7},{133,238},{109.543,238},{109.543,242.222}},
                                                         color={0,0,127}));
    connect(group_AHU_ctrl.y, _3wayAHUVN.y) annotation (Line(points={{128.057,
            273.511},{128.057,272},{256,272},{256,84}},
                                               color={0,0,127}));
    connect(group_AHU_ctrl.y2, valAHUVNH.opening) annotation (Line(points={{128.057,
            261.244},{239.9,261.244},{239.9,126},{240,126}}, color={0,0,127}));
    connect(group_AHU_ctrl.y3, valAHUVNC.opening) annotation (Line(points={{128.057,
            256.267},{128.057,255.6},{276,255.6},{276,126}}, color={0,0,127}));
    connect(pumpAHUVN.dp_in, dpin_pumpVS_HH1.y) annotation (Line(points={{258,36},
            {260,36},{260,22},{287.4,22}}, color={0,0,127}));
    connect(pumpAHUVN.port_b, hexAHUVN.port_a1)
      annotation (Line(points={{246,26},{246,16},{244,16},{244,6}},
                                                  color={0,127,255}));
    connect(valAHUVNH.port_a, valAHUVSH.port_a) annotation (Line(points={{232,136},
            {232,142},{320,142},{320,136}}, color={0,127,255}));
    connect(valAHUVSH.port_b, Tval1AHUVS.port_a) annotation (Line(points={{320,116},
            {330,116},{330,110},{341,110}}, color={0,127,255}));
    connect(valAHUVSC.port_b, Tval1AHUVS.port_a) annotation (Line(points={{364,116},
            {350,116},{350,110},{341,110}}, color={0,127,255}));
    connect(Tval1AHUVS.port_b, _3wayAHUVS.port_1)
      annotation (Line(points={{341,98},{342,98},{342,92}}, color={0,127,255}));
    connect(_3wayAHUVS.port_2, Tval2_AHUVS.port_a)
      annotation (Line(points={{342,72},{343,72},{343,64}}, color={0,127,255}));
    connect(Tval2_AHUVS.port_b, pumpAHUVS.port_a)
      annotation (Line(points={{343,52},{342,52},{342,46}}, color={0,127,255}));
    connect(pumpAHUVS.port_b, hexAHUVS.port_a1)
      annotation (Line(points={{342,26},{344,26},{344,14}}, color={0,127,255}));
    connect(hexAHUVS.port_b1, Tout_AHUVS.port_a)
      annotation (Line(points={{344,-14},{344,-24}}, color={0,127,255}));
    connect(mAHUVS.port_a, Tout_AHUVS.port_b)
      annotation (Line(points={{344,-60},{344,-42}}, color={0,127,255}));
    connect(mAHUVS.port_b, mC.port_a) annotation (Line(points={{344,-76},{344,
            -92},{394,-92}},
                        color={0,127,255}));
    connect(mH.port_a, mC.port_a) annotation (Line(points={{-124,-104},{344,
            -104},{344,-92},{394,-92}},
                                  color={0,127,255}));
    connect(Tval3AHUVS.port_b, _3wayAHUVS.port_3) annotation (Line(points={{317,70},
            {318,70},{318,82},{332,82}}, color={0,127,255}));
    connect(Tval3AHUVS.port_a, Tout_AHUVS.port_b) annotation (Line(points={{317,54},
            {318,54},{318,-42},{344,-42}}, color={0,127,255}));
    connect(senRelPre4.port_a, hexAHUVS.port_a1) annotation (Line(points={{386,45},
            {366,45},{366,22},{356,22},{356,14},{344,14}}, color={0,127,255}));
    connect(hexAHUVS.port_b1, senRelPre4.port_b) annotation (Line(points={{344,-14},
            {356,-14},{356,-32},{386,-32},{386,25}}, color={0,127,255}));
    connect(senRelPre4.p_rel, pumpAHUVS.dpMea) annotation (Line(points={{376.1,35},
            {373.05,35},{373.05,44},{354,44}}, color={0,0,127}));
    connect(dpin_pumpVS_HH2.y, pumpAHUVS.dp_in) annotation (Line(points={{373.4,8},
            {370,8},{370,36},{354,36}},  color={0,0,127}));
    connect(TincoilVS.port_b, hexAHUVS.port_a2) annotation (Line(points={{-64,263},
            {-64,302},{410,302},{410,-56},{362,-56},{362,-14}}, color={0,127,255}));
    connect(hexAHUVS.port_b2, TLVS.port_a) annotation (Line(points={{362,14},{396,
            14},{396,276},{-24,276},{-24,268},{-18,268}}, color={0,127,255}));
    connect(group_AHU_ctrl.y1, _3wayAHUVS.y) annotation (Line(points={{127.886,
            267.822},{355.943,267.822},{355.943,82},{354,82}},
                                                      color={0,0,127}));
    connect(group_AHU_ctrl.y4, valAHUVSH.opening) annotation (Line(points={{127.886,
            251.289},{327.943,251.289},{327.943,126},{328,126}}, color={0,0,127}));
    connect(group_AHU_ctrl.y5, valAHUVSC.opening) annotation (Line(points={{128.057,
            246.311},{375.029,246.311},{375.029,126},{372,126}}, color={0,0,127}));
    connect(TLVS.T, group_AHU_ctrl.TLVS) annotation (Line(points={{-8,279},{-8,
            310},{136,310},{136,277.778},{122.4,277.778}},
                                                      color={0,0,127}));
    connect(P_pumpGH.y, E_calc_V.PumpGH) annotation (Line(points={{-392,194.8},
            {-392,212.538},{-391.909,212.538}},
                                          color={0,0,127}));
    connect(P_pumpHP.y, E_calc_V.PumpHP) annotation (Line(points={{-380,196.8},
            {-374.764,196.8},{-374.764,212.538}},
                                        color={0,0,127}));
    connect(P_pumpVN.y, E_calc_V.pumpVN) annotation (Line(points={{-368,198.8},
            {-368,207.4},{-362.091,207.4},{-362.091,212.923}},
                                                         color={0,0,127}));
    connect(P_pumpVS.y, E_calc_V.PumpVS) annotation (Line(points={{-354,200.8},
            {-354,213.115},{-348.3,213.115}},        color={0,0,127}));
    connect(P_pumpAHUVN.y, E_calc_V.PumpAHUVN) annotation (Line(points={{-342,
            200.8},{-342,205.4},{-333.391,205.4},{-333.391,213.115}},
                                                               color={0,0,127}));
    connect(P_pumpAHUVS.y, E_calc_V.PumpAHUVS) annotation (Line(points={{-326,
            198.8},{-326,204},{-318,204},{-318,212},{-317.364,212},{-317.364,
            212.923}},                                     color={0,0,127}));
    connect(P_pumpGC.y, E_calc_V.PumpGC) annotation (Line(points={{-310,196.8},
            {-306,196.8},{-306,213.115},{-302.827,213.115}},
                                                       color={0,0,127}));
    connect(P_fansupply.y, E_calc_V.Fansupply) annotation (Line(points={{-290,
            202.8},{-290,213.308},{-288.291,213.308}},     color={0,0,127}));
    connect(P_fanreturn.y, E_calc_V.Fanreturn) annotation (Line(points={{-274,
            202.8},{-274,213.115},{-272.264,213.115}},
                                                color={0,0,127}));
    connect(P_HP.y, E_calc_V.HP) annotation (Line(points={{-260,200.8},{-255,
            200.8},{-255,212.538},{-256.236,212.538}},
                                                color={0,0,127}));
    connect(HP.y, duration_HP.u) annotation (Line(points={{-237,14},{-248,14},
            {-248,-84}},
                   color={0,0,127}));
    connect(HP.port_b2, ST_cold.port_b) annotation (Line(points={{-246,16},{
            -246,-2},{-318,-2},{-318,38}},
                                  color={0,127,255}));
    connect(ST_cold.fluPorVol[3], pumpBF.port_a) annotation (Line(points={{-330.6,
            38.25},{-330,38.25},{-330,-16},{-382,-16},{-382,-8}}, color={0,127,255}));
    connect(ST_cold.port_a, pumpGH.port_a) annotation (Line(points={{-338,38},{-338,
            68},{-296,68}}, color={0,127,255}));
    connect(pumpGH.port_b, Teva_in.port_a)
      annotation (Line(points={{-276,68},{-265,68}}, color={0,127,255}));
    connect(Teva_in.port_b, HP.port_a2) annotation (Line(points={{-253,68},{
            -246,68},{-246,36}},
                        color={0,127,255}));
    connect(Tbor_in.port_b, borFieUTub.port_a) annotation (Line(points={{-381,38},
            {-380,38},{-380,46}}, color={0,127,255}));
    connect(Tbor_in.port_a, pumpBF.port_b) annotation (Line(points={{-381,26},{-382,
            26},{-382,12}}, color={0,127,255}));
    connect(borFieUTub.port_b, Tbor_out.port_a) annotation (Line(points={{-380,66},
            {-380,78},{-381,78}},           color={0,127,255}));
    connect(ST_cold.fluPorVol[2], Tbor_out.port_b) annotation (Line(points={{-330.6,
            37.75},{-330,37.75},{-330,98},{-382,98},{-382,90},{-381,90}}, color={0,
            127,255}));
    connect(ST_cold.port_b, pumpGC.port_a) annotation (Line(points={{-318,38},{-320,
            38},{-320,190},{480,190},{480,102}}, color={0,127,255}));
    connect(mC.port_b, TretC.port_a) annotation (Line(points={{414,-92},{464,
            -92},{464,-66}},
                        color={0,127,255}));
    connect(pumpGC.port_b, Tcin.port_a)
      annotation (Line(points={{480,82},{480,72},{478,72}}, color={0,127,255}));
    connect(Tcin.port_b, hex.port_a2)
      annotation (Line(points={{478,54},{478,40},{476,40}}, color={0,127,255}));
    connect(hex.port_b2, Tcout.port_a)
      annotation (Line(points={{476,20},{476,6}}, color={0,127,255}));
    connect(dpin_pumpVN_CN2.y, valC.opening) annotation (Line(points={{493.5,-71},
            {493.75,-71},{493.75,-68},{480.8,-68}}, color={0,0,127}));
    connect(Tcout.port_b, valC.port_a)
      annotation (Line(points={{476,-12},{476,-62}}, color={0,127,255}));
    connect(ST_cold.port_a, valC.port_b) annotation (Line(points={{-338,38},{-338,
            -122},{476,-122},{476,-74}}, color={0,127,255}));
    connect(P_pumpBF.y, E_calc_V.PumpBF) annotation (Line(points={{-416,196.8},
            {-416,213.308},{-416.509,213.308}},
                                          color={0,0,127}));
    connect(hex.port_b1, TsupC.port_a)
      annotation (Line(points={{464,40},{464,54},{463,54}}, color={0,127,255}));
    connect(TsupC.port_b, valAHUVSC.port_a) annotation (Line(points={{463,66},{462,
            66},{462,160},{364,160},{364,136}}, color={0,127,255}));
    connect(valAHUVNC.port_a, TsupC.port_b) annotation (Line(points={{268,136},{268,
            160},{462,160},{462,66},{463,66}}, color={0,127,255}));
    connect(valVSC.port_a, TsupC.port_b) annotation (Line(points={{92,134},{92,160},
            {462,160},{462,66},{463,66}}, color={0,127,255}));
    connect(valVNC.port_a, TsupC.port_b) annotation (Line(points={{-50,138},{-48,138},
            {-48,160},{462,160},{462,66},{463,66}}, color={0,127,255}));
    connect(Tsupc.y,dp_ctrl_TsupC. TsupC) annotation (Line(points={{477.4,252},
            {472,252},{472,242.2},{465.785,242.2}},
                                                  color={0,0,127}));
    connect(valahuvsc.y,dp_ctrl_TsupC. AHUVSvalC) annotation (Line(points={{446,
            208.6},{446,217.8},{447.138,217.8}},   color={0,0,127}));
    connect(valahuvNc.y,dp_ctrl_TsupC. AHUVNvalC) annotation (Line(points={{460,
            208.6},{458,208.6},{458,217.8},{453.231,217.8}}, color={0,0,127}));
    connect(valvsc.y,dp_ctrl_TsupC. valVSC) annotation (Line(points={{458,251.4},{
            456,251.4},{456,242},{453.6,242}},         color={0,0,127}));
    connect(valvnc.y,dp_ctrl_TsupC. valVNC) annotation (Line(points={{442,261.4},
            {442,252.7},{446.769,252.7},{446.769,242}},color={0,0,127}));
    connect(tabsvnus.y,dp_ctrl_TsupC. TABSVN_us) annotation (Line(points={{428.6,
            248},{436,248},{436,237.6},{442.154,237.6}},   color={0,0,127}));
    connect(tabsvsus.y,dp_ctrl_TsupC. TABSVS_us) annotation (Line(points={{428.6,
            236},{436,236},{436,232.8},{442.154,232.8}},   color={0,0,127}));
    connect(ahuvnus.y,dp_ctrl_TsupC. AHUVN_us) annotation (Line(points={{428.6,
            226},{436.3,226},{436.3,227.6},{442.154,227.6}},   color={0,0,127}));
    connect(ahuvsus.y,dp_ctrl_TsupC. AHUVS_us) annotation (Line(points={{430.6,
            210},{436,210},{436,222},{442.154,222}},   color={0,0,127}));
    connect(pumpGC.dp_in, dp_ctrl_TsupC.y) annotation (Line(points={{492,92},{
            506,92},{506,229.5},{469.015,229.5}},
                                            color={0,0,127}));
    connect(HP.port_b1, ST_hot.port_a) annotation (Line(points={{-234,36},{
            -234,142},{-186,142},{-186,36}},
                                   color={0,127,255}));
    connect(eVNcoollimit.y, bypass_ctrl.Tlimitdown) annotation (Line(points={{-279,
            306.7},{-279.5,306.7},{-279.5,322.182},{-258.133,322.182}}, color={0,0,
            127}));
    connect(eVNheatlimit.y, bypass_ctrl.Tlimitup) annotation (Line(points={{-269,
            353.3},{-262.5,353.3},{-262.5,345.818},{-258.933,345.818}},
                                                                 color={0,0,127}));
    connect(noccVN.y, bypass_ctrl.noccVS) annotation (Line(points={{-251,357.3},
            {-251,352.65},{-252,352.65},{-252,345.818}},   color={0,0,127}));
    connect(eVNheat3.y, ppm_ctrl_V.needheatVN) annotation (Line(points={{-189.3,365},
            {-179.65,365},{-179.65,358.4},{-160.2,358.4}}, color={0,0,127}));
    connect(ppm_ctrl_V.needcoolVN, eVNcool2.y) annotation (Line(points={{-160,351.8},
            {-176,351.8},{-176,351},{-191.3,351}}, color={0,0,127}));
    connect(dpsupplynominal.y, ppm_ctrl_V.dpsupplynominal) annotation (Line(points={
            {-153,373.3},{-153,369.65},{-147,369.65},{-147,362.2}}, color={0,0,127}));
    connect(dpreturnnominal.y, ppm_ctrl_V.dpreturnnominal) annotation (Line(points={
            {-137,375.3},{-137,369.65},{-142,369.65},{-142,362.2}}, color={0,0,127}));
    connect(ppm_ctrl_V.dpsupply, fansupply.dp_in) annotation (Line(points={{-136.2,358.2},
            {-136.2,357.1},{-124,357.1},{-124,328}}, color={0,0,127}));
    connect(ppm_ctrl_V.dpreturn, fanreturn.dp_in) annotation (Line(points={{-136,353},
            {-130,353},{-130,254},{-124,254}}, color={0,0,127}));
    connect(ppm_ctrl_V.y, bypass_ctrl.VAVy) annotation (Line(points={{-136.2,
            349.4},{-190.1,349.4},{-190.1,345.818},{-245.333,345.818}},
                                                                 color={0,0,127}));
    connect(hex1.port_a2, Tair_ret.port_b) annotation (Line(points={{-144,272},{-144,
            266},{-143,266}}, color={0,127,255}));
    connect(Tair_ret.port_a, fanreturn.port_b) annotation (Line(points={{-143,252},
            {-142,252},{-142,242},{-134,242}}, color={0,127,255}));
    connect(eair_ret.y, H_Cair.u) annotation (Line(points={{-349.3,309},{
            -337.65,309},{-337.65,320},{-330,320}},
                                       color={0,0,127}));
    connect(H_Cair.y, bypass_ctrl.u) annotation (Line(points={{-307,320},{
            -283.5,320},{-283.5,330.545},{-261.2,330.545}},
                                                color={255,0,255}));
    connect(TretC.port_b, pumpCHEX.port_a) annotation (Line(points={{464,-48},
            {462,-48},{462,-26},{462,-26}}, color={0,127,255}));
    connect(pumpCHEX.port_b, hex.port_a1) annotation (Line(points={{462,-6},{464,-6},
            {464,20}},                  color={0,127,255}));
    connect(dp_ctrl_pumpcoolinghex.y, pumpCHEX.dp_in) annotation (Line(points=
           {{430,8.8},{430,-16},{450,-16}}, color={0,0,127}));
    connect(hexdp1.y, dp_ctrl_pumpcoolinghex.dp1_coolinghex) annotation (Line(
          points={{447.4,14},{444,14},{444,14.8},{442,14.8}}, color={0,0,127}));
    connect(valahuvsc_Chex.y, dp_ctrl_pumpcoolinghex.valahuVSC) annotation (
        Line(points={{418,39.4},{420,39.4},{420,32},{422,32}}, color={0,0,127}));
    connect(valahuvnc_Chex.y, dp_ctrl_pumpcoolinghex.valahuVNC) annotation (
        Line(points={{426,39.4},{426,36},{428,36},{428,32}}, color={0,0,127}));
    connect(dp_ctrl_pumpcoolinghex.valVNC, valvnc_Chex.y) annotation (Line(
          points={{438.6,32},{442,32},{442,41.4},{444,41.4}}, color={0,0,127}));
    connect(valvsc_Chex.y, dp_ctrl_pumpcoolinghex.valVSC) annotation (Line(
          points={{436,39.4},{436,32},{433.8,32}}, color={0,0,127}));
    connect(P_pumpChex.y, E_calc_V.PumpChex) annotation (Line(points={{-406,
            184.8},{-406,198},{-406,212.923},{-405.327,212.923}}, color={0,0,
            127}));
    connect(pumpBF.dp_in, dp_ctrl_pumpBF_real.y) annotation (Line(points={{-370,2},
            {-370,-18},{-370,-37},{-370,-37}},   color={0,0,127}));
    connect(dp_ctrl_pumpBF_real.VN_needH, booleanExpression1.y) annotation (Line(
          points={{-367,-60},{-366,-60},{-366,-56},{-310,-56},{-310,-65},{-315.3,-65}},
          color={255,0,255}));
    connect(booleanExpression2.y, dp_ctrl_pumpBF_real.VS_needH) annotation (Line(
          points={{-315.3,-76},{-374,-76},{-374,-60},{-372.6,-60}},
                                                                  color={255,0,255}));
    connect(HP_ctrl_stages_V27.y1, HP.y) annotation (Line(points={{-256.7,-58.7},{-256.7,
            -58},{-254,-58},{-254,-20},{-237,-20},{-237,14}}, color={0,0,127}));
    connect(HP_ctrl_stages_V27.y, pumpHP.stage) annotation (Line(points={{-256.8,-66},
            {-252,-66},{-252,-44},{-246,-44}}, color={255,127,0}));
    connect(HP_ctrl_stages_V27.y, pumpGH.stage) annotation (Line(points={{-256.8,-66},
            {-256.8,10},{-286,10},{-286,56}}, color={255,127,0}));
    connect(dp_ctrl_pumpBF_real.HPon, HP_ctrl_stages_V27.y2) annotation (Line(points={
            {-361.4,-59.8},{-354.7,-59.8},{-354.7,-71.8},{-256.4,-71.8}}, color={255,
            0,255}));
    connect(booleanExpression2.y, HP_ctrl_stages_V27.HC_VS) annotation (Line(points={{
            -315.3,-76},{-298,-76},{-298,-66.2},{-290,-66.2}}, color={255,0,255}));
    connect(booleanExpression1.y, HP_ctrl_stages_V27.HC_VN) annotation (Line(points={{
            -315.3,-65},{-300,-65},{-300,-60.8},{-289.8,-60.8}}, color={255,0,255}));
    connect(STT3.y, HP_ctrl_stages_V27.u1) annotation (Line(points={{-317.3,-86},{-296,
            -86},{-296,-70.8},{-290,-70.8}}, color={0,0,127}));
    connect(HP_ctrl_stages_V27.u, STT11.y) annotation (Line(points={{-290,-56.4},{-303,
            -56.4},{-303,-50},{-317.3,-50}}, color={0,0,127}));
    connect(_3VN.y, HP_ctrl_stages_V27.VN) annotation (Line(points={{-317.3,-40},{
            -300,-40},{-300,-50.2},{-290,-50.2}}, color={0,0,127}));
    connect(_3VS.y, HP_ctrl_stages_V27.VS) annotation (Line(points={{-315.3,-28},{
            -298,-28},{-298,-43.4},{-290,-43.4}}, color={0,0,127}));
    connect(ppm_ctrl_V.needheatVS, eVNheat4.y) annotation (Line(points={{-160,346.8},
            {-170,346.8},{-170,342},{-177.4,342}}, color={0,0,127}));
    connect(eVScool3.y, ppm_ctrl_V.needcoolVS) annotation (Line(points={{-167.5,332},
            {-164,332},{-164,340.6},{-160.2,340.6}}, color={0,0,127}));
    connect(ppm_ctrl_V.VAV_VS, VAVsupply2.y) annotation (Line(points={{-136.2,340.8},
            {-136.2,335.4},{-92,335.4},{-92,274}}, color={0,0,127}));
    connect(ppm_ctrl_V.VAV_VN, VAVsupply1.y) annotation (Line(points={{-136.2,
            345.4},{-111.1,345.4},{-111.1,358},{-86,358}},
                                                    color={0,0,127}));
    connect(realExpression1.y, dp_ctrl_pumpBF_real.pumpGCon) annotation (Line(
          points={{-395,-79.3},{-395,-69.65},{-377.2,-69.65},{-377.2,-60.2}},
          color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-420,-140},
              {520,400}})),       Diagram(coordinateSystem(preserveAspectRatio=
              false, extent={{-420,-140},{520,400}}), graphics={Bitmap(extent={{-416,
                -582},{540,-162}}, fileName="modelica://Base_Case_V_HCCC/../../Pictures/Scheme_6_Active_Cool.PNG")}),
      experiment(
        StopTime=31536000,
        __Dymola_NumberOfIntervals=50000,
        Tolerance=1e-05,
        __Dymola_Algorithm="Dassl"),
      __Dymola_Commands(file="../../scripts/scrip_V_17.mos", file=
            "../../scripts/scrip_V_22.mos"));
  end BaseCase_V_HCCC;
  annotation (uses(
      IDEAS(version="2.1.0"),
      Modelica(version="3.2.3"),
      ModelicaServices(version="3.2.3")));
end BaseCase;
